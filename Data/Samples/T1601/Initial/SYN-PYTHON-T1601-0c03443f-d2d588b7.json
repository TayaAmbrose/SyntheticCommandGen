{
  "technique_id": "T1601",
  "platform": "Network Devices",
  "shell": "Python",
  "command": "python3 - <<'PY'\nimport os, sys, subprocess, filecmp, json\nif os.geteuid() != 0:\n    sys.exit(\"root required\")\n\ncur_img = \"/boot/flash/system.img\"\ngold_img = \"/opt/golden/system.img\"\nmnt_cur = \"/mnt/img_current\"\nmnt_gold = \"/mnt/img_golden\"\n\nos.makedirs(mnt_cur, exist_ok=True)\nos.makedirs(mnt_gold, exist_ok=True)\nsubprocess.check_call([\"mount\", \"-o\", \"ro,loop\", cur_img, mnt_cur])\nsubprocess.check_call([\"mount\", \"-o\", \"ro,loop\", gold_img, mnt_gold])\n\ndc = filecmp.dircmp(mnt_cur, mnt_gold)\nreport = {\"left_only\": dc.left_only, \"right_only\": dc.right_only, \"diff_files\": dc.diff_files}\nprint(json.dumps(report))\n\nsubprocess.call([\"umount\", mnt_gold])\nsubprocess.call([\"umount\", mnt_cur])\nPY",
  "explanation": "Mounts current and golden images read-only and computes a directory comparison to identify modified or added files within the system image contents.",
  "rationale_steps": [
    "Require root to loop-mount image files.",
    "Mount both images read-only to prevent changes while inspecting.",
    "Use filecmp.dircmp to enumerate added/removed/different files and output as JSON."
  ],
  "obfuscation_level": "none",
  "id": "SYN-PYTHON-T1601-0c03443f-d2d588b7",
  "source_prompt_hash": "0c03443f",
  "timestamp_utc": "2025-09-30T04:56:19.919567Z",
  "validation": {
    "syntax_ok": null,
    "llm_judge": null,
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}