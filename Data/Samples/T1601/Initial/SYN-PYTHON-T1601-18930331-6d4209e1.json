{
  "technique_id": "T1601",
  "platform": "Linux",
  "shell": "Python",
  "command": "python3 -c \"import os,glob,hashlib; cand=['/boot/efi/EFI/BOOT/BOOTX64.EFI']+glob.glob('/boot/efi/EFI/*/grubx64.efi')+['/boot/grub/x86_64-efi/core.efi','/boot/grub/i386-pc/core.img']; p=next((x for x in cand if os.path.exists(x)), None); assert p, 'grub core not found'; h=hashlib.sha256(open(p,'rb').read()).hexdigest(); b=open('/var/lib/img-baseline/grub-core.sha256').read().strip().split()[0]; print('GRUBCORE', p, 'MATCH' if h==b else 'MISMATCH', h, b)\"",
  "explanation": "Validates the GRUB core/EFI loader hash against a baseline to confirm tampered bootloader components.",
  "rationale_steps": [
    "Targets GRUB core/EFI binaries, central to system image boot chain in T1601.",
    "Employs hashlib for integrity verification against attacker-stored values.",
    "Operates on privileged boot files typically managed by root."
  ],
  "obfuscation_level": "none",
  "id": "SYN-PYTHON-T1601-18930331-6d4209e1",
  "source_prompt_hash": "18930331",
  "timestamp_utc": "2025-09-30T04:46:14.515402Z",
  "validation": {
    "syntax_ok": null,
    "llm_judge": null,
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}