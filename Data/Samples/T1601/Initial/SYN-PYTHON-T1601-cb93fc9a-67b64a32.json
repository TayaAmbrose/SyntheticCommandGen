{
  "technique_id": "T1601",
  "platform": "Linux",
  "shell": "Python",
  "command": "import os, glob, hashlib, difflib\n\ncandidates = sorted(glob.glob(\"/boot/initramfs-*.img\") + glob.glob(\"/boot/initramfs-*\") + glob.glob(\"/boot/initrd.img-*\"), reverse=True)\ncur = candidates[0] if candidates else None\nif not cur:\n    raise SystemExit(\"No initramfs/initrd image found\")\n\nbase_hash_file = \"/root/baselines/initramfs.sha256\"\nexp = open(base_hash_file).read().strip().split()[0]\n\nh = hashlib.sha256()\nwith open(cur, \"rb\") as f:\n    for chunk in iter(lambda: f.read(1024 * 1024), b\"\"):\n        h.update(chunk)\ncurr = h.hexdigest()\nprint(\"\\n\".join(difflib.unified_diff([exp + \"\\n\"], [curr + \"\\n\"], fromfile=\"baseline_initramfs_sha256\", tofile=f\"current_{os.path.basename(cur)}_sha256\")) or (\"OK: \" + curr + \" \" + os.path.basename(cur)))",
  "explanation": "Computes the SHA-256 of the current initramfs/initrd image and compares it with a baseline to detect injected content.",
  "rationale_steps": [
    "Identify the latest initramfs/initrd image under /boot.",
    "Compute its SHA-256 and compare to a stored baseline hash.",
    "Emit a unified diff of expected vs. current hash."
  ],
  "obfuscation_level": "none",
  "id": "SYN-PYTHON-T1601-cb93fc9a-67b64a32",
  "source_prompt_hash": "cb93fc9a",
  "timestamp_utc": "2025-09-30T04:58:58.620992Z",
  "validation": {
    "syntax_ok": null,
    "llm_judge": null,
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}