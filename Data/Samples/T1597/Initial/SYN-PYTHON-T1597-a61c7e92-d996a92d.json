{
  "technique_id": "T1597",
  "platform": "Cloud",
  "shell": "Python",
  "command": "import boto3, json, logging, requests\nlogging.basicConfig(level=logging.INFO)\nsecrets = boto3.client('secretsmanager')\ns3 = boto3.client('s3')\nrf_token = json.loads(secrets.get_secret_value(SecretId='recordedfuture/token')['SecretString'])['token']\ndomain = 'example.com'\nurl = 'https://api.recordedfuture.com/v2/domain/profile'\nparams = {'domain': domain, 'fields': 'risk,intelCard,relatedEntities'}\ntry:\n    r = requests.get(url, params=params, headers={'X-RFToken': rf_token, 'Accept': 'application/json', 'User-Agent': 'cloud-intel-client/1.0'}, timeout=10)\n    r.raise_for_status()\n    data = r.json()\n    bucket = 'intel-results-bucket-123456'; key = f'recordedfuture/{domain}_profile.json'\n    s3.put_object(Bucket=bucket, Key=key, Body=json.dumps({'source': 'recordedfuture', 'domain': domain, 'result': data}), ContentType='application/json')\n    print(json.dumps({'source': 'recordedfuture', 'requestUrl': r.url, 's3Uri': f's3://{bucket}/{key}'}))\nexcept Exception as e:\n    logging.exception('Recorded Future domain profile query failed: %s', e)",
  "explanation": "Uses Recorded Future's closed-source API to retrieve a domain profile (risk score and related entities) and stores structured output in S3. This leverages a commercial subscription dataset for reconnaissance.",
  "rationale_steps": [
    "Use a reputable commercial threat intelligence vendor with authenticated API access.",
    "Request only relevant fields to minimize data volume.",
    "Persist results to cloud storage for auditability and further analysis."
  ],
  "obfuscation_level": "none",
  "id": "SYN-PYTHON-T1597-a61c7e92-d996a92d",
  "source_prompt_hash": "a61c7e92",
  "timestamp_utc": "2025-09-30T06:45:01.363013Z",
  "validation": {
    "syntax_ok": null,
    "llm_judge": null,
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}