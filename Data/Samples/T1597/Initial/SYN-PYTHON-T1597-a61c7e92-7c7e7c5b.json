{
  "technique_id": "T1597",
  "platform": "Cloud",
  "shell": "Python",
  "command": "import boto3, json, logging, requests\nlogging.basicConfig(level=logging.INFO)\nsecrets = boto3.client('secretsmanager')\ns3 = boto3.client('s3')\nshodan_key = json.loads(secrets.get_secret_value(SecretId='shodan/api')['SecretString'])['api_key']\nip = '203.0.113.10'  # example IP\nurl = f'https://api.shodan.io/shodan/host/{ip}'\ntry:\n    r = requests.get(url, params={'key': shodan_key, 'minify': 'true'}, headers={'User-Agent': 'cloud-intel-client/1.0', 'Accept': 'application/json'}, timeout=10)\n    r.raise_for_status()\n    data = r.json()\n    bucket = 'intel-results-bucket-123456'; key = f'shodan/{ip}_host.json'\n    s3.put_object(Bucket=bucket, Key=key, Body=json.dumps({'source': 'shodan', 'ip': ip, 'result': data}), ContentType='application/json')\n    print(json.dumps({'source': 'shodan', 'requestUrl': r.url, 's3Uri': f's3://{bucket}/{key}'}))\nexcept Exception as e:\n    logging.exception('Shodan host query failed: %s', e)",
  "explanation": "Retrieves host intelligence from Shodan's paid API for a specific IP and stores results to S3. This closed-source service supports reconnaissance of exposed services/assets.",
  "rationale_steps": [
    "Authenticate to a commercial scanning database using an API key from Secrets Manager.",
    "Query a single IP to avoid excessive data pulls and logging noise.",
    "Save JSON output with metadata to cloud storage for traceability."
  ],
  "obfuscation_level": "none",
  "id": "SYN-PYTHON-T1597-a61c7e92-7c7e7c5b",
  "source_prompt_hash": "a61c7e92",
  "timestamp_utc": "2025-09-30T06:45:01.363013Z",
  "validation": {
    "syntax_ok": null,
    "llm_judge": null,
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}