{
  "technique_id": "T1597",
  "platform": "Linux",
  "shell": "Python",
  "command": "import os,sys,json,ssl,urllib.request,urllib.parse; d=os.getenv('TARGET_DOMAIN','example.com'); k=os.getenv('FULLHUNT_API_KEY'); \nif not k: print(json.dumps({'source':'fullhunt','query':d,'error':'missing FULLHUNT_API_KEY'}), file=sys.stderr); sys.exit(1); \nurl='https://api.fullhunt.io/v1/domain/'+urllib.parse.quote(d)+'/subdomains'; ctx=ssl.create_default_context(); hdr={'X-Api-Key':k,'Accept':'application/json','User-Agent':'t1597-demo/1.0'}; \ntry:\n    r=urllib.request.urlopen(urllib.request.Request(url,headers=hdr),timeout=20,context=ctx); print(json.dumps({'source':'fullhunt','query':d,'data':json.loads(r.read().decode('utf-8'))}, ensure_ascii=False));\nexcept Exception as e:\n    print(json.dumps({'source':'fullhunt','query':d,'error':str(e)}), file=sys.stderr); sys.exit(2)",
  "explanation": "Uses the FullHunt commercial API to enumerate subdomains for the target, authenticating via an API key header.",
  "rationale_steps": [
    "Authenticate to a closed-source reconnaissance provider (FullHunt).",
    "Retrieve subdomain list to expand asset inventory.",
    "Limit to a single HTTPS request with structured JSON output."
  ],
  "obfuscation_level": "none",
  "id": "SYN-PYTHON-T1597-7be75a85-e6f301bb",
  "source_prompt_hash": "7be75a85",
  "timestamp_utc": "2025-09-30T06:36:34.534600Z",
  "validation": {
    "syntax_ok": null,
    "llm_judge": null,
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}