{
  "technique_id": "T1597",
  "platform": "Cloud",
  "shell": "Python",
  "command": "import boto3, json, logging, requests\nlogging.basicConfig(level=logging.INFO)\nsecrets = boto3.client('secretsmanager')\ns3 = boto3.client('s3')\nsecret = secrets.get_secret_value(SecretId='greynoise/api')['SecretString']\napi_key = json.loads(secret)['api_key']\nip = '198.51.100.14'  # example IP for testing\nbucket = 'intel-results-bucket-123456'\nkey = f'greynoise/{ip}.json'\nurl = f'https://api.greynoise.io/v2/noise/context/ip/{ip}'\ntry:\n    r = requests.get(url, headers={'key': api_key, 'Accept': 'application/json', 'User-Agent': 'cloud-intel-client/1.0'}, timeout=10)\n    r.raise_for_status()\n    data = r.json()\n    s3.put_object(Bucket=bucket, Key=key, Body=json.dumps({'source': 'greynoise', 'ip': ip, 'result': data}), ContentType='application/json')\n    print(json.dumps({'source': 'greynoise', 'requestUrl': url, 's3Uri': f's3://{bucket}/{key}'}))\nexcept Exception as e:\n    logging.exception('GreyNoise query failed: %s', e)",
  "explanation": "Queries the paid GreyNoise API for IP context via HTTPS using an API key stored in AWS Secrets Manager, then stores structured results in S3. This leverages a closed-source commercial dataset for reconnaissance.",
  "rationale_steps": [
    "Securely retrieve vendor API credentials from AWS Secrets Manager.",
    "Call a reputable commercial intelligence API (GreyNoise) over TLS with minimal scope.",
    "Persist structured JSON results to S3 for downstream analysis."
  ],
  "obfuscation_level": "none",
  "id": "SYN-PYTHON-T1597-a61c7e92-6b295365",
  "source_prompt_hash": "a61c7e92",
  "timestamp_utc": "2025-09-30T06:45:01.363013Z",
  "validation": {
    "syntax_ok": null,
    "llm_judge": null,
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}