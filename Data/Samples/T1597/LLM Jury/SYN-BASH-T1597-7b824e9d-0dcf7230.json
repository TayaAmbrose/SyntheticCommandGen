{
  "technique_id": "T1597",
  "platform": "Linux",
  "shell": "Bash",
  "command": "bash -lc 'set -euo pipefail; ts=$(date -u +%FT%TZ); m=$(date -u +%Y-%m); d=$(date -u +%F); dest=/opt/ti/closed/network/$d; mkdir -p \"$dest\"; if scp -q -i /etc/ssh/keys/routeinsights_ed25519 -o StrictHostKeyChecking=yes -o UserKnownHostsFile=/etc/ssh/known_hosts_routeinsights -o IdentitiesOnly=yes feeds@sftp.route-insights.net:/paid/feeds/asn/acme_corp/$m.json{,.sha256} \"$dest\"/ && (cd \"$dest\" && sha256sum -c \"$m.json.sha256\"); then printf \"{\\\"timestamp\\\":\\\"%s\\\",\\\"technique\\\":\\\"T1597\\\",\\\"source\\\":\\\"route-insights\\\",\\\"artifact\\\":\\\"%s/%s.json\\\",\\\"status\\\":\\\"verified\\\"}\\n\" \"$ts\" \"$dest\" \"$m\" | tee -a /var/log/ti_fetch.json; else printf \"{\\\"timestamp\\\":\\\"%s\\\",\\\"technique\\\":\\\"T1597\\\",\\\"source\\\":\\\"route-insights\\\",\\\"status\\\":\\\"error\\\"}\\n\" \"$ts\" >&2; fi'",
  "explanation": "Obtains a subscription ASN/route mapping feed (JSON) for the target org from a closed provider, validating integrity and logging a structured status.",
  "rationale_steps": [
    "Use SSH key-auth to the vendor's SFTP host with strict host key checking.",
    "Target a monthly ASN mapping file specific to the org.",
    "Validate checksum and store securely.",
    "Log success/failure as JSON for traceability."
  ],
  "obfuscation_level": "none",
  "id": "SYN-BASH-T1597-7b824e9d-0dcf7230",
  "source_prompt_hash": "7b824e9d",
  "timestamp_utc": "2025-09-30T06:47:02.517764Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with balanced quotes, proper command separators, valid flags, appropriate error handling with set -euo pipefail, and correct variable usage throughout.",
        "semantic_score": 5,
        "semantic_justification": "The command perfectly aligns with T1597 (Search Closed Sources) by securely retrieving paid threat intelligence from a closed source (route-insights.net) using proper authentication, verifying file integrity with SHA256, and logging structured results.",
        "combined_score": 5.0,
        "confidence": 0.95,
        "timestamp": "2025-10-02T12:51:23.955813Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with balanced quotes, proper command separators, valid flags, and correct bash constructs including brace expansion and subshells.",
        "semantic_score": 5,
        "semantic_justification": "The command directly implements the stated T1597 technique by fetching intelligence from a simulated 'closed source' feed via SCP, validating its integrity, and logging the outcome in a realistic operational manner.",
        "combined_score": 5.0,
        "confidence": 1,
        "timestamp": "2025-10-02T12:51:40.577353Z"
      },
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "The Bash command is well-formed with balanced quoting and parentheses, valid scp options, and correct use of conditionals and expansions.",
        "semantic_score": 4,
        "semantic_justification": "It credibly retrieves a closed-source feed via authenticated SCP, verifies integrity, and logs status consistent with T1597, though writing to /opt and /var/log may fail without elevated permissions.",
        "combined_score": 4.5,
        "confidence": 0.9,
        "timestamp": "2025-10-02T12:52:04.427546Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 4.667,
    "llm_average_score": 4.833,
    "llm_verdict": "likely_match",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}