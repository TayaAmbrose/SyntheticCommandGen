{
  "technique_id": "T1597",
  "platform": "Windows",
  "shell": "Powershell",
  "command": "[Net.ServicePointManager]::SecurityProtocol=[Net.SecurityProtocolType]::Tls12; $ts=Get-Date -Format o; try { $headers=@{ 'Authorization'=\"Bearer $env:ZOOMINFO_TOKEN\"; 'Accept'='application/json' }; $body=@{ website='contoso.com' } | ConvertTo-Json; $r=Invoke-WebRequest -Uri 'https://api.zoominfo.com/enrich/company' -Headers $headers -Method Post -ContentType 'application/json' -Body $body -ErrorAction Stop; ($r.Content | ConvertFrom-Json | Select-Object -ExpandProperty company -ErrorAction SilentlyContinue | Select-Object name,website,employeeCount,revenue,industry | ConvertTo-Json -Depth 6) | Out-File -FilePath \"$env:TEMP\\zoominfo_company_contoso.json\" -Encoding utf8; Add-Content -Path \"$env:TEMP\\recon.log\" -Value \"$ts ZoomInfo success contoso.com\" } catch { Add-Content -Path \"$env:TEMP\\recon.log\" -Value \"$ts ZoomInfo error: $($_.Exception.Message)\" }",
  "explanation": "Uses ZoomInfo's paid enrichment API with Bearer token to obtain company size, revenue, and industry details for the target, returning structured data and logging status.",
  "rationale_steps": [
    "Authenticate to a commercial data broker API using Bearer token.",
    "Post the target website to the enrichment endpoint.",
    "Select high-value company attributes and save as JSON.",
    "Log outcomes to support auditing and reliability."
  ],
  "obfuscation_level": "none",
  "id": "SYN-POWERSHELL-T1597-4422e4ca-6f7544fb",
  "source_prompt_hash": "4422e4ca",
  "timestamp_utc": "2025-09-30T06:22:12.312465Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The PowerShell command is perfectly well-formed with proper syntax, balanced quotes/braces, correct error handling with try/catch, appropriate variable assignments, and proper API request formatting.",
        "semantic_score": 5,
        "semantic_justification": "The command perfectly aligns with T1597 (Search Closed Sources) by using ZoomInfo's paid API with authentication to gather non-public company intelligence data, storing results locally, and maintaining logs of the reconnaissance activity.",
        "combined_score": 5.0,
        "confidence": 0.95,
        "timestamp": "2025-10-02T12:40:13.727116Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with balanced quotes, parentheses, braces, correct command separators, and valid PowerShell cmdlets and parameters.",
        "semantic_score": 5,
        "semantic_justification": "The command perfectly aligns with T1597, using a paid API (ZoomInfo) to gather company intelligence, employing appropriate PowerShell tools and realistic API interaction for the claimed intent.",
        "combined_score": 5.0,
        "confidence": 1,
        "timestamp": "2025-10-02T12:40:22.326252Z"
      },
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "The PowerShell command is well-formed with balanced braces/quotes, valid parameters, and proper try/catch and pipeline usage.",
        "semantic_score": 5,
        "semantic_justification": "It queries a paid ZoomInfo enrichment API using a Bearer token to obtain non-public company data and logs the result, aligning precisely with T1597.",
        "combined_score": 5.0,
        "confidence": 0.9,
        "timestamp": "2025-10-02T12:40:35.807727Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 5.0,
    "llm_average_score": 5.0,
    "llm_verdict": "likely_match",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}