{
  "technique_id": "T1597",
  "platform": "Linux",
  "shell": "Python",
  "command": "import os,sys,json,ssl,urllib.request,urllib.parse; d=os.getenv('TARGET_DOMAIN','example.com'); k=os.getenv('WHOISXML_API_KEY'); \nif not k: print(json.dumps({'source':'whoisxml','query':d,'error':'missing WHOISXML_API_KEY'}), file=sys.stderr); sys.exit(1); \nparams=urllib.parse.urlencode({'apiKey':k,'domainName':d,'outputFormat':'JSON'}); url='https://www.whoisxmlapi.com/whoisserver/WhoisService?'+params; ctx=ssl.create_default_context(); hdr={'Accept':'application/json','User-Agent':'t1597-demo/1.0'}; \ntry:\n    r=urllib.request.urlopen(urllib.request.Request(url,headers=hdr),timeout=15,context=ctx); print(json.dumps({'source':'whoisxml','query':d,'data':json.loads(r.read().decode('utf-8'))}, ensure_ascii=False));\nexcept Exception as e:\n    print(json.dumps({'source':'whoisxml','query':d,'error':str(e)}), file=sys.stderr); sys.exit(2)",
  "explanation": "Queries the paid WhoisXML API for WHOIS data on the target domain using an API key delivered via environment variable.",
  "rationale_steps": [
    "Authenticate to a commercial WHOIS provider (closed source) using API key.",
    "Fetch WHOIS details to inform ownership and registration intelligence.",
    "Use HTTPS, timeouts, and structured JSON handling to remain quiet and reliable."
  ],
  "obfuscation_level": "none",
  "id": "SYN-PYTHON-T1597-7be75a85-4aaf1cea",
  "source_prompt_hash": "7be75a85",
  "timestamp_utc": "2025-09-30T06:36:34.534600Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The Python code is perfectly well-formed with proper syntax, balanced quotes/parentheses, correct exception handling, and appropriate variable declarations and function calls.",
        "semantic_score": 5,
        "semantic_justification": "The command perfectly aligns with T1597 (Search Closed Sources) as it queries WhoisXML API, a paid closed-source intelligence service, using an API key to gather domain information that could be used for reconnaissance.",
        "combined_score": 5.0,
        "confidence": 0.95,
        "timestamp": "2025-10-02T12:15:02.182759Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The Python code is perfectly well-formed with balanced syntax, valid constructs, and is runnable as a single line despite using semicolons to chain statements.",
        "semantic_score": 5,
        "semantic_justification": "The command perfectly aligns with T1597 by querying a paid, closed-source API (WhoisXML) using an API key to collect intelligence (WHOIS data) for potential targeting, directly matching the technique's description.",
        "combined_score": 5.0,
        "confidence": 1,
        "timestamp": "2025-10-02T12:15:08.752397Z"
      },
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "Valid Python with balanced delimiters, proper try/except blocks, and correct use of urllib, SSL context, and JSON handling.",
        "semantic_score": 5,
        "semantic_justification": "It queries a paid closed-source WhoisXML API using an API key to retrieve WHOIS data for a target domain, directly aligning with T1597.",
        "combined_score": 5.0,
        "confidence": 1,
        "timestamp": "2025-10-02T12:15:18.387291Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 5.0,
    "llm_average_score": 5.0,
    "llm_verdict": "likely_match",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}